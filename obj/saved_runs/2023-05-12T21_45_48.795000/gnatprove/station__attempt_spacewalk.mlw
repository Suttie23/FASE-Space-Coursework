module Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type integer = <range -2147483648 2147483647>
  
  val function first : int
    ensures { result = ((- 2147483648) : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = integer,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type integer__ref = { mutable integer__content : integer }
  
  function integer__ref_integer__content__projection (a: integer__ref) : integer =
    a.integer__content
  
  meta "model_projection" function integer__ref_integer__content__projection
  
  meta "inline:no" function integer__ref_integer__content__projection
  
  val integer__havoc (x: integer__ref) : unit
    writes { x }
end

module Standard__positive
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type positive = <range 1 2147483647>
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = positive,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type positive__ref = { mutable positive__content : positive }
  
  function positive__ref_positive__content__projection (a: positive__ref) : positive =
    a.positive__content
  
  meta "model_projection" function positive__ref_positive__content__projection
  
  meta "inline:no" function positive__ref_positive__content__projection
  
  val positive__havoc (x: positive__ref) : unit
    writes { x }
end

module Standard__character
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type character
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (255 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = character,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type character__ref = { mutable character__content : character }
  
  function character__ref_character__content__projection (a: character__ref) : character =
    a.character__content
  
  meta "model_projection" function character__ref_character__content__projection
  
  meta "inline:no" function character__ref_character__content__projection
  
  val character__havoc (x: character__ref) : unit
    writes { x }
end

module Standard__character__rep
  use Standard__character as Standard__character
  use _gnatprove_standard.Main
  use int.Int
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Standard__character.character,
    predicate in_range = Standard__character.in_range
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Array__Int__Standard__character
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  
  function index_I1_one : int = 1 : int
  
  type component_type = Standard__character.character
  
  clone export _gnatprove_standard.Array__1 with
    axiom .,
    type I1.t = int,
    predicate I1.le = Int.( <= ),
    predicate I1.lt = Int.( < ),
    predicate I1.gt = Int.( > ),
    function I1.add = Int.( + ),
    function I1.sub = Int.( - ),
    function I1.one = index_I1_one,
    type component_type = component_type
  
  function bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : bool =
    ((if (a__first <= a__last) then
        ((b__first <= b__last) /\
           ((a__last - a__first) = (b__last - b__first)))
      else (b__first > b__last)) /\
       (forall temp___idx_98 : int.
          if ((a__first <= temp___idx_98) /\ (temp___idx_98 <= a__last)) then
            ((Standard__character__rep.to_rep ((get a) temp___idx_98))
               = (Standard__character__rep.to_rep
                    ((get b) ((b__first - a__first) + temp___idx_98))))
          else true))
  
  val bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : 
    bool
    ensures { result
      =
      ((((((bool_eq (a : map)) (a__first : int)) (a__last : int)) (b : map))
          (b__first : int))
         (b__last : int)) }
  
  axiom bool_eq_rev:
    forall a : map, b : map.
      forall a__first : int, a__last : int, b__first : int, b__last : int.
        ((((((((bool_eq b) b__first) b__last) a) a__first) a__last) = True) ->
           ((if (a__first <= a__last) then
               ((b__first <= b__last) /\
                  ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              (forall temp___idx_98 : int.
                 if ((a__first <= temp___idx_98) /\
                       (temp___idx_98 <= a__last)) then
                   ((Standard__character__rep.to_rep ((get a) temp___idx_98))
                      = (Standard__character__rep.to_rep
                           ((get b) ((b__first - a__first) + temp___idx_98))))
                 else true)))
end

module Standard__integer__rep
  use Standard__integer as Standard__integer
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Standard__integer.integer) : int =
    Standard__integer.integer'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Standard__integer.integer,
    predicate in_range = Standard__integer.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Standard__string
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  use Standard__positive as Standard__positive
  use Standard__character as Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Standard__integer__rep as Standard__integer__rep
  
  type component_type = Standard__character.character
  
  function index_1_id (x: int) : int = x
  
  clone export ada__model.Unconstr_Array with
    axiom .,
    type map = Array__Int__Standard__character.map,
    function array_bool_eq = Array__Int__Standard__character.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__positive.dynamic_property,
    predicate index_rep_le = Int.( <= )
  
  type string__ = __t
  
  meta "model_projection" function to_array
  
  meta "inline:no" function to_array
  
  meta "model_projection" function first
  
  meta "inline:no" function first
  
  meta "model_projection" function last
  
  meta "inline:no" function last
  
  type string____ref = { mutable string____content : string__ }
  
  function string____ref_string____content__projection (a: string____ref) : string__ =
    a.string____content
  
  meta "model_projection" function string____ref_string____content__projection
  
  meta "inline:no" function string____ref_string____content__projection
  
  val string____havoc (x: string____ref) : unit
    writes { x }
end

module Standard_String__Img
  use int.Int
  use Standard__string as Standard__string
  use _gnatprove_standard.Main
  use int.Int
  
  val function to_string (x: Main.__image) (s: int) : Standard__string.string__
  
  val function from_string (x: Standard__string.string__) : Main.__image
  
  axiom to_string__first:
    forall x : Main.__image.
      forall s : int [(to_string x) s].
        ((Standard__string.first ((to_string x) s)) = (1 : int))
  
  axiom to_string__length:
    forall x : Main.__image.
      forall s : int [(to_string x) s].
        ((s >= (0 : int)) ->
           ((Standard__string.length ((to_string x) s)) <= s))
end

module Standard__integer___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__integer as Standard__integer
  
  predicate dynamic_invariant (temp___expr_18: int) (temp___is_init_14: bool) (temp___skip_constant_15: bool) (temp___do_toplevel_16: bool) (temp___do_typ_inv_17: bool) =
    if ((temp___is_init_14 = True) \/
          (Standard__integer.first <= Standard__integer.last)) then
      (((Standard__integer.dynamic_property Standard__integer.first)
          Standard__integer.last)
         temp___expr_18)
    else true
  
  val dynamic_invariant (temp___expr_18: int) (temp___is_init_14: bool) (temp___skip_constant_15: bool) (temp___do_toplevel_16: bool) (temp___do_typ_inv_17: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_18 : int))
                      (temp___is_init_14 : bool))
                     (temp___skip_constant_15 : bool))
                    (temp___do_toplevel_16 : bool))
                   (temp___do_typ_inv_17 : bool)) }
  
  predicate default_initial_assumption (temp___expr_19: int) (temp___skip_top_level_20: bool) =
    true
  
  val default_initial_assumption (temp___expr_19: int) (temp___skip_top_level_20: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_19 : int))
                   (temp___skip_top_level_20 : bool)) }
end

module Array__Int__Standard__character__Concat
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  function index_Index_one : int = 1 : int
  
  clone export _gnatprove_standard.Array__1__Concat with
    axiom .,
    type component_type = Array__Int__Standard__character.component_type,
    type map = Array__Int__Standard__character.map,
    type Index.t = int,
    predicate Index.le = Int.( <= ),
    predicate Index.lt = Int.( < ),
    predicate Index.gt = Int.( > ),
    function Index.add = Int.( + ),
    function Index.sub = Int.( - ),
    function Index.one = index_Index_one,
    function get = Array__Int__Standard__character.get
end

module Station__airlock_door
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type airlock_door
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (1 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = airlock_door,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type airlock_door__ref = { mutable airlock_door__content : airlock_door }
  
  function airlock_door__ref_airlock_door__content__projection (a: airlock_door__ref) : airlock_door =
    a.airlock_door__content
  
  meta "model_projection" function airlock_door__ref_airlock_door__content__projection
  
  meta "inline:no" function airlock_door__ref_airlock_door__content__projection
  
  val airlock_door__havoc (x: airlock_door__ref) : unit
    writes { x }
end

module Station__airlock_door__rep
  use Station__airlock_door as Station__airlock_door
  use _gnatprove_standard.Main
  use int.Int
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Station__airlock_door.airlock_door,
    predicate in_range = Station__airlock_door.in_range
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Station__module
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type module__
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (4 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = module__,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type module____ref = { mutable module____content : module__ }
  
  function module____ref_module____content__projection (a: module____ref) : module__ =
    a.module____content
  
  meta "model_projection" function module____ref_module____content__projection
  
  meta "inline:no" function module____ref_module____content__projection
  
  val module____havoc (x: module____ref) : unit
    writes { x }
end

module Station__module__rep
  use Station__module as Station__module
  use _gnatprove_standard.Main
  use int.Int
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Station__module.module__,
    predicate in_range = Station__module.in_range
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Array__Int__Station__module
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Station__module as Station__module
  use Station__module__rep as Station__module__rep
  
  function index_I1_one : int = 1 : int
  
  type component_type = Station__module.module__
  
  clone export _gnatprove_standard.Array__1 with
    axiom .,
    type I1.t = int,
    predicate I1.le = Int.( <= ),
    predicate I1.lt = Int.( < ),
    predicate I1.gt = Int.( > ),
    function I1.add = Int.( + ),
    function I1.sub = Int.( - ),
    function I1.one = index_I1_one,
    type component_type = component_type
  
  function bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : bool =
    ((if (a__first <= a__last) then
        ((b__first <= b__last) /\
           ((a__last - a__first) = (b__last - b__first)))
      else (b__first > b__last)) /\
       (forall temp___idx_161 : int.
          if ((a__first <= temp___idx_161) /\ (temp___idx_161 <= a__last)) then
            ((Station__module__rep.to_rep ((get a) temp___idx_161))
               = (Station__module__rep.to_rep
                    ((get b) ((b__first - a__first) + temp___idx_161))))
          else true))
  
  val bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : 
    bool
    ensures { result
      =
      ((((((bool_eq (a : map)) (a__first : int)) (a__last : int)) (b : map))
          (b__first : int))
         (b__last : int)) }
  
  axiom bool_eq_rev:
    forall a : map, b : map.
      forall a__first : int, a__last : int, b__first : int, b__last : int.
        ((((((((bool_eq b) b__first) b__last) a) a__first) a__last) = True) ->
           ((if (a__first <= a__last) then
               ((b__first <= b__last) /\
                  ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              (forall temp___idx_161 : int.
                 if ((a__first <= temp___idx_161) /\
                       (temp___idx_161 <= a__last)) then
                   ((Station__module__rep.to_rep ((get a) temp___idx_161))
                      = (Station__module__rep.to_rep
                           ((get b) ((b__first - a__first) + temp___idx_161))))
                 else true)))
end

module Station__module_array
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Station__module as Station__module
  use Array__Int__Station__module as Array__Int__Station__module
  
  type component_type = Station__module.module__
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (3 : int) }
  
  clone export ada__model.Constr_Array with
    axiom .,
    type map = Array__Int__Station__module.map,
    function array_bool_eq = Array__Int__Station__module.bool_eq,
    function first = first,
    function last = last,
    type index_rep_type = int
end

module Station__crewmember
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type crewmember
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (2 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = crewmember,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type crewmember__ref = { mutable crewmember__content : crewmember }
  
  function crewmember__ref_crewmember__content__projection (a: crewmember__ref) : crewmember =
    a.crewmember__content
  
  meta "model_projection" function crewmember__ref_crewmember__content__projection
  
  meta "inline:no" function crewmember__ref_crewmember__content__projection
  
  val crewmember__havoc (x: crewmember__ref) : unit
    writes { x }
end

module Station__crewmember__rep
  use Station__crewmember as Station__crewmember
  use _gnatprove_standard.Main
  use int.Int
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Station__crewmember.crewmember,
    predicate in_range = Station__crewmember.in_range
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Station__crewmemberstatus
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type crewmemberstatus
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (2 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = crewmemberstatus,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type crewmemberstatus__ref = {
                              mutable crewmemberstatus__content :
                                crewmemberstatus
                              }
  
  function crewmemberstatus__ref_crewmemberstatus__content__projection (a: crewmemberstatus__ref) : crewmemberstatus =
    a.crewmemberstatus__content
  
  meta "model_projection" function crewmemberstatus__ref_crewmemberstatus__content__projection
  
  meta "inline:no" function crewmemberstatus__ref_crewmemberstatus__content__projection
  
  val crewmemberstatus__havoc (x: crewmemberstatus__ref) : unit
    writes { x }
end

module Station__crewmemberstatus__rep
  use Station__crewmemberstatus as Station__crewmemberstatus
  use _gnatprove_standard.Main
  use int.Int
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Station__crewmemberstatus.crewmemberstatus,
    predicate in_range = Station__crewmemberstatus.in_range
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Station__crew_record__rep
  use _gnatprove_standard.Main
  use int.Int
  use Station__module as Station__module
  use Station__module__rep as Station__module__rep
  use Station__crewmember as Station__crewmember
  use Station__crewmember__rep as Station__crewmember__rep
  use Station__crewmemberstatus as Station__crewmemberstatus
  use Station__crewmemberstatus__rep as Station__crewmemberstatus__rep
  
  type __split_fields = {
                       rec__station__crew_record__name :
                         Station__crewmember.crewmember;
                       rec__station__crew_record__status :
                         Station__crewmemberstatus.crewmemberstatus;
                       rec__station__crew_record__location :
                         Station__module.module__
                       }
  
  function __split_fields_rec__station__crew_record__name__projection (a: __split_fields) : 
    Station__crewmember.crewmember =
    a.rec__station__crew_record__name
  
  meta "model_projection" function __split_fields_rec__station__crew_record__name__projection
  
  meta "inline:no" function __split_fields_rec__station__crew_record__name__projection
  
  function __split_fields_rec__station__crew_record__status__projection (a: __split_fields) : 
    Station__crewmemberstatus.crewmemberstatus =
    a.rec__station__crew_record__status
  
  meta "model_projection" function __split_fields_rec__station__crew_record__status__projection
  
  meta "inline:no" function __split_fields_rec__station__crew_record__status__projection
  
  function __split_fields_rec__station__crew_record__location__projection (a: __split_fields) : 
    Station__module.module__ =
    a.rec__station__crew_record__location
  
  meta "model_projection" function __split_fields_rec__station__crew_record__location__projection
  
  meta "inline:no" function __split_fields_rec__station__crew_record__location__projection
  
  type __split_fields__ref = {
                            mutable __split_fields__content : __split_fields
                            }
  
  function __split_fields__ref___split_fields__content__projection (a: __split_fields__ref) : __split_fields =
    __split_fields__content a
  
  meta "model_projection" function __split_fields__ref___split_fields__content__projection
  
  meta "inline:no" function __split_fields__ref___split_fields__content__projection
  
  val __split_fields__havoc (x: __split_fields__ref) : unit
    writes { x }
  
  type __rep = { __split_fields : __split_fields }
  
  function __rep___split_fields__projection (a: __rep) : __split_fields =
    __split_fields a
  
  meta "model_projection" function __rep___split_fields__projection
  
  meta "inline:no" function __rep___split_fields__projection
  
  function to_base (a: __rep) : __rep = a
  
  val to_base (a: __rep) : __rep
    ensures { result = (to_base (a : __rep)) }
  
  function of_base (a: __rep) : __rep = a
  
  val of_base (a: __rep) : __rep
    ensures { result = (of_base (a : __rep)) }
  
  predicate station__crew_record__name__pred (a: __rep) = true
  
  val station__crew_record__name__pred (a: __rep) : bool
    ensures { result <-> (station__crew_record__name__pred (a : __rep)) }
  
  val rec__station__crew_record__name_ (a: __rep) : Station__crewmember.crewmember
    requires { station__crew_record__name__pred a }
    ensures { (result = ((__split_fields a).rec__station__crew_record__name)) }
  
  predicate station__crew_record__status__pred (a: __rep) = true
  
  val station__crew_record__status__pred (a: __rep) : bool
    ensures { result <-> (station__crew_record__status__pred (a : __rep)) }
  
  val rec__station__crew_record__status_ (a: __rep) : Station__crewmemberstatus.crewmemberstatus
    requires { station__crew_record__status__pred a }
    ensures { (result
                 = ((__split_fields a).rec__station__crew_record__status)) }
  
  predicate station__crew_record__location__pred (a: __rep) = true
  
  val station__crew_record__location__pred (a: __rep) : bool
    ensures { result <-> (station__crew_record__location__pred (a : __rep)) }
  
  val rec__station__crew_record__location_ (a: __rep) : Station__module.module__
    requires { station__crew_record__location__pred a }
    ensures { (result
                 = ((__split_fields a).rec__station__crew_record__location)) }
  
  function bool_eq (a: __rep) (b: __rep) : bool =
    if ((((Station__crewmember__rep.to_rep
             ((__split_fields a).rec__station__crew_record__name))
            = (Station__crewmember__rep.to_rep
                 ((__split_fields b).rec__station__crew_record__name))) /\
           ((Station__crewmemberstatus__rep.to_rep
               ((__split_fields a).rec__station__crew_record__status))
              = (Station__crewmemberstatus__rep.to_rep
                   ((__split_fields b).rec__station__crew_record__status)))) /\
          ((Station__module__rep.to_rep
              ((__split_fields a).rec__station__crew_record__location))
             = (Station__module__rep.to_rep
                  ((__split_fields b).rec__station__crew_record__location)))) then
      True
    else False
  
  val bool_eq (a: __rep) (b: __rep) : bool
    ensures { result = ((bool_eq (a : __rep)) (b : __rep)) }
end

module Station__crew_record
  use export Station__crew_record__rep
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type crew_record = __rep
  
  val function value__size : int
  
  val function object__size : int
  
  val function alignment : int
  
  axiom value__size_axiom: (value__size >= (0 : int))
  
  axiom object__size_axiom: (object__size >= (0 : int))
  
  axiom alignment_axiom: (alignment >= (0 : int))
  
  val function station__crew_record__name__first__bit : int
  
  val function station__crew_record__name__last__bit : int
  
  val function station__crew_record__name__position : int
  
  axiom station__crew_record__name__first__bit_axiom:
    (station__crew_record__name__first__bit >= (0 : int))
  
  axiom station__crew_record__name__last__bit_axiom:
    (station__crew_record__name__last__bit
       > station__crew_record__name__first__bit)
  
  axiom station__crew_record__name__position_axiom:
    (station__crew_record__name__position >= (0 : int))
  
  val function station__crew_record__status__first__bit : int
  
  val function station__crew_record__status__last__bit : int
  
  val function station__crew_record__status__position : int
  
  axiom station__crew_record__status__first__bit_axiom:
    (station__crew_record__status__first__bit >= (0 : int))
  
  axiom station__crew_record__status__last__bit_axiom:
    (station__crew_record__status__last__bit
       > station__crew_record__status__first__bit)
  
  axiom station__crew_record__status__position_axiom:
    (station__crew_record__status__position >= (0 : int))
  
  val function station__crew_record__location__first__bit : int
  
  val function station__crew_record__location__last__bit : int
  
  val function station__crew_record__location__position : int
  
  axiom station__crew_record__location__first__bit_axiom:
    (station__crew_record__location__first__bit >= (0 : int))
  
  axiom station__crew_record__location__last__bit_axiom:
    (station__crew_record__location__last__bit
       > station__crew_record__location__first__bit)
  
  axiom station__crew_record__location__position_axiom:
    (station__crew_record__location__position >= (0 : int))
  
  val function user_eq (a: crew_record) (b: crew_record) : bool
  
  val function dummy : crew_record
  
  type crew_record__ref = { mutable crew_record__content : crew_record }
  
  function crew_record__ref_crew_record__content__projection (a: crew_record__ref) : crew_record =
    a.crew_record__content
  
  meta "model_projection" function crew_record__ref_crew_record__content__projection
  
  meta "inline:no" function crew_record__ref_crew_record__content__projection
  
  val crew_record__havoc (x: crew_record__ref) : unit
    writes { x }
end

module Array__Int__Station__crew_record
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Station__crew_record as Station__crew_record
  
  function index_I1_one : int = 1 : int
  
  type component_type = Station__crew_record.crew_record
  
  clone export _gnatprove_standard.Array__1 with
    axiom .,
    type I1.t = int,
    predicate I1.le = Int.( <= ),
    predicate I1.lt = Int.( < ),
    predicate I1.gt = Int.( > ),
    function I1.add = Int.( + ),
    function I1.sub = Int.( - ),
    function I1.one = index_I1_one,
    type component_type = component_type
  
  function bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : bool =
    ((if (a__first <= a__last) then
        ((b__first <= b__last) /\
           ((a__last - a__first) = (b__last - b__first)))
      else (b__first > b__last)) /\
       (forall temp___idx_162 : int.
          if ((a__first <= temp___idx_162) /\ (temp___idx_162 <= a__last)) then
            ((Station__crew_record.bool_eq ((get a) temp___idx_162))
               ((get b) ((b__first - a__first) + temp___idx_162)))
          else true))
  
  val bool_eq (a: map) (a__first: int) (a__last: int) (b: map) (b__first: int) (b__last: int) : 
    bool
    ensures { result
      =
      ((((((bool_eq (a : map)) (a__first : int)) (a__last : int)) (b : map))
          (b__first : int))
         (b__last : int)) }
  
  axiom bool_eq_rev:
    forall a : map, b : map.
      forall a__first : int, a__last : int, b__first : int, b__last : int.
        ((((((((bool_eq b) b__first) b__last) a) a__first) a__last) = True) ->
           ((if (a__first <= a__last) then
               ((b__first <= b__last) /\
                  ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              (forall temp___idx_162 : int.
                 if ((a__first <= temp___idx_162) /\
                       (temp___idx_162 <= a__last)) then
                   ((Station__crew_record.bool_eq ((get a) temp___idx_162))
                      ((get b) ((b__first - a__first) + temp___idx_162)))
                 else true)))
end

module Station__crew_array
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Station__crew_record as Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  
  type component_type = Station__crew_record.crew_record
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (3 : int) }
  
  clone export ada__model.Constr_Array with
    axiom .,
    type map = Array__Int__Station__crew_record.map,
    function array_bool_eq = Array__Int__Station__crew_record.bool_eq,
    function first = first,
    function last = last,
    type index_rep_type = int
end

module Station__station_record__T5s
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type t5s = <range 820000 920000>
  
  val function first : int
    ensures { result = (820000 : int) }
  
  val function last : int
    ensures { result = (920000 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = t5s,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type t5s__ref = { mutable t5s__content : t5s }
  
  function t5s__ref_t5s__content__projection (a: t5s__ref) : t5s =
    a.t5s__content
  
  meta "model_projection" function t5s__ref_t5s__content__projection
  
  meta "inline:no" function t5s__ref_t5s__content__projection
  
  val t5s__havoc (x: t5s__ref) : unit
    writes { x }
end

module Station__station_record__T5s__rep
  use Station__station_record__T5s as Station__station_record__T5s
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Station__station_record__T5s.t5s) : int =
    Station__station_record__T5s.t5s'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Station__station_record__T5s.t5s,
    predicate in_range = Station__station_record__T5s.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Station__station_record__T6s
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type t6s = <range 1 3>
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (3 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = t6s,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type t6s__ref = { mutable t6s__content : t6s }
  
  function t6s__ref_t6s__content__projection (a: t6s__ref) : t6s =
    a.t6s__content
  
  meta "model_projection" function t6s__ref_t6s__content__projection
  
  meta "inline:no" function t6s__ref_t6s__content__projection
  
  val t6s__havoc (x: t6s__ref) : unit
    writes { x }
end

module Station__station_record__T6s__rep
  use Station__station_record__T6s as Station__station_record__T6s
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: Station__station_record__T6s.t6s) : int =
    Station__station_record__T6s.t6s'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = Station__station_record__T6s.t6s,
    predicate in_range = Station__station_record__T6s.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module Station__station_record__rep
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Boolean as Boolean
  use Station__airlock_door as Station__airlock_door
  use Station__airlock_door__rep as Station__airlock_door__rep
  use Station__module_array as Station__module_array
  use Station__crew_array as Station__crew_array
  use Station__station_record__T5s as Station__station_record__T5s
  use Station__station_record__T5s__rep as Station__station_record__T5s__rep
  use Station__station_record__T6s as Station__station_record__T6s
  use Station__station_record__T6s__rep as Station__station_record__T6s__rep
  use Array__Int__Station__module as Array__Int__Station__module
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__module as Array__Int__Station__module
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__module as Array__Int__Station__module
  use Array__Int__Station__module as Array__Int__Station__module
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  
  type __split_fields = {
                       rec__station__station_record__door1 :
                         Station__airlock_door.airlock_door;
                       rec__station__station_record__door2 :
                         Station__airlock_door.airlock_door;
                       rec__station__station_record__altitude :
                         Station__station_record__T5s.t5s;
                       rec__station__station_record__modules :
                         Array__Int__Station__module.map;
                       rec__station__station_record__top_module_index :
                         Station__station_record__T6s.t6s;
                       rec__station__station_record__crew :
                         Array__Int__Station__crew_record.map;
                       rec__station__station_record__activespacewalk : bool
                       }
  
  function __split_fields_rec__station__station_record__door1__projection (a: __split_fields) : 
    Station__airlock_door.airlock_door =
    a.rec__station__station_record__door1
  
  meta "model_projection" function __split_fields_rec__station__station_record__door1__projection
  
  meta "inline:no" function __split_fields_rec__station__station_record__door1__projection
  
  function __split_fields_rec__station__station_record__door2__projection (a: __split_fields) : 
    Station__airlock_door.airlock_door =
    a.rec__station__station_record__door2
  
  meta "model_projection" function __split_fields_rec__station__station_record__door2__projection
  
  meta "inline:no" function __split_fields_rec__station__station_record__door2__projection
  
  function __split_fields_rec__station__station_record__altitude__projection (a: __split_fields) : 
    Station__station_record__T5s.t5s =
    a.rec__station__station_record__altitude
  
  meta "model_projection" function __split_fields_rec__station__station_record__altitude__projection
  
  meta "inline:no" function __split_fields_rec__station__station_record__altitude__projection
  
  function __split_fields_rec__station__station_record__modules__projection (a: __split_fields) : 
    Array__Int__Station__module.map =
    a.rec__station__station_record__modules
  
  meta "model_projection" function __split_fields_rec__station__station_record__modules__projection
  
  meta "inline:no" function __split_fields_rec__station__station_record__modules__projection
  
  function __split_fields_rec__station__station_record__top_module_index__projection (a: __split_fields) : 
    Station__station_record__T6s.t6s =
    a.rec__station__station_record__top_module_index
  
  meta "model_projection" function __split_fields_rec__station__station_record__top_module_index__projection
  
  meta "inline:no" function __split_fields_rec__station__station_record__top_module_index__projection
  
  function __split_fields_rec__station__station_record__crew__projection (a: __split_fields) : 
    Array__Int__Station__crew_record.map =
    a.rec__station__station_record__crew
  
  meta "model_projection" function __split_fields_rec__station__station_record__crew__projection
  
  meta "inline:no" function __split_fields_rec__station__station_record__crew__projection
  
  function __split_fields_rec__station__station_record__activespacewalk__projection (a: __split_fields) : bool =
    a.rec__station__station_record__activespacewalk
  
  meta "model_projection" function __split_fields_rec__station__station_record__activespacewalk__projection
  
  meta "inline:no" function __split_fields_rec__station__station_record__activespacewalk__projection
  
  type __split_fields__ref = {
                            mutable __split_fields__content : __split_fields
                            }
  
  function __split_fields__ref___split_fields__content__2__projection (a: __split_fields__ref) : __split_fields =
    __split_fields__content a
  
  meta "model_projection" function __split_fields__ref___split_fields__content__2__projection
  
  meta "inline:no" function __split_fields__ref___split_fields__content__2__projection
  
  val __split_fields__havoc (x: __split_fields__ref) : unit
    writes { x }
  
  type __rep = { __split_fields : __split_fields }
  
  function __rep___split_fields__2__projection (a: __rep) : __split_fields =
    __split_fields a
  
  meta "model_projection" function __rep___split_fields__2__projection
  
  meta "inline:no" function __rep___split_fields__2__projection
  
  function to_base (a: __rep) : __rep = a
  
  val to_base (a: __rep) : __rep
    ensures { result = (to_base (a : __rep)) }
  
  function of_base (a: __rep) : __rep = a
  
  val of_base (a: __rep) : __rep
    ensures { result = (of_base (a : __rep)) }
  
  predicate station__station_record__door1__pred (a: __rep) = true
  
  val station__station_record__door1__pred (a: __rep) : bool
    ensures { result <-> (station__station_record__door1__pred (a : __rep)) }
  
  val rec__station__station_record__door1_ (a: __rep) : Station__airlock_door.airlock_door
    requires { station__station_record__door1__pred a }
    ensures { (result
                 = ((__split_fields a).rec__station__station_record__door1)) }
  
  predicate station__station_record__door2__pred (a: __rep) = true
  
  val station__station_record__door2__pred (a: __rep) : bool
    ensures { result <-> (station__station_record__door2__pred (a : __rep)) }
  
  val rec__station__station_record__door2_ (a: __rep) : Station__airlock_door.airlock_door
    requires { station__station_record__door2__pred a }
    ensures { (result
                 = ((__split_fields a).rec__station__station_record__door2)) }
  
  predicate station__station_record__altitude__pred (a: __rep) = true
  
  val station__station_record__altitude__pred (a: __rep) : bool
    ensures { result
                <->
                (station__station_record__altitude__pred (a : __rep)) }
  
  val rec__station__station_record__altitude_ (a: __rep) : Station__station_record__T5s.t5s
    requires { station__station_record__altitude__pred a }
    ensures { (result
                 = ((__split_fields a).rec__station__station_record__altitude)) }
  
  predicate station__station_record__modules__pred (a: __rep) = true
  
  val station__station_record__modules__pred (a: __rep) : bool
    ensures { result <-> (station__station_record__modules__pred (a : __rep)) }
  
  val rec__station__station_record__modules_ (a: __rep) : Array__Int__Station__module.map
    requires { station__station_record__modules__pred a }
    ensures { (result
                 = ((__split_fields a).rec__station__station_record__modules)) }
  
  predicate station__station_record__top_module_index__pred (a: __rep) = true
  
  val station__station_record__top_module_index__pred (a: __rep) : bool
    ensures { result
                <->
                (station__station_record__top_module_index__pred (a : __rep)) }
  
  val rec__station__station_record__top_module_index_ (a: __rep) : Station__station_record__T6s.t6s
    requires { station__station_record__top_module_index__pred a }
    ensures { (result
                 = ((__split_fields a).rec__station__station_record__top_module_index)) }
  
  predicate station__station_record__crew__pred (a: __rep) = true
  
  val station__station_record__crew__pred (a: __rep) : bool
    ensures { result <-> (station__station_record__crew__pred (a : __rep)) }
  
  val rec__station__station_record__crew_ (a: __rep) : Array__Int__Station__crew_record.map
    requires { station__station_record__crew__pred a }
    ensures { (result
                 = ((__split_fields a).rec__station__station_record__crew)) }
  
  predicate station__station_record__activespacewalk__pred (a: __rep) = true
  
  val station__station_record__activespacewalk__pred (a: __rep) : bool
    ensures { result
                <->
                (station__station_record__activespacewalk__pred (a : __rep)) }
  
  val rec__station__station_record__activespacewalk_ (a: __rep) : bool
    requires { station__station_record__activespacewalk__pred a }
    ensures { (result
                 = ((__split_fields a).rec__station__station_record__activespacewalk)) }
  
  function bool_eq (a: __rep) (b: __rep) : bool =
    if ((((Station__airlock_door__rep.to_rep
             ((__split_fields a).rec__station__station_record__door1))
            = (Station__airlock_door__rep.to_rep
                 ((__split_fields b).rec__station__station_record__door1))) /\
           ((Station__airlock_door__rep.to_rep
               ((__split_fields a).rec__station__station_record__door2))
              = (Station__airlock_door__rep.to_rep
                   ((__split_fields b).rec__station__station_record__door2)))) /\
          (((((Station__station_record__T5s__rep.to_rep
                 ((__split_fields a).rec__station__station_record__altitude))
                = (Station__station_record__T5s__rep.to_rep
                     ((__split_fields b).rec__station__station_record__altitude))) /\
               ((Station__module_array.bool_eq
                   ((__split_fields a).rec__station__station_record__modules))
                  ((__split_fields b).rec__station__station_record__modules))) /\
              ((Station__station_record__T6s__rep.to_rep
                  ((__split_fields a).rec__station__station_record__top_module_index))
                 = (Station__station_record__T6s__rep.to_rep
                      ((__split_fields b).rec__station__station_record__top_module_index)))) /\
             (((Station__crew_array.bool_eq
                  ((__split_fields a).rec__station__station_record__crew))
                 ((__split_fields b).rec__station__station_record__crew)) /\
                ((Boolean.to_int
                    ((__split_fields a).rec__station__station_record__activespacewalk))
                   = (Boolean.to_int
                        ((__split_fields b).rec__station__station_record__activespacewalk)))))) then
      True
    else False
  
  val bool_eq (a: __rep) (b: __rep) : bool
    ensures { result = ((bool_eq (a : __rep)) (b : __rep)) }
end

module Station__station_record
  use export Station__station_record__rep
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type station_record = __rep
  
  val function value__size : int
  
  val function object__size : int
  
  val function alignment : int
  
  axiom value__size_axiom: (value__size >= (0 : int))
  
  axiom object__size_axiom: (object__size >= (0 : int))
  
  axiom alignment_axiom: (alignment >= (0 : int))
  
  val function station__station_record__door1__first__bit : int
  
  val function station__station_record__door1__last__bit : int
  
  val function station__station_record__door1__position : int
  
  axiom station__station_record__door1__first__bit_axiom:
    (station__station_record__door1__first__bit >= (0 : int))
  
  axiom station__station_record__door1__last__bit_axiom:
    (station__station_record__door1__last__bit
       > station__station_record__door1__first__bit)
  
  axiom station__station_record__door1__position_axiom:
    (station__station_record__door1__position >= (0 : int))
  
  val function station__station_record__door2__first__bit : int
  
  val function station__station_record__door2__last__bit : int
  
  val function station__station_record__door2__position : int
  
  axiom station__station_record__door2__first__bit_axiom:
    (station__station_record__door2__first__bit >= (0 : int))
  
  axiom station__station_record__door2__last__bit_axiom:
    (station__station_record__door2__last__bit
       > station__station_record__door2__first__bit)
  
  axiom station__station_record__door2__position_axiom:
    (station__station_record__door2__position >= (0 : int))
  
  val function station__station_record__altitude__first__bit : int
  
  val function station__station_record__altitude__last__bit : int
  
  val function station__station_record__altitude__position : int
  
  axiom station__station_record__altitude__first__bit_axiom:
    (station__station_record__altitude__first__bit >= (0 : int))
  
  axiom station__station_record__altitude__last__bit_axiom:
    (station__station_record__altitude__last__bit
       > station__station_record__altitude__first__bit)
  
  axiom station__station_record__altitude__position_axiom:
    (station__station_record__altitude__position >= (0 : int))
  
  val function station__station_record__modules__first__bit : int
  
  val function station__station_record__modules__last__bit : int
  
  val function station__station_record__modules__position : int
  
  axiom station__station_record__modules__first__bit_axiom:
    (station__station_record__modules__first__bit >= (0 : int))
  
  axiom station__station_record__modules__last__bit_axiom:
    (station__station_record__modules__last__bit
       > station__station_record__modules__first__bit)
  
  axiom station__station_record__modules__position_axiom:
    (station__station_record__modules__position >= (0 : int))
  
  val function station__station_record__top_module_index__first__bit : 
    int
  
  val function station__station_record__top_module_index__last__bit : 
    int
  
  val function station__station_record__top_module_index__position : 
    int
  
  axiom station__station_record__top_module_index__first__bit_axiom:
    (station__station_record__top_module_index__first__bit >= (0 : int))
  
  axiom station__station_record__top_module_index__last__bit_axiom:
    (station__station_record__top_module_index__last__bit
       > station__station_record__top_module_index__first__bit)
  
  axiom station__station_record__top_module_index__position_axiom:
    (station__station_record__top_module_index__position >= (0 : int))
  
  val function station__station_record__crew__first__bit : int
  
  val function station__station_record__crew__last__bit : int
  
  val function station__station_record__crew__position : int
  
  axiom station__station_record__crew__first__bit_axiom:
    (station__station_record__crew__first__bit >= (0 : int))
  
  axiom station__station_record__crew__last__bit_axiom:
    (station__station_record__crew__last__bit
       > station__station_record__crew__first__bit)
  
  axiom station__station_record__crew__position_axiom:
    (station__station_record__crew__position >= (0 : int))
  
  val function station__station_record__activespacewalk__first__bit : 
    int
  
  val function station__station_record__activespacewalk__last__bit : 
    int
  
  val function station__station_record__activespacewalk__position : int
  
  axiom station__station_record__activespacewalk__first__bit_axiom:
    (station__station_record__activespacewalk__first__bit >= (0 : int))
  
  axiom station__station_record__activespacewalk__last__bit_axiom:
    (station__station_record__activespacewalk__last__bit
       > station__station_record__activespacewalk__first__bit)
  
  axiom station__station_record__activespacewalk__position_axiom:
    (station__station_record__activespacewalk__position >= (0 : int))
  
  val function user_eq (a: station_record) (b: station_record) : bool
  
  val function dummy : station_record
  
  type station_record__ref = {
                            mutable station_record__content : station_record
                            }
  
  function station_record__ref_station_record__content__projection (a: station_record__ref) : station_record =
    a.station_record__content
  
  meta "model_projection" function station_record__ref_station_record__content__projection
  
  meta "inline:no" function station_record__ref_station_record__content__projection
  
  val station_record__havoc (x: station_record__ref) : unit
    writes { x }
end

module Station__s
  use _gnatprove_standard.Main
  use int.Int
  use Station__station_record as Station__station_record
  
  val s__split_fields : Station__station_record.__split_fields__ref
end

module Station__station_record___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Boolean as Boolean
  use Station__station_record as Station__station_record
  use Station__airlock_door as Station__airlock_door
  use Station__airlock_door__rep as Station__airlock_door__rep
  
  predicate dynamic_invariant (temp___expr_232: Station__station_record.station_record) (temp___is_init_228: bool) (temp___skip_constant_229: bool) (temp___do_toplevel_230: bool) (temp___do_typ_inv_231: bool) =
    true
  
  val dynamic_invariant (temp___expr_232: Station__station_record.station_record) (temp___is_init_228: bool) (temp___skip_constant_229: bool) (temp___do_toplevel_230: bool) (temp___do_typ_inv_231: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_232 :
                          Station__station_record.station_record))
                      (temp___is_init_228 : bool))
                     (temp___skip_constant_229 : bool))
                    (temp___do_toplevel_230 : bool))
                   (temp___do_typ_inv_231 : bool)) }
  
  predicate default_initial_assumption (temp___expr_235: Station__station_record.station_record) (temp___skip_top_level_236: bool) =
    (((if (Station__station_record.station__station_record__door1__pred
             temp___expr_235) then
         ((Station__airlock_door__rep.to_rep
             ((Station__station_record.__split_fields temp___expr_235).
                Station__station_record.rec__station__station_record__door1))
            = (1 : int))
       else true) /\
        (if (Station__station_record.station__station_record__door2__pred
               temp___expr_235) then
           ((Station__airlock_door__rep.to_rep
               ((Station__station_record.__split_fields temp___expr_235).
                  Station__station_record.rec__station__station_record__door2))
              = (1 : int))
         else true)) /\
       (if (Station__station_record.station__station_record__activespacewalk__pred
              temp___expr_235) then
          (((Station__station_record.__split_fields temp___expr_235).
              Station__station_record.rec__station__station_record__activespacewalk)
             = (Boolean.of_int (0 : int)))
        else true))
  
  val default_initial_assumption (temp___expr_235: Station__station_record.station_record) (temp___skip_top_level_236: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_235 : Station__station_record.station_record))
                   (temp___skip_top_level_236 : bool)) }
end

module Station__sealedinvariant
  use _gnatprove_standard.Main
  use int.Int
  use Station__station_record as Station__station_record
  
  val function sealedinvariant (Station__s___s__split_fields___: Station__station_record.__split_fields) : 
    bool
  
  val predicate sealedinvariant__function_guard (temp___result_163: bool) (Station__s___s__split_fields___: 
    Station__station_record.__split_fields)
end

module Station__sealedinvariant___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Station__s as Station__s
  use Station__station_record as Station__station_record
  use Station__station_record___axiom as Station__station_record___axiom
  use Station__sealedinvariant as Station__sealedinvariant
  use Station__airlock_door as Station__airlock_door
  use Station__airlock_door__rep as Station__airlock_door__rep
  
  val sealedinvariant (__void_param: unit) : bool
    reads { Station__s.s__split_fields }
    requires { true }
    writes {  }
    ensures { (((result
                   = (Station__sealedinvariant.sealedinvariant
                        (Station__station_record.__split_fields__content
                            Station__s.s__split_fields))) /\
                  ((Station__sealedinvariant.sealedinvariant__function_guard
                      result)
                     (Station__station_record.__split_fields__content
                         Station__s.s__split_fields))) /\
                 (result
                    = (((((Station__airlock_door__rep.to_rep
                             ((Station__station_record.__split_fields
                                  { Station__station_record.__split_fields =
                                      (Station__station_record.__split_fields__content
                                          Station__s.s__split_fields) }).
                                Station__station_record.rec__station__station_record__door1))
                            = (0 : int)) /\
                           ((Station__airlock_door__rep.to_rep
                               ((Station__station_record.__split_fields
                                    { Station__station_record.__split_fields =
                                        (Station__station_record.__split_fields__content
                                            Station__s.s__split_fields) }).
                                  Station__station_record.rec__station__station_record__door2))
                              = (1 : int))) \/
                          (((Station__airlock_door__rep.to_rep
                               ((Station__station_record.__split_fields
                                    { Station__station_record.__split_fields =
                                        (Station__station_record.__split_fields__content
                                            Station__s.s__split_fields) }).
                                  Station__station_record.rec__station__station_record__door1))
                              = (1 : int)) /\
                             ((Station__airlock_door__rep.to_rep
                                 ((Station__station_record.__split_fields
                                      { Station__station_record.__split_fields =
                                          (Station__station_record.__split_fields__content
                                              Station__s.s__split_fields) }).
                                    Station__station_record.rec__station__station_record__door2))
                                = (0 : int)))) \/
                         (((Station__airlock_door__rep.to_rep
                              ((Station__station_record.__split_fields
                                   { Station__station_record.__split_fields =
                                       (Station__station_record.__split_fields__content
                                           Station__s.s__split_fields) }).
                                 Station__station_record.rec__station__station_record__door1))
                             = (1 : int)) /\
                            ((Station__airlock_door__rep.to_rep
                                ((Station__station_record.__split_fields
                                     { Station__station_record.__split_fields =
                                         (Station__station_record.__split_fields__content
                                             Station__s.s__split_fields) }).
                                   Station__station_record.rec__station__station_record__door2))
                               = (1 : int)))))) }
  
  axiom sealedinvariant__post_axiom:
    forall Station__s___s__split_fields___ : Station__station_record.__split_fields
          [Station__sealedinvariant.sealedinvariant
             Station__s___s__split_fields___].
      ((((((Station__station_record___axiom.dynamic_invariant
              { Station__station_record.__split_fields =
                  Station__s___s__split_fields___ })
             True)
            True)
           True)
          True) ->
         (let result =
            Station__sealedinvariant.sealedinvariant
              Station__s___s__split_fields___ in
          if ((Station__sealedinvariant.sealedinvariant__function_guard
                 result)
                Station__s___s__split_fields___) then
            ((true /\ true) /\ true)
          else true))
  
  axiom sealedinvariant__def_axiom:
    forall Station__s___s__split_fields___ : Station__station_record.__split_fields
          [Station__sealedinvariant.sealedinvariant
             Station__s___s__split_fields___].
      ((Station__sealedinvariant.sealedinvariant
          Station__s___s__split_fields___)
         = (((((Station__airlock_door__rep.to_rep
                  ((Station__station_record.__split_fields
                       { Station__station_record.__split_fields =
                           Station__s___s__split_fields___ }).Station__station_record.rec__station__station_record__door1))
                 = (0 : int)) /\
                ((Station__airlock_door__rep.to_rep
                    ((Station__station_record.__split_fields
                         { Station__station_record.__split_fields =
                             Station__s___s__split_fields___ }).Station__station_record.rec__station__station_record__door2))
                   = (1 : int))) \/
               (((Station__airlock_door__rep.to_rep
                    ((Station__station_record.__split_fields
                         { Station__station_record.__split_fields =
                             Station__s___s__split_fields___ }).Station__station_record.rec__station__station_record__door1))
                   = (1 : int)) /\
                  ((Station__airlock_door__rep.to_rep
                      ((Station__station_record.__split_fields
                           { Station__station_record.__split_fields =
                               Station__s___s__split_fields___ }).Station__station_record.rec__station__station_record__door2))
                     = (0 : int)))) \/
              (((Station__airlock_door__rep.to_rep
                   ((Station__station_record.__split_fields
                        { Station__station_record.__split_fields =
                            Station__s___s__split_fields___ }).Station__station_record.rec__station__station_record__door1))
                  = (1 : int)) /\
                 ((Station__airlock_door__rep.to_rep
                     ((Station__station_record.__split_fields
                          { Station__station_record.__split_fields =
                              Station__s___s__split_fields___ }).Station__station_record.rec__station__station_record__door2))
                    = (1 : int)))))
end

module Station__altitudeinvariant
  use _gnatprove_standard.Main
  use int.Int
  use Station__station_record as Station__station_record
  
  val function altitudeinvariant (Station__s___s__split_fields___: Station__station_record.__split_fields) : 
    bool
  
  val predicate altitudeinvariant__function_guard (temp___result_164: bool) (Station__s___s__split_fields___: 
    Station__station_record.__split_fields)
end

module Station__altitudeinvariant___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Station__s as Station__s
  use Station__station_record as Station__station_record
  use Station__station_record___axiom as Station__station_record___axiom
  use Station__altitudeinvariant as Station__altitudeinvariant
  use Station__station_record__T5s as Station__station_record__T5s
  use Station__station_record__T5s__rep as Station__station_record__T5s__rep
  
  val altitudeinvariant (__void_param: unit) : bool
    reads { Station__s.s__split_fields }
    requires { true }
    writes {  }
    ensures { (((result
                   = (Station__altitudeinvariant.altitudeinvariant
                        (Station__station_record.__split_fields__content
                            Station__s.s__split_fields))) /\
                  ((Station__altitudeinvariant.altitudeinvariant__function_guard
                      result)
                     (Station__station_record.__split_fields__content
                         Station__s.s__split_fields))) /\
                 (result
                    = (((Station__station_record__T5s__rep.to_rep
                           ((Station__station_record.__split_fields
                                { Station__station_record.__split_fields =
                                    (Station__station_record.__split_fields__content
                                        Station__s.s__split_fields) }).
                              Station__station_record.rec__station__station_record__altitude))
                          >= (820000 : int)) /\
                         ((Station__station_record__T5s__rep.to_rep
                             ((Station__station_record.__split_fields
                                  { Station__station_record.__split_fields =
                                      (Station__station_record.__split_fields__content
                                          Station__s.s__split_fields) }).
                                Station__station_record.rec__station__station_record__altitude))
                            <= (920000 : int))))) }
  
  axiom altitudeinvariant__post_axiom:
    forall Station__s___s__split_fields___ : Station__station_record.__split_fields
          [Station__altitudeinvariant.altitudeinvariant
             Station__s___s__split_fields___].
      ((((((Station__station_record___axiom.dynamic_invariant
              { Station__station_record.__split_fields =
                  Station__s___s__split_fields___ })
             True)
            True)
           True)
          True) ->
         (let result =
            Station__altitudeinvariant.altitudeinvariant
              Station__s___s__split_fields___ in
          if ((Station__altitudeinvariant.altitudeinvariant__function_guard
                 result)
                Station__s___s__split_fields___) then
            ((true /\ true) /\ true)
          else true))
  
  axiom altitudeinvariant__def_axiom:
    forall Station__s___s__split_fields___ : Station__station_record.__split_fields
          [Station__altitudeinvariant.altitudeinvariant
             Station__s___s__split_fields___].
      ((Station__altitudeinvariant.altitudeinvariant
          Station__s___s__split_fields___)
         = (((Station__station_record__T5s__rep.to_rep
                ((Station__station_record.__split_fields
                     { Station__station_record.__split_fields =
                         Station__s___s__split_fields___ }).Station__station_record.rec__station__station_record__altitude))
               >= (820000 : int)) /\
              ((Station__station_record__T5s__rep.to_rep
                  ((Station__station_record.__split_fields
                       { Station__station_record.__split_fields =
                           Station__s___s__split_fields___ }).Station__station_record.rec__station__station_record__altitude))
                 <= (920000 : int))))
end

module Ada___ada__text_io__file_system
  use _gnatprove_standard.Main
  use int.Int
  
  val file_system : Main.__private__ref
end

module Ada___ada__text_io__standard_in
  use _gnatprove_standard.Main
  use int.Int
  
  val standard_in : Main.__private__ref
end

module Ada___ada__text_io__standard_out
  use _gnatprove_standard.Main
  use int.Int
  
  val standard_out : Main.__private__ref
end

module Ada___ada__text_io__standard_err
  use _gnatprove_standard.Main
  use int.Int
  
  val standard_err : Main.__private__ref
end

module Ada___ada__text_io__current_in
  use _gnatprove_standard.Main
  use int.Int
  
  val current_in : Main.__private__ref
end

module Ada___ada__text_io__current_out
  use _gnatprove_standard.Main
  use int.Int
  
  val current_out : Main.__private__ref
end

module Ada___ada__text_io__current_err
  use _gnatprove_standard.Main
  use int.Int
  
  val current_err : Main.__private__ref
end

module Ada___ada__real_time__clock_time
  use _gnatprove_standard.Main
  use int.Int
  
  val clock_time : Main.__private__ref
end

module Station__open_door___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Station__s as Station__s
  use Station__station_record as Station__station_record
  use Station__station_record___axiom as Station__station_record___axiom
  use Station__sealedinvariant as Station__sealedinvariant
  use Station__altitudeinvariant as Station__altitudeinvariant
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__real_time__clock_time as Ada___ada__real_time__clock_time
  
  val open_door (s__split_fields: Station__station_record.__split_fields__ref) (airlock_number: int) : 
    unit
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err,
      Ada___ada__real_time__clock_time.clock_time,
      Station__s.s__split_fields }
    requires { (([@GP_Pretty_Ada:2140]
                 ((epsilon temp___result_256: bool.
                     ((temp___result_256
                         = (Station__sealedinvariant.sealedinvariant
                              (Station__station_record.__split_fields__content
                                  Station__s.s__split_fields))) /\
                        ((Station__sealedinvariant.sealedinvariant__function_guard
                            temp___result_256)
                           (Station__station_record.__split_fields__content
                               Station__s.s__split_fields))))
                    = True)) /\
                  ([@GP_Pretty_Ada:2141]
                   ((epsilon temp___result_257: bool.
                       ((temp___result_257
                           = (Station__altitudeinvariant.altitudeinvariant
                                (Station__station_record.__split_fields__content
                                    Station__s.s__split_fields))) /\
                          ((Station__altitudeinvariant.altitudeinvariant__function_guard
                              temp___result_257)
                             (Station__station_record.__split_fields__content
                                 Station__s.s__split_fields))))
                      = True)))
    }
    writes { Ada___ada__text_io__file_system.file_system, Ada___ada__text_io__standard_in.standard_in, Ada___ada__text_io__standard_out.standard_out, Ada___ada__text_io__standard_err.standard_err, Ada___ada__text_io__current_in.current_in, Ada___ada__text_io__current_out.current_out, Ada___ada__text_io__current_err.current_err, s__split_fields }
    ensures { ((([@GP_Pretty_Ada:2146]
                 ((epsilon temp___result_258: bool.
                     ((temp___result_258
                         = (Station__sealedinvariant.sealedinvariant
                              (Station__station_record.__split_fields__content
                                  Station__s.s__split_fields))) /\
                        ((Station__sealedinvariant.sealedinvariant__function_guard
                            temp___result_258)
                           (Station__station_record.__split_fields__content
                               Station__s.s__split_fields))))
                    = True)) /\
                  ([@GP_Pretty_Ada:2147]
                   ((epsilon temp___result_259: bool.
                       ((temp___result_259
                           = (Station__altitudeinvariant.altitudeinvariant
                                (Station__station_record.__split_fields__content
                                    Station__s.s__split_fields))) /\
                          ((Station__altitudeinvariant.altitudeinvariant__function_guard
                              temp___result_259)
                             (Station__station_record.__split_fields__content
                                 Station__s.s__split_fields))))
                      = True))) /\
                 (((((Station__station_record___axiom.dynamic_invariant
                        { Station__station_record.__split_fields =
                            (Station__station_record.__split_fields__content
                                s__split_fields) })
                       True)
                      True)
                     True)
                    True)) }
end

module Station__seal_airlock___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Station__s as Station__s
  use Station__station_record as Station__station_record
  use Station__station_record___axiom as Station__station_record___axiom
  use Station__sealedinvariant as Station__sealedinvariant
  use Station__altitudeinvariant as Station__altitudeinvariant
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__real_time__clock_time as Ada___ada__real_time__clock_time
  
  val seal_airlock (s__split_fields: Station__station_record.__split_fields__ref) : 
    unit
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err,
      Ada___ada__real_time__clock_time.clock_time,
      Station__s.s__split_fields }
    requires { (([@GP_Pretty_Ada:2159]
                 ((epsilon temp___result_266: bool.
                     ((temp___result_266
                         = (Station__sealedinvariant.sealedinvariant
                              (Station__station_record.__split_fields__content
                                  Station__s.s__split_fields))) /\
                        ((Station__sealedinvariant.sealedinvariant__function_guard
                            temp___result_266)
                           (Station__station_record.__split_fields__content
                               Station__s.s__split_fields))))
                    = True)) /\
                  ([@GP_Pretty_Ada:2160]
                   ((epsilon temp___result_267: bool.
                       ((temp___result_267
                           = (Station__altitudeinvariant.altitudeinvariant
                                (Station__station_record.__split_fields__content
                                    Station__s.s__split_fields))) /\
                          ((Station__altitudeinvariant.altitudeinvariant__function_guard
                              temp___result_267)
                             (Station__station_record.__split_fields__content
                                 Station__s.s__split_fields))))
                      = True)))
    }
    writes { Ada___ada__text_io__file_system.file_system, Ada___ada__text_io__standard_in.standard_in, Ada___ada__text_io__standard_out.standard_out, Ada___ada__text_io__standard_err.standard_err, Ada___ada__text_io__current_in.current_in, Ada___ada__text_io__current_out.current_out, Ada___ada__text_io__current_err.current_err, s__split_fields }
    ensures { ((([@GP_Pretty_Ada:2165]
                 ((epsilon temp___result_268: bool.
                     ((temp___result_268
                         = (Station__sealedinvariant.sealedinvariant
                              (Station__station_record.__split_fields__content
                                  Station__s.s__split_fields))) /\
                        ((Station__sealedinvariant.sealedinvariant__function_guard
                            temp___result_268)
                           (Station__station_record.__split_fields__content
                               Station__s.s__split_fields))))
                    = True)) /\
                  ([@GP_Pretty_Ada:2166]
                   ((epsilon temp___result_269: bool.
                       ((temp___result_269
                           = (Station__altitudeinvariant.altitudeinvariant
                                (Station__station_record.__split_fields__content
                                    Station__s.s__split_fields))) /\
                          ((Station__altitudeinvariant.altitudeinvariant__function_guard
                              temp___result_269)
                             (Station__station_record.__split_fields__content
                                 Station__s.s__split_fields))))
                      = True))) /\
                 (((((Station__station_record___axiom.dynamic_invariant
                        { Station__station_record.__split_fields =
                            (Station__station_record.__split_fields__content
                                s__split_fields) })
                       True)
                      True)
                     True)
                    True)) }
end

module Station__attempt_spacewalk__s
  use _gnatprove_standard.Main
  use int.Int
  use Station__station_record as Station__station_record
  
  val s__split_fields : Station__station_record.__split_fields__ref
end

module Station__attempt_spacewalk__cm
  use _gnatprove_standard.Main
  use int.Int
  
  val function cm : int
end

module Ada___ada__text_io__line_length__2
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  
  val function line_length (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private) : int
  
  val predicate line_length__function_guard (temp___result_165: int) (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private)
end

module Ada___ada__text_io__page_length__2
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  
  val function page_length (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private) : int
  
  val predicate page_length__function_guard (temp___result_166: int) (Ada___ada__text_io__file_system___file_system___: 
    Main.__private) (Ada___ada__text_io__standard_in___standard_in___: 
    Main.__private) (Ada___ada__text_io__standard_out___standard_out___: 
    Main.__private) (Ada___ada__text_io__standard_err___standard_err___: 
    Main.__private) (Ada___ada__text_io__current_in___current_in___: 
    Main.__private) (Ada___ada__text_io__current_out___current_out___: 
    Main.__private) (Ada___ada__text_io__current_err___current_err___: 
    Main.__private)
end

module Ada___ada__text_io__put_line__2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use Standard__string as Standard__string
  use Ada___ada__text_io__line_length__2 as Ada___ada__text_io__line_length__2
  use Ada___ada__text_io__page_length__2 as Ada___ada__text_io__page_length__2
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val put_line (item: Standard__string.string__) : unit
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { true }
    writes { Ada___ada__text_io__file_system.file_system, Ada___ada__text_io__standard_in.standard_in, Ada___ada__text_io__standard_out.standard_out, Ada___ada__text_io__standard_err.standard_err, Ada___ada__text_io__current_in.current_in, Ada___ada__text_io__current_out.current_out, Ada___ada__text_io__current_err.current_err }
    ensures { (([@GP_Pretty_Ada:4826]
                ((old (((((((Ada___ada__text_io__line_length__2.line_length
                               (Main.__private__content
                                   Ada___ada__text_io__file_system.file_system))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_in.standard_in))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_out.standard_out))
                            (Main.__private__content
                                Ada___ada__text_io__standard_err.standard_err))
                           (Main.__private__content
                               Ada___ada__text_io__current_in.current_in))
                          (Main.__private__content
                              Ada___ada__text_io__current_out.current_out))
                         (Main.__private__content
                             Ada___ada__text_io__current_err.current_err)))
                   = (((((((Ada___ada__text_io__line_length__2.line_length
                              (Main.__private__content
                                  Ada___ada__text_io__file_system.file_system))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_in.standard_in))
                            (Main.__private__content
                                Ada___ada__text_io__standard_out.standard_out))
                           (Main.__private__content
                               Ada___ada__text_io__standard_err.standard_err))
                          (Main.__private__content
                              Ada___ada__text_io__current_in.current_in))
                         (Main.__private__content
                             Ada___ada__text_io__current_out.current_out))
                        (Main.__private__content
                            Ada___ada__text_io__current_err.current_err)))) /\
                 ([@GP_Pretty_Ada:4832]
                  ((old (((((((Ada___ada__text_io__page_length__2.page_length
                                 (Main.__private__content
                                     Ada___ada__text_io__file_system.file_system))
                                (Main.__private__content
                                    Ada___ada__text_io__standard_in.standard_in))
                               (Main.__private__content
                                   Ada___ada__text_io__standard_out.standard_out))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_err.standard_err))
                             (Main.__private__content
                                 Ada___ada__text_io__current_in.current_in))
                            (Main.__private__content
                                Ada___ada__text_io__current_out.current_out))
                           (Main.__private__content
                               Ada___ada__text_io__current_err.current_err)))
                     = (((((((Ada___ada__text_io__page_length__2.page_length
                                (Main.__private__content
                                    Ada___ada__text_io__file_system.file_system))
                               (Main.__private__content
                                   Ada___ada__text_io__standard_in.standard_in))
                              (Main.__private__content
                                  Ada___ada__text_io__standard_out.standard_out))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_err.standard_err))
                            (Main.__private__content
                                Ada___ada__text_io__current_in.current_in))
                           (Main.__private__content
                               Ada___ada__text_io__current_out.current_out))
                          (Main.__private__content
                              Ada___ada__text_io__current_err.current_err))))) }
end

module Station__attempt_spacewalk__top_cm
  use _gnatprove_standard.Main
  use int.Int
  
  val top_cm : int__ref
end

module Station__attempt_spacewalk__bottom_cm
  use _gnatprove_standard.Main
  use int.Int
  
  val bottom_cm : int__ref
end

module Station__attempt_spacewalk__L_4__i
  use _gnatprove_standard.Main
  use int.Int
  
  val i : int__ref
end

module Station__attempt_spacewalk__L_5__i
  use _gnatprove_standard.Main
  use int.Int
  
  val i : int__ref
end

module Station__attempt_spacewalk__L_6__i
  use _gnatprove_standard.Main
  use int.Int
  
  val i : int__ref
end

module Station__Tcrew_arrayD1
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type tcrew_arrayD1 = <range 1 3>
  
  val function first : int
    ensures { result = (1 : int) }
  
  val function last : int
    ensures { result = (3 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = tcrew_arrayD1,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type tcrew_arrayD1__ref = {
                           mutable tcrew_arrayD1__content : tcrew_arrayD1
                           }
  
  function tcrew_arrayD1__ref_tcrew_arrayD1__content__projection (a: tcrew_arrayD1__ref) : tcrew_arrayD1 =
    a.tcrew_arrayD1__content
  
  meta "model_projection" function tcrew_arrayD1__ref_tcrew_arrayD1__content__projection
  
  meta "inline:no" function tcrew_arrayD1__ref_tcrew_arrayD1__content__projection
  
  val tcrew_arrayD1__havoc (x: tcrew_arrayD1__ref) : unit
    writes { x }
end

module Station__attempt_spacewalk__L_4
  use _gnatprove_standard.Main
  use int.Int
  
  exception L_4
end

module Station__attempt_spacewalk__L_5
  use _gnatprove_standard.Main
  use int.Int
  
  exception L_5
end

module Station__attempt_spacewalk__L_6
  use _gnatprove_standard.Main
  use int.Int
  
  exception L_6
end

module Temp___String_Literal_606
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_606 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_606__def_axiom:
    forall __void_param : unit [temp___String_Literal_606 __void_param]. true
end

module Temp___String_Literal_610
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_610 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_610__def_axiom:
    forall __void_param : unit [temp___String_Literal_610 __void_param]. true
end

module Temp___String_Literal_612
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_612 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_612__def_axiom:
    forall __void_param : unit [temp___String_Literal_612 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_612 __void_param))
               (1 : int)))
           = (83 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_612 __void_param))
                 (2 : int)))
             = (80 : int))) /\
         ((((((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_612 __void_param))
                      (3 : int)))
                  = (65 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_612 __void_param))
                        (4 : int)))
                    = (67 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_612 __void_param))
                        (5 : int)))
                    = (69 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_612 __void_param))
                          (6 : int)))
                      = (87 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_612 __void_param))
                        (7 : int)))
                    = (65 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_612 __void_param))
                          (8 : int)))
                      = (76 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_612 __void_param))
                          (9 : int)))
                      = (75 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (10 : int)))
                        = (32 : int))))) /\
              (((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_612 __void_param))
                        (11 : int)))
                    = (73 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_612 __void_param))
                          (12 : int)))
                      = (83 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_612 __void_param))
                          (13 : int)))
                      = (32 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (14 : int)))
                        = (79 : int)))) /\
                 ((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_612 __void_param))
                          (15 : int)))
                      = (78 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (16 : int)))
                        = (76 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_612 __void_param))
                           (17 : int)))
                       = (89 : int))))) /\
             ((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_612 __void_param))
                        (18 : int)))
                    = (32 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_612 __void_param))
                          (19 : int)))
                      = (65 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_612 __void_param))
                          (20 : int)))
                      = (86 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (21 : int)))
                        = (65 : int)))) /\
                 ((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_612 __void_param))
                          (22 : int)))
                      = (76 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (23 : int)))
                        = (73 : int))) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_612 __void_param))
                           (24 : int)))
                       = (65 : int)))) /\
                (((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_612 __void_param))
                          (25 : int)))
                      = (66 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (26 : int)))
                        = (76 : int))) /\
                    (((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (27 : int)))
                        = (69 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_612 __void_param))
                              (28 : int)))
                          = (32 : int)))) /\
                   ((((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (29 : int)))
                        = (87 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_612 __void_param))
                              (30 : int)))
                          = (73 : int))) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_612 __void_param))
                             (31 : int)))
                         = (84 : int)))))) /\
            (((((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_612 __void_param))
                        (32 : int)))
                    = (72 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_612 __void_param))
                          (33 : int)))
                      = (32 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_612 __void_param))
                          (34 : int)))
                      = (65 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (35 : int)))
                        = (32 : int)))) /\
                 ((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_612 __void_param))
                          (36 : int)))
                      = (70 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (37 : int)))
                        = (85 : int))) /\
                    (((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (38 : int)))
                        = (76 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_612 __void_param))
                              (39 : int)))
                          = (76 : int))))) /\
                (((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_612 __void_param))
                          (40 : int)))
                      = (89 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (41 : int)))
                        = (32 : int))) /\
                    (((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (42 : int)))
                        = (70 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_612 __void_param))
                              (43 : int)))
                          = (85 : int)))) /\
                   ((((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (44 : int)))
                        = (78 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_612 __void_param))
                              (45 : int)))
                          = (67 : int))) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_612 __void_param))
                             (46 : int)))
                         = (84 : int))))) /\
               ((((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_612 __void_param))
                          (47 : int)))
                      = (73 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (48 : int)))
                        = (79 : int))) /\
                    (((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (49 : int)))
                        = (78 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_612 __void_param))
                              (50 : int)))
                          = (65 : int)))) /\
                   ((((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (51 : int)))
                        = (76 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_612 __void_param))
                              (52 : int)))
                          = (32 : int))) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_612 __void_param))
                             (53 : int)))
                         = (83 : int)))) /\
                  (((((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_612 __void_param))
                            (54 : int)))
                        = (84 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_612 __void_param))
                              (55 : int)))
                          = (65 : int))) /\
                      (((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_612 __void_param))
                              (56 : int)))
                          = (84 : int)) /\
                         ((Standard__character__rep.to_rep
                             ((Array__Int__Standard__character.get
                                 (temp___String_Literal_612 __void_param))
                                (57 : int)))
                            = (73 : int)))) /\
                     ((((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_612 __void_param))
                              (58 : int)))
                          = (79 : int)) /\
                         ((Standard__character__rep.to_rep
                             ((Array__Int__Standard__character.get
                                 (temp___String_Literal_612 __void_param))
                                (59 : int)))
                            = (78 : int))) /\
                        ((Standard__character__rep.to_rep
                            ((Array__Int__Standard__character.get
                                (temp___String_Literal_612 __void_param))
                               (60 : int)))
                           = (33 : int))))))))
end

module Temp___String_Literal_617
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_617 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_617__def_axiom:
    forall __void_param : unit [temp___String_Literal_617 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_617 __void_param))
               (1 : int)))
           = (83 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_617 __void_param))
                 (2 : int)))
             = (80 : int))) /\
         (((((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_617 __void_param))
                       (3 : int)))
                   = (65 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_617 __void_param))
                         (4 : int)))
                     = (67 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_617 __void_param))
                        (5 : int)))
                    = (69 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_617 __void_param))
                        (6 : int)))
                    = (87 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_617 __void_param))
                          (7 : int)))
                      = (65 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_617 __void_param))
                        (8 : int)))
                    = (76 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_617 __void_param))
                          (9 : int)))
                      = (75 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_617 __void_param))
                          (10 : int)))
                      = (32 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (11 : int)))
                        = (73 : int))))) /\
              ((((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_617 __void_param))
                         (12 : int)))
                     = (78 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_617 __void_param))
                           (13 : int)))
                       = (32 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_617 __void_param))
                          (14 : int)))
                      = (80 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_617 __void_param))
                          (15 : int)))
                      = (82 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (16 : int)))
                        = (79 : int)))) /\
                 ((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_617 __void_param))
                          (17 : int)))
                      = (71 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (18 : int)))
                        = (82 : int))) /\
                    (((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (19 : int)))
                        = (69 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_617 __void_param))
                              (20 : int)))
                          = (83 : int)))))) /\
             (((((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_617 __void_param))
                         (21 : int)))
                     = (83 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_617 __void_param))
                           (22 : int)))
                       = (44 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_617 __void_param))
                          (23 : int)))
                      = (32 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_617 __void_param))
                          (24 : int)))
                      = (67 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (25 : int)))
                        = (65 : int)))) /\
                 ((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_617 __void_param))
                          (26 : int)))
                      = (78 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (27 : int)))
                        = (78 : int))) /\
                    (((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (28 : int)))
                        = (79 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_617 __void_param))
                              (29 : int)))
                          = (84 : int))))) /\
                (((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_617 __void_param))
                          (30 : int)))
                      = (32 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (31 : int)))
                        = (80 : int))) /\
                    (((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (32 : int)))
                        = (69 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_617 __void_param))
                              (33 : int)))
                          = (82 : int)))) /\
                   ((((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (34 : int)))
                        = (70 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_617 __void_param))
                              (35 : int)))
                          = (79 : int))) /\
                      (((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_617 __void_param))
                              (36 : int)))
                          = (82 : int)) /\
                         ((Standard__character__rep.to_rep
                             ((Array__Int__Standard__character.get
                                 (temp___String_Literal_617 __void_param))
                                (37 : int)))
                            = (77 : int))))))) /\
            ((((((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_617 __void_param))
                         (38 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_617 __void_param))
                           (39 : int)))
                       = (65 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_617 __void_param))
                          (40 : int)))
                      = (78 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_617 __void_param))
                          (41 : int)))
                      = (79 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (42 : int)))
                        = (84 : int)))) /\
                 ((((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_617 __void_param))
                          (43 : int)))
                      = (72 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (44 : int)))
                        = (69 : int))) /\
                    (((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (45 : int)))
                        = (82 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_617 __void_param))
                              (46 : int)))
                          = (32 : int))))) /\
                ((((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_617 __void_param))
                           (47 : int)))
                       = (85 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_617 __void_param))
                             (48 : int)))
                         = (78 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (49 : int)))
                        = (84 : int))) /\
                    (((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (50 : int)))
                        = (73 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_617 __void_param))
                              (51 : int)))
                          = (76 : int)))) /\
                   ((((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (52 : int)))
                        = (32 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_617 __void_param))
                              (53 : int)))
                          = (67 : int))) /\
                      (((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_617 __void_param))
                              (54 : int)))
                          = (82 : int)) /\
                         ((Standard__character__rep.to_rep
                             ((Array__Int__Standard__character.get
                                 (temp___String_Literal_617 __void_param))
                                (55 : int)))
                            = (69 : int)))))) /\
               (((((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_617 __void_param))
                           (56 : int)))
                       = (87 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_617 __void_param))
                             (57 : int)))
                         = (77 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (58 : int)))
                        = (65 : int))) /\
                    (((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (59 : int)))
                        = (78 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_617 __void_param))
                              (60 : int)))
                          = (32 : int)))) /\
                   ((((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (61 : int)))
                        = (72 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_617 __void_param))
                              (62 : int)))
                          = (65 : int))) /\
                      (((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_617 __void_param))
                              (63 : int)))
                          = (83 : int)) /\
                         ((Standard__character__rep.to_rep
                             ((Array__Int__Standard__character.get
                                 (temp___String_Literal_617 __void_param))
                                (64 : int)))
                            = (32 : int))))) /\
                  (((((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_617 __void_param))
                            (65 : int)))
                        = (82 : int)) /\
                       ((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_617 __void_param))
                              (66 : int)))
                          = (69 : int))) /\
                      (((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_617 __void_param))
                              (67 : int)))
                          = (84 : int)) /\
                         ((Standard__character__rep.to_rep
                             ((Array__Int__Standard__character.get
                                 (temp___String_Literal_617 __void_param))
                                (68 : int)))
                            = (85 : int)))) /\
                     ((((Standard__character__rep.to_rep
                           ((Array__Int__Standard__character.get
                               (temp___String_Literal_617 __void_param))
                              (69 : int)))
                          = (82 : int)) /\
                         ((Standard__character__rep.to_rep
                             ((Array__Int__Standard__character.get
                                 (temp___String_Literal_617 __void_param))
                                (70 : int)))
                            = (78 : int))) /\
                        (((Standard__character__rep.to_rep
                             ((Array__Int__Standard__character.get
                                 (temp___String_Literal_617 __void_param))
                                (71 : int)))
                            = (69 : int)) /\
                           ((Standard__character__rep.to_rep
                               ((Array__Int__Standard__character.get
                                   (temp___String_Literal_617 __void_param))
                                  (72 : int)))
                              = (68 : int)))))))))
end

module Temp___String_Literal_620
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_620 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_620__def_axiom:
    forall __void_param : unit [temp___String_Literal_620 __void_param]. true
end

module Temp___String_Literal_622
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_622 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_622__def_axiom:
    forall __void_param : unit [temp___String_Literal_622 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_622 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_622 __void_param))
                 (2 : int)))
             = (73 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_622 __void_param))
                     (3 : int)))
                 = (83 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_622 __void_param))
                       (4 : int)))
                   = (32 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_622 __void_param))
                       (5 : int)))
                   = (65 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_622 __void_param))
                         (6 : int)))
                     = (86 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_622 __void_param))
                       (7 : int)))
                   = (65 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_622 __void_param))
                         (8 : int)))
                     = (76 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_622 __void_param))
                        (9 : int)))
                    = (73 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_622 __void_param))
                       (10 : int)))
                   = (65 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_622 __void_param))
                         (11 : int)))
                     = (66 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_622 __void_param))
                         (12 : int)))
                     = (76 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_622 __void_param))
                           (13 : int)))
                       = (69 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_622 __void_param))
                         (14 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_622 __void_param))
                           (15 : int)))
                       = (70 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_622 __void_param))
                          (16 : int)))
                      = (79 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_622 __void_param))
                       (17 : int)))
                   = (82 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_622 __void_param))
                         (18 : int)))
                     = (32 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_622 __void_param))
                         (19 : int)))
                     = (65 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_622 __void_param))
                           (20 : int)))
                       = (32 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_622 __void_param))
                         (21 : int)))
                     = (83 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_622 __void_param))
                           (22 : int)))
                       = (80 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_622 __void_param))
                          (23 : int)))
                      = (65 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_622 __void_param))
                         (24 : int)))
                     = (67 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_622 __void_param))
                           (25 : int)))
                       = (69 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_622 __void_param))
                          (26 : int)))
                      = (87 : int))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_622 __void_param))
                           (27 : int)))
                       = (65 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_622 __void_param))
                             (28 : int)))
                         = (76 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_622 __void_param))
                            (29 : int)))
                        = (75 : int)))))))
end

module Temp___String_Literal_626
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_626 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_626__def_axiom:
    forall __void_param : unit [temp___String_Literal_626 __void_param]. true
end

module Temp___String_Literal_628
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_628 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_628__def_axiom:
    forall __void_param : unit [temp___String_Literal_628 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_628 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_628 __void_param))
                 (2 : int)))
             = (73 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_628 __void_param))
                     (3 : int)))
                 = (83 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_628 __void_param))
                       (4 : int)))
                   = (32 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_628 __void_param))
                      (5 : int)))
                  = (65 : int))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_628 __void_param))
                       (6 : int)))
                   = (76 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_628 __void_param))
                         (7 : int)))
                     = (82 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_628 __void_param))
                        (8 : int)))
                    = (69 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_628 __void_param))
                       (9 : int)))
                   = (65 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_628 __void_param))
                         (10 : int)))
                     = (68 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_628 __void_param))
                        (11 : int)))
                    = (89 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_628 __void_param))
                         (12 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_628 __void_param))
                           (13 : int)))
                       = (79 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_628 __void_param))
                          (14 : int)))
                      = (78 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_628 __void_param))
                       (15 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_628 __void_param))
                         (16 : int)))
                     = (65 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_628 __void_param))
                        (17 : int)))
                    = (32 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_628 __void_param))
                         (18 : int)))
                     = (83 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_628 __void_param))
                           (19 : int)))
                       = (80 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_628 __void_param))
                          (20 : int)))
                      = (65 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_628 __void_param))
                         (21 : int)))
                     = (67 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_628 __void_param))
                           (22 : int)))
                       = (69 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_628 __void_param))
                          (23 : int)))
                      = (87 : int))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_628 __void_param))
                           (24 : int)))
                       = (65 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_628 __void_param))
                             (25 : int)))
                         = (76 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_628 __void_param))
                            (26 : int)))
                        = (75 : int)))))))
end

module Temp___String_Literal_670
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_670 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_670__def_axiom:
    forall __void_param : unit [temp___String_Literal_670 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_670 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_670 __void_param))
                 (2 : int)))
             = (77 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_670 __void_param))
                   (3 : int)))
               = (111 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_670 __void_param))
                     (4 : int)))
                 = (100 : int))) /\
             (((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_670 __void_param))
                     (5 : int)))
                 = (117 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_670 __void_param))
                       (6 : int)))
                   = (108 : int)))) /\
            ((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_670 __void_param))
                     (7 : int)))
                 = (101 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_670 __void_param))
                       (8 : int)))
                   = (46 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_670 __void_param))
                       (9 : int)))
                   = (46 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_670 __void_param))
                         (10 : int)))
                     = (46 : int))))))
end

module Temp___String_Literal_672
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_672 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_672__def_axiom:
    forall __void_param : unit [temp___String_Literal_672 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_672 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_672 __void_param))
                 (2 : int)))
             = (73 : int))) /\
         ((((((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_672 __void_param))
                    (3 : int)))
                = (115 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_672 __void_param))
                      (4 : int)))
                  = (32 : int))) /\
              (((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_672 __void_param))
                      (5 : int)))
                  = (109 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_672 __void_param))
                        (6 : int)))
                    = (111 : int)))) /\
             ((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_672 __void_param))
                      (7 : int)))
                  = (118 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_672 __void_param))
                        (8 : int)))
                    = (105 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_672 __void_param))
                        (9 : int)))
                    = (110 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_672 __void_param))
                          (10 : int)))
                      = (103 : int))))) /\
            (((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_672 __void_param))
                      (11 : int)))
                  = (32 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_672 __void_param))
                        (12 : int)))
                    = (116 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_672 __void_param))
                        (13 : int)))
                    = (111 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_672 __void_param))
                          (14 : int)))
                      = (32 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_672 __void_param))
                        (15 : int)))
                    = (116 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_672 __void_param))
                          (16 : int)))
                      = (104 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_672 __void_param))
                          (17 : int)))
                      = (101 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_672 __void_param))
                            (18 : int)))
                        = (32 : int)))))))
end

module Temp___String_Literal_680
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_680 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_680__def_axiom:
    forall __void_param : unit [temp___String_Literal_680 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_680 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_680 __void_param))
                 (2 : int)))
             = (77 : int))) /\
         (((((Standard__character__rep.to_rep
                ((Array__Int__Standard__character.get
                    (temp___String_Literal_680 __void_param))
                   (3 : int)))
               = (111 : int)) /\
              ((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_680 __void_param))
                     (4 : int)))
                 = (100 : int))) /\
             (((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_680 __void_param))
                     (5 : int)))
                 = (117 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_680 __void_param))
                       (6 : int)))
                   = (108 : int)))) /\
            ((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_680 __void_param))
                     (7 : int)))
                 = (101 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_680 __void_param))
                       (8 : int)))
                   = (46 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_680 __void_param))
                       (9 : int)))
                   = (46 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_680 __void_param))
                         (10 : int)))
                     = (46 : int))))))
end

module Temp___String_Literal_682
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_682 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_682__def_axiom:
    forall __void_param : unit [temp___String_Literal_682 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_682 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_682 __void_param))
                 (2 : int)))
             = (73 : int))) /\
         ((((((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_682 __void_param))
                    (3 : int)))
                = (115 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_682 __void_param))
                      (4 : int)))
                  = (32 : int))) /\
              (((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_682 __void_param))
                      (5 : int)))
                  = (109 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_682 __void_param))
                        (6 : int)))
                    = (111 : int)))) /\
             ((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_682 __void_param))
                      (7 : int)))
                  = (118 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_682 __void_param))
                        (8 : int)))
                    = (105 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_682 __void_param))
                        (9 : int)))
                    = (110 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_682 __void_param))
                          (10 : int)))
                      = (103 : int))))) /\
            (((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_682 __void_param))
                      (11 : int)))
                  = (32 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_682 __void_param))
                        (12 : int)))
                    = (116 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_682 __void_param))
                        (13 : int)))
                    = (111 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_682 __void_param))
                          (14 : int)))
                      = (32 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_682 __void_param))
                        (15 : int)))
                    = (116 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_682 __void_param))
                          (16 : int)))
                      = (104 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_682 __void_param))
                          (17 : int)))
                      = (101 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_682 __void_param))
                            (18 : int)))
                        = (32 : int)))))))
end

module Temp___String_Literal_690
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_690 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_690__def_axiom:
    forall __void_param : unit [temp___String_Literal_690 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_690 __void_param))
               (1 : int)))
           = (67 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_690 __void_param))
                 (2 : int)))
             = (114 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_690 __void_param))
                     (3 : int)))
                 = (101 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_690 __void_param))
                       (4 : int)))
                   = (119 : int))) /\
               (((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_690 __void_param))
                       (5 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_690 __void_param))
                         (6 : int)))
                     = (115 : int)))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_690 __void_param))
                       (7 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_690 __void_param))
                         (8 : int)))
                     = (97 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_690 __void_param))
                         (9 : int)))
                     = (110 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_690 __void_param))
                           (10 : int)))
                       = (100 : int))))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_690 __void_param))
                       (11 : int)))
                   = (105 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_690 __void_param))
                         (12 : int)))
                     = (110 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_690 __void_param))
                         (13 : int)))
                     = (103 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_690 __void_param))
                           (14 : int)))
                       = (32 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_690 __void_param))
                         (15 : int)))
                     = (98 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_690 __void_param))
                           (16 : int)))
                       = (121 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_690 __void_param))
                           (17 : int)))
                       = (32 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_690 __void_param))
                             (18 : int)))
                         = (102 : int)))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_690 __void_param))
                       (19 : int)))
                   = (111 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_690 __void_param))
                         (20 : int)))
                     = (114 : int))) /\
                 (((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_690 __void_param))
                         (21 : int)))
                     = (32 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_690 __void_param))
                           (22 : int)))
                       = (115 : int)))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_690 __void_param))
                         (23 : int)))
                     = (112 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_690 __void_param))
                           (24 : int)))
                       = (97 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_690 __void_param))
                           (25 : int)))
                       = (99 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_690 __void_param))
                             (26 : int)))
                         = (101 : int))))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_690 __void_param))
                         (27 : int)))
                     = (119 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_690 __void_param))
                           (28 : int)))
                       = (97 : int))) /\
                   (((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_690 __void_param))
                           (29 : int)))
                       = (108 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_690 __void_param))
                             (30 : int)))
                         = (107 : int)))) /\
                  ((((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_690 __void_param))
                           (31 : int)))
                       = (46 : int)) /\
                      ((Standard__character__rep.to_rep
                          ((Array__Int__Standard__character.get
                              (temp___String_Literal_690 __void_param))
                             (32 : int)))
                         = (46 : int))) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_690 __void_param))
                            (33 : int)))
                        = (46 : int)))))))
end

module Temp___String_Literal_693
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_693 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_693__def_axiom:
    forall __void_param : unit [temp___String_Literal_693 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_693 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_693 __void_param))
                 (2 : int)))
             = (73 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_693 __void_param))
                     (3 : int)))
                 = (115 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_693 __void_param))
                       (4 : int)))
                   = (32 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_693 __void_param))
                      (5 : int)))
                  = (105 : int))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_693 __void_param))
                       (6 : int)))
                   = (110 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_693 __void_param))
                         (7 : int)))
                     = (115 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_693 __void_param))
                        (8 : int)))
                    = (105 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_693 __void_param))
                       (9 : int)))
                   = (100 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_693 __void_param))
                         (10 : int)))
                     = (101 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_693 __void_param))
                        (11 : int)))
                    = (32 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_693 __void_param))
                         (12 : int)))
                     = (116 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_693 __void_param))
                           (13 : int)))
                       = (104 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_693 __void_param))
                          (14 : int)))
                      = (101 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_693 __void_param))
                       (15 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_693 __void_param))
                         (16 : int)))
                     = (97 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_693 __void_param))
                        (17 : int)))
                    = (105 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_693 __void_param))
                         (18 : int)))
                     = (114 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_693 __void_param))
                           (19 : int)))
                       = (108 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_693 __void_param))
                          (20 : int)))
                      = (111 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_693 __void_param))
                         (21 : int)))
                     = (99 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_693 __void_param))
                           (22 : int)))
                       = (107 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_693 __void_param))
                          (23 : int)))
                      = (46 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_693 __void_param))
                          (24 : int)))
                      = (46 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_693 __void_param))
                            (25 : int)))
                        = (46 : int)))))))
end

module Temp___String_Literal_697
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_697 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_697__def_axiom:
    forall __void_param : unit [temp___String_Literal_697 __void_param]. true
end

module Temp___String_Literal_700
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_700 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_700__def_axiom:
    forall __void_param : unit [temp___String_Literal_700 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_700 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_700 __void_param))
                 (2 : int)))
             = (72 : int))) /\
         (((((((Standard__character__rep.to_rep
                  ((Array__Int__Standard__character.get
                      (temp___String_Literal_700 __void_param))
                     (3 : int)))
                 = (97 : int)) /\
                ((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_700 __void_param))
                       (4 : int)))
                   = (115 : int))) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_700 __void_param))
                      (5 : int)))
                  = (32 : int))) /\
              ((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_700 __void_param))
                       (6 : int)))
                   = (108 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_700 __void_param))
                         (7 : int)))
                     = (101 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_700 __void_param))
                        (8 : int)))
                    = (102 : int)))) /\
             (((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_700 __void_param))
                       (9 : int)))
                   = (116 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_700 __void_param))
                         (10 : int)))
                     = (32 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_700 __void_param))
                        (11 : int)))
                    = (116 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_700 __void_param))
                        (12 : int)))
                    = (104 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_700 __void_param))
                          (13 : int)))
                      = (101 : int))))) /\
            ((((((Standard__character__rep.to_rep
                    ((Array__Int__Standard__character.get
                        (temp___String_Literal_700 __void_param))
                       (14 : int)))
                   = (32 : int)) /\
                  ((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_700 __void_param))
                         (15 : int)))
                     = (97 : int))) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_700 __void_param))
                        (16 : int)))
                    = (105 : int))) /\
                ((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_700 __void_param))
                         (17 : int)))
                     = (114 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_700 __void_param))
                           (18 : int)))
                       = (108 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_700 __void_param))
                          (19 : int)))
                      = (111 : int)))) /\
               (((((Standard__character__rep.to_rep
                      ((Array__Int__Standard__character.get
                          (temp___String_Literal_700 __void_param))
                         (20 : int)))
                     = (99 : int)) /\
                    ((Standard__character__rep.to_rep
                        ((Array__Int__Standard__character.get
                            (temp___String_Literal_700 __void_param))
                           (21 : int)))
                       = (107 : int))) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_700 __void_param))
                          (22 : int)))
                      = (46 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_700 __void_param))
                          (23 : int)))
                      = (46 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_700 __void_param))
                            (24 : int)))
                        = (46 : int)))))))
end

module Temp___String_Literal_704
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_704 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_704__def_axiom:
    forall __void_param : unit [temp___String_Literal_704 __void_param]. true
end

module Temp___String_Literal_707
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  use Standard__character__rep as Standard__character__rep
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  
  val function temp___String_Literal_707 (__void_param: unit) : Array__Int__Standard__character.map
  
  axiom temp___String_Literal_707__def_axiom:
    forall __void_param : unit [temp___String_Literal_707 __void_param].
      ((((Standard__character__rep.to_rep
            ((Array__Int__Standard__character.get
                (temp___String_Literal_707 __void_param))
               (1 : int)))
           = (32 : int)) /\
          ((Standard__character__rep.to_rep
              ((Array__Int__Standard__character.get
                  (temp___String_Literal_707 __void_param))
                 (2 : int)))
             = (73 : int))) /\
         ((((((Standard__character__rep.to_rep
                 ((Array__Int__Standard__character.get
                     (temp___String_Literal_707 __void_param))
                    (3 : int)))
                = (83 : int)) /\
               ((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_707 __void_param))
                      (4 : int)))
                  = (32 : int))) /\
              (((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_707 __void_param))
                      (5 : int)))
                  = (79 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_707 __void_param))
                        (6 : int)))
                    = (78 : int)))) /\
             ((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_707 __void_param))
                      (7 : int)))
                  = (32 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_707 __void_param))
                        (8 : int)))
                    = (65 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_707 __void_param))
                        (9 : int)))
                    = (32 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_707 __void_param))
                          (10 : int)))
                      = (83 : int))))) /\
            (((((Standard__character__rep.to_rep
                   ((Array__Int__Standard__character.get
                       (temp___String_Literal_707 __void_param))
                      (11 : int)))
                  = (80 : int)) /\
                 ((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_707 __void_param))
                        (12 : int)))
                    = (65 : int))) /\
                (((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_707 __void_param))
                        (13 : int)))
                    = (67 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_707 __void_param))
                          (14 : int)))
                      = (69 : int)))) /\
               ((((Standard__character__rep.to_rep
                     ((Array__Int__Standard__character.get
                         (temp___String_Literal_707 __void_param))
                        (15 : int)))
                    = (87 : int)) /\
                   ((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_707 __void_param))
                          (16 : int)))
                      = (65 : int))) /\
                  (((Standard__character__rep.to_rep
                       ((Array__Int__Standard__character.get
                           (temp___String_Literal_707 __void_param))
                          (17 : int)))
                      = (76 : int)) /\
                     ((Standard__character__rep.to_rep
                         ((Array__Int__Standard__character.get
                             (temp___String_Literal_707 __void_param))
                            (18 : int)))
                        = (75 : int)))))))
end

module Standard__positive___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__positive as Standard__positive
  
  predicate dynamic_invariant (temp___expr_53: int) (temp___is_init_49: bool) (temp___skip_constant_50: bool) (temp___do_toplevel_51: bool) (temp___do_typ_inv_52: bool) =
    if ((temp___is_init_49 = True) \/
          (Standard__positive.first <= Standard__positive.last)) then
      (((Standard__positive.dynamic_property Standard__positive.first)
          Standard__positive.last)
         temp___expr_53)
    else true
  
  val dynamic_invariant (temp___expr_53: int) (temp___is_init_49: bool) (temp___skip_constant_50: bool) (temp___do_toplevel_51: bool) (temp___do_typ_inv_52: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_53 : int))
                      (temp___is_init_49 : bool))
                     (temp___skip_constant_50 : bool))
                    (temp___do_toplevel_51 : bool))
                   (temp___do_typ_inv_52 : bool)) }
  
  predicate default_initial_assumption (temp___expr_54: int) (temp___skip_top_level_55: bool) =
    true
  
  val default_initial_assumption (temp___expr_54: int) (temp___skip_top_level_55: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_54 : int))
                   (temp___skip_top_level_55 : bool)) }
end

module Standard__character___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Standard__character as Standard__character
  
  predicate dynamic_invariant (temp___expr_81: int) (temp___is_init_77: bool) (temp___skip_constant_78: bool) (temp___do_toplevel_79: bool) (temp___do_typ_inv_80: bool) =
    if ((temp___is_init_77 = True) \/
          (Standard__character.first <= Standard__character.last)) then
      (((Standard__character.dynamic_property Standard__character.first)
          Standard__character.last)
         temp___expr_81)
    else true
  
  val dynamic_invariant (temp___expr_81: int) (temp___is_init_77: bool) (temp___skip_constant_78: bool) (temp___do_toplevel_79: bool) (temp___do_typ_inv_80: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_81 : int))
                      (temp___is_init_77 : bool))
                     (temp___skip_constant_78 : bool))
                    (temp___do_toplevel_79 : bool))
                   (temp___do_typ_inv_80 : bool)) }
  
  predicate default_initial_assumption (temp___expr_82: int) (temp___skip_top_level_83: bool) =
    true
  
  val default_initial_assumption (temp___expr_82: int) (temp___skip_top_level_83: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_82 : int))
                   (temp___skip_top_level_83 : bool)) }
end

module Standard__string___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Standard__positive as Standard__positive
  use Standard__string as Standard__string
  
  predicate dynamic_invariant (temp___expr_103: Standard__string.string__) (temp___is_init_99: bool) (temp___skip_constant_100: bool) (temp___do_toplevel_101: bool) (temp___do_typ_inv_102: bool) =
    if temp___skip_constant_100 then true
    else
      ((((Standard__string.dynamic_property Standard__positive.first)
           Standard__positive.last)
          (Standard__string.first temp___expr_103))
         (Standard__string.last temp___expr_103))
  
  val dynamic_invariant (temp___expr_103: Standard__string.string__) (temp___is_init_99: bool) (temp___skip_constant_100: bool) (temp___do_toplevel_101: bool) (temp___do_typ_inv_102: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_103 : Standard__string.string__))
                      (temp___is_init_99 : bool))
                     (temp___skip_constant_100 : bool))
                    (temp___do_toplevel_101 : bool))
                   (temp___do_typ_inv_102 : bool)) }
end

module Station__attempt_spacewalk__top_cm___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Station__attempt_spacewalk__bottom_cm___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Station__attempt_spacewalk__L_4__i___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Station__attempt_spacewalk__L_5__i___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Station__attempt_spacewalk__L_6__i___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Station__attempt_spacewalk__L_4___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Station__attempt_spacewalk__L_5___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Station__attempt_spacewalk__L_6___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Station__airlock_door___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Station__airlock_door as Station__airlock_door
  
  predicate dynamic_invariant (temp___expr_171: int) (temp___is_init_167: bool) (temp___skip_constant_168: bool) (temp___do_toplevel_169: bool) (temp___do_typ_inv_170: bool) =
    if ((temp___is_init_167 = True) \/
          (Station__airlock_door.first <= Station__airlock_door.last)) then
      (((Station__airlock_door.dynamic_property Station__airlock_door.first)
          Station__airlock_door.last)
         temp___expr_171)
    else true
  
  val dynamic_invariant (temp___expr_171: int) (temp___is_init_167: bool) (temp___skip_constant_168: bool) (temp___do_toplevel_169: bool) (temp___do_typ_inv_170: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_171 : int))
                      (temp___is_init_167 : bool))
                     (temp___skip_constant_168 : bool))
                    (temp___do_toplevel_169 : bool))
                   (temp___do_typ_inv_170 : bool)) }
  
  predicate default_initial_assumption (temp___expr_172: int) (temp___skip_top_level_173: bool) =
    true
  
  val default_initial_assumption (temp___expr_172: int) (temp___skip_top_level_173: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_172 : int))
                   (temp___skip_top_level_173 : bool)) }
end

module Station__module___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Station__module as Station__module
  
  predicate dynamic_invariant (temp___expr_178: int) (temp___is_init_174: bool) (temp___skip_constant_175: bool) (temp___do_toplevel_176: bool) (temp___do_typ_inv_177: bool) =
    if ((temp___is_init_174 = True) \/
          (Station__module.first <= Station__module.last)) then
      (((Station__module.dynamic_property Station__module.first)
          Station__module.last)
         temp___expr_178)
    else true
  
  val dynamic_invariant (temp___expr_178: int) (temp___is_init_174: bool) (temp___skip_constant_175: bool) (temp___do_toplevel_176: bool) (temp___do_typ_inv_177: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_178 : int))
                      (temp___is_init_174 : bool))
                     (temp___skip_constant_175 : bool))
                    (temp___do_toplevel_176 : bool))
                   (temp___do_typ_inv_177 : bool)) }
  
  predicate default_initial_assumption (temp___expr_179: int) (temp___skip_top_level_180: bool) =
    true
  
  val default_initial_assumption (temp___expr_179: int) (temp___skip_top_level_180: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_179 : int))
                   (temp___skip_top_level_180 : bool)) }
end

module Station__module_array___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Station__module as Array__Int__Station__module
  use Array__Int__Station__module as Array__Int__Station__module
  
  predicate dynamic_invariant (temp___expr_185: Array__Int__Station__module.map) (temp___is_init_181: bool) (temp___skip_constant_182: bool) (temp___do_toplevel_183: bool) (temp___do_typ_inv_184: bool) =
    true
  
  val dynamic_invariant (temp___expr_185: Array__Int__Station__module.map) (temp___is_init_181: bool) (temp___skip_constant_182: bool) (temp___do_toplevel_183: bool) (temp___do_typ_inv_184: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_185 : Array__Int__Station__module.map))
                      (temp___is_init_181 : bool))
                     (temp___skip_constant_182 : bool))
                    (temp___do_toplevel_183 : bool))
                   (temp___do_typ_inv_184 : bool)) }
  
  predicate default_initial_assumption (temp___expr_187: Array__Int__Station__module.map) (temp___skip_top_level_188: bool) =
    true
  
  val default_initial_assumption (temp___expr_187: Array__Int__Station__module.map) (temp___skip_top_level_188: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_187 : Array__Int__Station__module.map))
                   (temp___skip_top_level_188 : bool)) }
end

module Station__crewmember___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Station__crewmember as Station__crewmember
  
  predicate dynamic_invariant (temp___expr_195: int) (temp___is_init_191: bool) (temp___skip_constant_192: bool) (temp___do_toplevel_193: bool) (temp___do_typ_inv_194: bool) =
    if ((temp___is_init_191 = True) \/
          (Station__crewmember.first <= Station__crewmember.last)) then
      (((Station__crewmember.dynamic_property Station__crewmember.first)
          Station__crewmember.last)
         temp___expr_195)
    else true
  
  val dynamic_invariant (temp___expr_195: int) (temp___is_init_191: bool) (temp___skip_constant_192: bool) (temp___do_toplevel_193: bool) (temp___do_typ_inv_194: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_195 : int))
                      (temp___is_init_191 : bool))
                     (temp___skip_constant_192 : bool))
                    (temp___do_toplevel_193 : bool))
                   (temp___do_typ_inv_194 : bool)) }
  
  predicate default_initial_assumption (temp___expr_196: int) (temp___skip_top_level_197: bool) =
    true
  
  val default_initial_assumption (temp___expr_196: int) (temp___skip_top_level_197: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_196 : int))
                   (temp___skip_top_level_197 : bool)) }
end

module Station__crewmemberstatus___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Station__crewmemberstatus as Station__crewmemberstatus
  
  predicate dynamic_invariant (temp___expr_202: int) (temp___is_init_198: bool) (temp___skip_constant_199: bool) (temp___do_toplevel_200: bool) (temp___do_typ_inv_201: bool) =
    if ((temp___is_init_198 = True) \/
          (Station__crewmemberstatus.first <= Station__crewmemberstatus.last)) then
      (((Station__crewmemberstatus.dynamic_property
           Station__crewmemberstatus.first)
          Station__crewmemberstatus.last)
         temp___expr_202)
    else true
  
  val dynamic_invariant (temp___expr_202: int) (temp___is_init_198: bool) (temp___skip_constant_199: bool) (temp___do_toplevel_200: bool) (temp___do_typ_inv_201: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_202 : int))
                      (temp___is_init_198 : bool))
                     (temp___skip_constant_199 : bool))
                    (temp___do_toplevel_200 : bool))
                   (temp___do_typ_inv_201 : bool)) }
  
  predicate default_initial_assumption (temp___expr_203: int) (temp___skip_top_level_204: bool) =
    true
  
  val default_initial_assumption (temp___expr_203: int) (temp___skip_top_level_204: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_203 : int))
                   (temp___skip_top_level_204 : bool)) }
end

module Station__crew_record___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Station__crew_record as Station__crew_record
  
  predicate dynamic_invariant (temp___expr_209: Station__crew_record.crew_record) (temp___is_init_205: bool) (temp___skip_constant_206: bool) (temp___do_toplevel_207: bool) (temp___do_typ_inv_208: bool) =
    true
  
  val dynamic_invariant (temp___expr_209: Station__crew_record.crew_record) (temp___is_init_205: bool) (temp___skip_constant_206: bool) (temp___do_toplevel_207: bool) (temp___do_typ_inv_208: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_209 : Station__crew_record.crew_record))
                      (temp___is_init_205 : bool))
                     (temp___skip_constant_206 : bool))
                    (temp___do_toplevel_207 : bool))
                   (temp___do_typ_inv_208 : bool)) }
  
  predicate default_initial_assumption (temp___expr_210: Station__crew_record.crew_record) (temp___skip_top_level_211: bool) =
    true
  
  val default_initial_assumption (temp___expr_210: Station__crew_record.crew_record) (temp___skip_top_level_211: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_210 : Station__crew_record.crew_record))
                   (temp___skip_top_level_211 : bool)) }
end

module Station__crew_array___axiom
  use _gnatprove_standard.Main
  use int.Int
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  
  predicate dynamic_invariant (temp___expr_219: Array__Int__Station__crew_record.map) (temp___is_init_215: bool) (temp___skip_constant_216: bool) (temp___do_toplevel_217: bool) (temp___do_typ_inv_218: bool) =
    true
  
  val dynamic_invariant (temp___expr_219: Array__Int__Station__crew_record.map) (temp___is_init_215: bool) (temp___skip_constant_216: bool) (temp___do_toplevel_217: bool) (temp___do_typ_inv_218: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_219 :
                          Array__Int__Station__crew_record.map))
                      (temp___is_init_215 : bool))
                     (temp___skip_constant_216 : bool))
                    (temp___do_toplevel_217 : bool))
                   (temp___do_typ_inv_218 : bool)) }
  
  predicate default_initial_assumption (temp___expr_221: Array__Int__Station__crew_record.map) (temp___skip_top_level_222: bool) =
    true
  
  val default_initial_assumption (temp___expr_221: Array__Int__Station__crew_record.map) (temp___skip_top_level_222: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_221 : Array__Int__Station__crew_record.map))
                   (temp___skip_top_level_222 : bool)) }
end

module Station__s___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Station__attempt_spacewalk__s___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Station__attempt_spacewalk__cm___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Ada___ada__text_io__count
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type count = <range 0 2147483647>
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (2147483647 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = count,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type count__ref = { mutable count__content : count }
  
  function count__ref_count__content__projection (a: count__ref) : count =
    a.count__content
  
  meta "model_projection" function count__ref_count__content__projection
  
  meta "inline:no" function count__ref_count__content__projection
  
  val count__havoc (x: count__ref) : unit
    writes { x }
end

module Ada___ada__text_io__count___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use Ada___ada__text_io__count as Ada___ada__text_io__count
  
  predicate dynamic_invariant (temp___expr_342: int) (temp___is_init_338: bool) (temp___skip_constant_339: bool) (temp___do_toplevel_340: bool) (temp___do_typ_inv_341: bool) =
    if ((temp___is_init_338 = True) \/
          (Ada___ada__text_io__count.first <= Ada___ada__text_io__count.last)) then
      (((Ada___ada__text_io__count.dynamic_property
           Ada___ada__text_io__count.first)
          Ada___ada__text_io__count.last)
         temp___expr_342)
    else true
  
  val dynamic_invariant (temp___expr_342: int) (temp___is_init_338: bool) (temp___skip_constant_339: bool) (temp___do_toplevel_340: bool) (temp___do_typ_inv_341: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_342 : int))
                      (temp___is_init_338 : bool))
                     (temp___skip_constant_339 : bool))
                    (temp___do_toplevel_340 : bool))
                   (temp___do_typ_inv_341 : bool)) }
  
  predicate default_initial_assumption (temp___expr_343: int) (temp___skip_top_level_344: bool) =
    true
  
  val default_initial_assumption (temp___expr_343: int) (temp___skip_top_level_344: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_343 : int))
                   (temp___skip_top_level_344 : bool)) }
end

module Ada___ada__text_io__line_length__2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use Ada___ada__text_io__line_length__2 as Ada___ada__text_io__line_length__2
  use Ada___ada__text_io__count___axiom as Ada___ada__text_io__count___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val line_length (__void_param: unit) : int
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { true }
    writes {  }
    ensures { (((result
                   = (((((((Ada___ada__text_io__line_length__2.line_length
                              (Main.__private__content
                                  Ada___ada__text_io__file_system.file_system))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_in.standard_in))
                            (Main.__private__content
                                Ada___ada__text_io__standard_out.standard_out))
                           (Main.__private__content
                               Ada___ada__text_io__standard_err.standard_err))
                          (Main.__private__content
                              Ada___ada__text_io__current_in.current_in))
                         (Main.__private__content
                             Ada___ada__text_io__current_out.current_out))
                        (Main.__private__content
                            Ada___ada__text_io__current_err.current_err))) /\
                  true) /\
                 (((((Ada___ada__text_io__count___axiom.dynamic_invariant
                        result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom line_length__post_axiom:
    forall Ada___ada__text_io__file_system___file_system___ : Main.__private, Ada___ada__text_io__standard_in___standard_in___ : 
          Main.__private, Ada___ada__text_io__standard_out___standard_out___ : 
          Main.__private, Ada___ada__text_io__standard_err___standard_err___ : 
          Main.__private, Ada___ada__text_io__current_in___current_in___ : 
          Main.__private, Ada___ada__text_io__current_out___current_out___ : 
          Main.__private, Ada___ada__text_io__current_err___current_err___ : 
          Main.__private
          [((((((Ada___ada__text_io__line_length__2.line_length
                   Ada___ada__text_io__file_system___file_system___)
                  Ada___ada__text_io__standard_in___standard_in___)
                 Ada___ada__text_io__standard_out___standard_out___)
                Ada___ada__text_io__standard_err___standard_err___)
               Ada___ada__text_io__current_in___current_in___)
              Ada___ada__text_io__current_out___current_out___)
             Ada___ada__text_io__current_err___current_err___].
      let result =
        ((((((Ada___ada__text_io__line_length__2.line_length
                Ada___ada__text_io__file_system___file_system___)
               Ada___ada__text_io__standard_in___standard_in___)
              Ada___ada__text_io__standard_out___standard_out___)
             Ada___ada__text_io__standard_err___standard_err___)
            Ada___ada__text_io__current_in___current_in___)
           Ada___ada__text_io__current_out___current_out___)
          Ada___ada__text_io__current_err___current_err___ in
      ((true /\
          (((((Ada___ada__text_io__count___axiom.dynamic_invariant result)
                True)
               False)
              True)
             True)) /\
         true)
end

module Ada___ada__text_io__page_length__2___axiom
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use Ada___ada__text_io__page_length__2 as Ada___ada__text_io__page_length__2
  use Ada___ada__text_io__count___axiom as Ada___ada__text_io__count___axiom
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  use Ada___ada__text_io__file_system as Ada___ada__text_io__file_system
  use Ada___ada__text_io__standard_in as Ada___ada__text_io__standard_in
  use Ada___ada__text_io__standard_out as Ada___ada__text_io__standard_out
  use Ada___ada__text_io__standard_err as Ada___ada__text_io__standard_err
  use Ada___ada__text_io__current_in as Ada___ada__text_io__current_in
  use Ada___ada__text_io__current_out as Ada___ada__text_io__current_out
  use Ada___ada__text_io__current_err as Ada___ada__text_io__current_err
  
  val page_length (__void_param: unit) : int
    reads { Ada___ada__text_io__file_system.file_system,
      Ada___ada__text_io__standard_in.standard_in,
      Ada___ada__text_io__standard_out.standard_out,
      Ada___ada__text_io__standard_err.standard_err,
      Ada___ada__text_io__current_in.current_in,
      Ada___ada__text_io__current_out.current_out,
      Ada___ada__text_io__current_err.current_err }
    requires { true }
    writes {  }
    ensures { (((result
                   = (((((((Ada___ada__text_io__page_length__2.page_length
                              (Main.__private__content
                                  Ada___ada__text_io__file_system.file_system))
                             (Main.__private__content
                                 Ada___ada__text_io__standard_in.standard_in))
                            (Main.__private__content
                                Ada___ada__text_io__standard_out.standard_out))
                           (Main.__private__content
                               Ada___ada__text_io__standard_err.standard_err))
                          (Main.__private__content
                              Ada___ada__text_io__current_in.current_in))
                         (Main.__private__content
                             Ada___ada__text_io__current_out.current_out))
                        (Main.__private__content
                            Ada___ada__text_io__current_err.current_err))) /\
                  true) /\
                 (((((Ada___ada__text_io__count___axiom.dynamic_invariant
                        result)
                       True)
                      False)
                     True)
                    True)) }
  
  axiom page_length__post_axiom:
    forall Ada___ada__text_io__file_system___file_system___ : Main.__private, Ada___ada__text_io__standard_in___standard_in___ : 
          Main.__private, Ada___ada__text_io__standard_out___standard_out___ : 
          Main.__private, Ada___ada__text_io__standard_err___standard_err___ : 
          Main.__private, Ada___ada__text_io__current_in___current_in___ : 
          Main.__private, Ada___ada__text_io__current_out___current_out___ : 
          Main.__private, Ada___ada__text_io__current_err___current_err___ : 
          Main.__private
          [((((((Ada___ada__text_io__page_length__2.page_length
                   Ada___ada__text_io__file_system___file_system___)
                  Ada___ada__text_io__standard_in___standard_in___)
                 Ada___ada__text_io__standard_out___standard_out___)
                Ada___ada__text_io__standard_err___standard_err___)
               Ada___ada__text_io__current_in___current_in___)
              Ada___ada__text_io__current_out___current_out___)
             Ada___ada__text_io__current_err___current_err___].
      let result =
        ((((((Ada___ada__text_io__page_length__2.page_length
                Ada___ada__text_io__file_system___file_system___)
               Ada___ada__text_io__standard_in___standard_in___)
              Ada___ada__text_io__standard_out___standard_out___)
             Ada___ada__text_io__standard_err___standard_err___)
            Ada___ada__text_io__current_in___current_in___)
           Ada___ada__text_io__current_out___current_out___)
          Ada___ada__text_io__current_err___current_err___ in
      ((true /\
          (((((Ada___ada__text_io__count___axiom.dynamic_invariant result)
                True)
               False)
              True)
             True)) /\
         true)
end

module Station__Tcrew_arrayD1___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Station__station_record__T5s___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Station__station_record__T6s___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module Station__attempt_spacewalk__subprogram_def
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Main as Main
  use _gnatprove_standard.Integer as Integer
  use _gnatprove_standard.Boolean as Boolean
  use Standard_String__Img as Standard_String__Img
  use Standard__integer___axiom as Standard__integer___axiom
  use Standard__positive as Standard__positive
  use Array__Int__Standard__character__Concat as Array__Int__Standard__character__Concat
  use Standard__string as Standard__string
  use Station__s as Station__s
  use Station__station_record as Station__station_record
  use Station__station_record___axiom as Station__station_record___axiom
  use Station__sealedinvariant as Station__sealedinvariant
  use Station__sealedinvariant___axiom as Station__sealedinvariant___axiom
  use Station__altitudeinvariant as Station__altitudeinvariant
  use Station__altitudeinvariant___axiom as Station__altitudeinvariant___axiom
  use Station__open_door___axiom as Station__open_door___axiom
  use Station__seal_airlock___axiom as Station__seal_airlock___axiom
  use Station__attempt_spacewalk__s as Station__attempt_spacewalk__s
  use Station__attempt_spacewalk__cm as Station__attempt_spacewalk__cm
  use Ada___ada__text_io__put_line__2___axiom as Ada___ada__text_io__put_line__2___axiom
  use Station__attempt_spacewalk__top_cm as Station__attempt_spacewalk__top_cm
  use Station__attempt_spacewalk__bottom_cm as Station__attempt_spacewalk__bottom_cm
  use Station__attempt_spacewalk__L_4__i as Station__attempt_spacewalk__L_4__i
  use Station__attempt_spacewalk__L_5__i as Station__attempt_spacewalk__L_5__i
  use Station__attempt_spacewalk__L_6__i as Station__attempt_spacewalk__L_6__i
  use Station__module as Station__module
  use Station__module__rep as Station__module__rep
  use Array__Int__Station__module as Array__Int__Station__module
  use Station__crewmember as Station__crewmember
  use Station__crewmember__rep as Station__crewmember__rep
  use Station__crewmemberstatus as Station__crewmemberstatus
  use Station__crewmemberstatus__rep as Station__crewmemberstatus__rep
  use Station__crew_record as Station__crew_record
  use Station__Tcrew_arrayD1 as Station__Tcrew_arrayD1
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Station__attempt_spacewalk__L_4 as Station__attempt_spacewalk__L_4
  use Station__attempt_spacewalk__L_5 as Station__attempt_spacewalk__L_5
  use Station__attempt_spacewalk__L_6 as Station__attempt_spacewalk__L_6
  use Temp___String_Literal_606 as Temp___String_Literal_606
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_610 as Temp___String_Literal_610
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_612 as Temp___String_Literal_612
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Station__module as Array__Int__Station__module
  use Temp___String_Literal_617 as Temp___String_Literal_617
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Temp___String_Literal_620 as Temp___String_Literal_620
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_622 as Temp___String_Literal_622
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_626 as Temp___String_Literal_626
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_628 as Temp___String_Literal_628
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__module as Array__Int__Station__module
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__module as Array__Int__Station__module
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Temp___String_Literal_670 as Temp___String_Literal_670
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Temp___String_Literal_672 as Temp___String_Literal_672
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_680 as Temp___String_Literal_680
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Temp___String_Literal_682 as Temp___String_Literal_682
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_690 as Temp___String_Literal_690
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_693 as Temp___String_Literal_693
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_697 as Temp___String_Literal_697
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_700 as Temp___String_Literal_700
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_704 as Temp___String_Literal_704
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Temp___String_Literal_707 as Temp___String_Literal_707
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Standard__character as Array__Int__Standard__character
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__module as Array__Int__Station__module
  use Array__Int__Station__module as Array__Int__Station__module
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__module as Array__Int__Station__module
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Array__Int__Station__crew_record as Array__Int__Station__crew_record
  use Standard__integer___axiom as Standard__integer___axiom
  use Standard__positive___axiom as Standard__positive___axiom
  use Standard__character___axiom as Standard__character___axiom
  use Standard__string___axiom as Standard__string___axiom
  use Standard__integer___axiom as Standard__integer___axiom
  use Station__attempt_spacewalk__top_cm___axiom as Station__attempt_spacewalk__top_cm___axiom
  use Station__attempt_spacewalk__bottom_cm___axiom as Station__attempt_spacewalk__bottom_cm___axiom
  use Station__attempt_spacewalk__L_4__i___axiom as Station__attempt_spacewalk__L_4__i___axiom
  use Station__attempt_spacewalk__L_5__i___axiom as Station__attempt_spacewalk__L_5__i___axiom
  use Station__attempt_spacewalk__L_6__i___axiom as Station__attempt_spacewalk__L_6__i___axiom
  use Station__attempt_spacewalk__L_4___axiom as Station__attempt_spacewalk__L_4___axiom
  use Station__attempt_spacewalk__L_5___axiom as Station__attempt_spacewalk__L_5___axiom
  use Station__attempt_spacewalk__L_6___axiom as Station__attempt_spacewalk__L_6___axiom
  use Station__airlock_door___axiom as Station__airlock_door___axiom
  use Station__module___axiom as Station__module___axiom
  use Station__module_array___axiom as Station__module_array___axiom
  use Station__crewmember___axiom as Station__crewmember___axiom
  use Station__crewmemberstatus___axiom as Station__crewmemberstatus___axiom
  use Station__crew_record___axiom as Station__crew_record___axiom
  use Station__crew_array___axiom as Station__crew_array___axiom
  use Station__station_record___axiom as Station__station_record___axiom
  use Station__s___axiom as Station__s___axiom
  use Station__sealedinvariant___axiom as Station__sealedinvariant___axiom
  use Station__altitudeinvariant___axiom as Station__altitudeinvariant___axiom
  use Station__open_door___axiom as Station__open_door___axiom
  use Station__seal_airlock___axiom as Station__seal_airlock___axiom
  use Station__attempt_spacewalk__s___axiom as Station__attempt_spacewalk__s___axiom
  use Station__attempt_spacewalk__cm___axiom as Station__attempt_spacewalk__cm___axiom
  use Ada___ada__text_io__count___axiom as Ada___ada__text_io__count___axiom
  use Ada___ada__text_io__line_length__2___axiom as Ada___ada__text_io__line_length__2___axiom
  use Ada___ada__text_io__page_length__2___axiom as Ada___ada__text_io__page_length__2___axiom
  use Ada___ada__text_io__put_line__2___axiom as Ada___ada__text_io__put_line__2___axiom
  use Station__Tcrew_arrayD1___axiom as Station__Tcrew_arrayD1___axiom
  use Station__station_record__T5s___axiom as Station__station_record__T5s___axiom
  use Station__station_record__T6s___axiom as Station__station_record__T6s___axiom
  
  let def (__void_param : unit)
    requires { [#"station.ads" 93 0 0] true }
    ensures { [#"station.ads" 93 0 0]
              [#"station.ads" 98 0 0]
              [@GP_Reason:VC_POSTCONDITION]
              [@GP_Shape:pragargs__or]
              [@comment:       Post => (AltitudeInvariant and S.Crew(CM).Location = Space and                ^ station.ads:98:16:VC_POSTCONDITION]
              [@model_vc_post]
              [@GP_Sloc:station.ads:98:16]
              [@GP_Id:54]
              [@GP_Pretty_Ada:13777]
              [@GP_Sloc:station.ads:98:16]
              (((((epsilon temp___result_735: bool.
                     ((temp___result_735
                         = (Station__altitudeinvariant.altitudeinvariant
                              (Station__station_record.__split_fields__content
                                  Station__s.s__split_fields))) /\
                        ((Station__altitudeinvariant.altitudeinvariant__function_guard
                            temp___result_735)
                           (Station__station_record.__split_fields__content
                               Station__s.s__split_fields))))
                    = True) /\
                   ((Station__module__rep.to_rep
                       ((Station__crew_record.__split_fields
                            (let temp___736 =
                               (Station__station_record.__split_fields
                                   { Station__station_record.__split_fields =
                                       (Station__station_record.__split_fields__content
                                           Station__attempt_spacewalk__s.s__split_fields) }).
                                 Station__station_record.rec__station__station_record__crew in
                             (Array__Int__Station__crew_record.get temp___736)
                               Station__attempt_spacewalk__cm.cm)).Station__crew_record.rec__station__crew_record__location))
                      = (4 : int))) /\
                  ((((Station__station_record.__split_fields
                         { Station__station_record.__split_fields =
                             (Station__station_record.__split_fields__content
                                 Station__attempt_spacewalk__s.s__split_fields) }).
                       Station__station_record.rec__station__station_record__activespacewalk)
                      = True) <->
                     true)) \/
                 (((((epsilon temp___result_737: bool.
                        ((temp___result_737
                            = (Station__sealedinvariant.sealedinvariant
                                 (Station__station_record.__split_fields__content
                                     Station__s.s__split_fields))) /\
                           ((Station__sealedinvariant.sealedinvariant__function_guard
                               temp___result_737)
                              (Station__station_record.__split_fields__content
                                  Station__s.s__split_fields))))
                       = True) /\
                      ((epsilon temp___result_738: bool.
                          ((temp___result_738
                              = (Station__altitudeinvariant.altitudeinvariant
                                   (Station__station_record.__split_fields__content
                                       Station__s.s__split_fields))) /\
                             ((Station__altitudeinvariant.altitudeinvariant__function_guard
                                 temp___result_738)
                                (Station__station_record.__split_fields__content
                                    Station__s.s__split_fields))))
                         = True)) /\
                     ((Station__module__rep.to_rep
                         ((Station__crew_record.__split_fields
                              (let temp___739 =
                                 (Station__station_record.__split_fields
                                     { Station__station_record.__split_fields =
                                         (Station__station_record.__split_fields__content
                                             Station__attempt_spacewalk__s.s__split_fields) }).
                                   Station__station_record.rec__station__station_record__crew in
                               (Array__Int__Station__crew_record.get
                                  temp___739)
                                 Station__attempt_spacewalk__cm.cm)).
                            Station__crew_record.rec__station__crew_record__location))
                        <> (4 : int))) /\
                    ((((Station__station_record.__split_fields
                           { Station__station_record.__split_fields =
                               (Station__station_record.__split_fields__content
                                   Station__attempt_spacewalk__s.s__split_fields) }).
                         Station__station_record.rec__station__station_record__activespacewalk)
                        = True) <->
                       false))) }
  = [@vc:divergent]
    (([@GNAT-comment:Assume dynamic invariants of inputs of the subprogram station.ads:93]
      ());
     assume {
       ((((Station__station_record___axiom.dynamic_invariant
             { Station__station_record.__split_fields =
                 (Station__station_record.__split_fields__content
                     Station__s.s__split_fields) })
            True)
           False)
          True)
         True };
     assume {
       ((((Station__station_record___axiom.dynamic_invariant
             { Station__station_record.__split_fields =
                 (Station__station_record.__split_fields__content
                     Station__attempt_spacewalk__s.s__split_fields) })
            True)
           False)
          True)
         True };
     assume {
       ((((Standard__integer___axiom.dynamic_invariant
             Station__attempt_spacewalk__cm.cm)
            True)
           False)
          True)
         True };
     ([@GNAT-comment:Assume moved pointers in outputs of the subprogram station.ads:93]
      ());
     ([@GNAT-comment:Check for RTE in the Pre of the subprogram station.ads:93]
      ());
     (begin
        ensures { true }
        let _ =
          let _ =
            (((Boolean.andb
                 ((Boolean.andb
                     ((Boolean.andb
                         (Station__sealedinvariant___axiom.sealedinvariant ()))
                        (Station__altitudeinvariant___axiom.altitudeinvariant
                           ())))
                    (Station__attempt_spacewalk__cm.cm >= (1 : int))))
                (Station__attempt_spacewalk__cm.cm < (3 : int)))
              &&
               ((let i = val _f : int in
                         _f in
                 if ((Boolean.andb ((1 : int) <= i)) (i <= (3 : int))) then
                   (begin
                      ensures { true }
                      let _ =
                        let _ =
                          ((Station__module__rep.to_rep
                              (let temp___728 =
                                 (Station__station_record.__split_fields
                                     { Station__station_record.__split_fields =
                                         (Station__station_record.__split_fields__content
                                             Station__attempt_spacewalk__s.s__split_fields) }).
                                   Station__station_record.rec__station__station_record__modules in
                               (Array__Int__Station__module.get temp___728) i))
                             <> (3 : int)) in
                        () in
                      ()
                    end)
                 else ());
                (val _f : bool
                   ensures { ((result = True) <->
                                (forall i : int.
                                   ((((1 : int) <= i) /\ (i <= (3 : int))) ->
                                      ([@GP_Pretty_Ada:2439]
                                       ((Station__module__rep.to_rep
                                           (let temp___729 =
                                              (Station__station_record.__split_fields
                                                  { Station__station_record.__split_fields =
                                                      (Station__station_record.__split_fields__content
                                                          Station__attempt_spacewalk__s.s__split_fields) }).
                                                Station__station_record.rec__station__station_record__modules in
                                            (Array__Int__Station__module.get
                                               temp___729)
                                              i))
                                          <> (3 : int)))))) } in
                 _f)))
             &&
              ((Boolean.andb
                  ((Station__crewmemberstatus__rep.to_rep
                      ((Station__crew_record.__split_fields
                           (let temp___730 =
                              (Station__station_record.__split_fields
                                  { Station__station_record.__split_fields =
                                      (Station__station_record.__split_fields__content
                                          Station__attempt_spacewalk__s.s__split_fields) }).
                                Station__station_record.rec__station__station_record__crew in
                            (Array__Int__Station__crew_record.get temp___730)
                              (assert {
                                 [#"station.ads" 96 0 0]
                                 [@GP_Shape:pragargs__andthen__and__cmp__selectcomp__ixdcomp]
                                 [@GP_Sloc:station.ads:96:16]
                                 [@vc:annotation]
                                 [@comment:       (S.Crew(CM).Status /= Spacewalk and S.ActiveSpaceWalk = false),                ^ station.ads:96:16:VC_INDEX_CHECK]
                                 [@GP_Reason:VC_INDEX_CHECK]
                                 [@GP_Id:53]
                                 ((Station__Tcrew_arrayD1.first
                                     <= Station__attempt_spacewalk__cm.cm) /\
                                    (Station__attempt_spacewalk__cm.cm
                                       <= Station__Tcrew_arrayD1.last)) };
                               Station__attempt_spacewalk__cm.cm))).Station__crew_record.rec__station__crew_record__status))
                     <> (0 : int)))
                 ((Boolean.to_int
                     ((Station__station_record.__split_fields
                          { Station__station_record.__split_fields =
                              (Station__station_record.__split_fields__content
                                  Station__attempt_spacewalk__s.s__split_fields) }).
                        Station__station_record.rec__station__station_record__activespacewalk))
                    = (Boolean.to_int (Boolean.of_int (0 : int))))) in
          () in
        ()
      end);
     ([@GNAT-comment:Assume Pre of the subprogram station.ads:93] ());
     assume {
       (((((([@GP_Pretty_Ada:2410]
             ((epsilon temp___result_731: bool.
                 ((temp___result_731
                     = (Station__sealedinvariant.sealedinvariant
                          (Station__station_record.__split_fields__content
                              Station__s.s__split_fields))) /\
                    ((Station__sealedinvariant.sealedinvariant__function_guard
                        temp___result_731)
                       (Station__station_record.__split_fields__content
                           Station__s.s__split_fields))))
                = True)) /\
              ([@GP_Pretty_Ada:2411]
               ((epsilon temp___result_732: bool.
                   ((temp___result_732
                       = (Station__altitudeinvariant.altitudeinvariant
                            (Station__station_record.__split_fields__content
                                Station__s.s__split_fields))) /\
                      ((Station__altitudeinvariant.altitudeinvariant__function_guard
                          temp___result_732)
                         (Station__station_record.__split_fields__content
                             Station__s.s__split_fields))))
                  = True))) /\
             ([@GP_Pretty_Ada:2416]
              (Station__attempt_spacewalk__cm.cm >= (1 : int)))) /\
            ([@GP_Pretty_Ada:2420]
             (Station__attempt_spacewalk__cm.cm < (3 : int)))) /\
           (forall i : int.
              ((((1 : int) <= i) /\ (i <= (3 : int))) ->
                 ([@GP_Pretty_Ada:2439]
                  ((Station__module__rep.to_rep
                      (let temp___733 =
                         (Station__station_record.__split_fields
                             { Station__station_record.__split_fields =
                                 (Station__station_record.__split_fields__content
                                     Station__attempt_spacewalk__s.s__split_fields) }).
                           Station__station_record.rec__station__station_record__modules in
                       (Array__Int__Station__module.get temp___733) i))
                     <> (3 : int)))))) /\
          (([@GP_Pretty_Ada:2449]
            ((Station__crewmemberstatus__rep.to_rep
                ((Station__crew_record.__split_fields
                     (let temp___734 =
                        (Station__station_record.__split_fields
                            { Station__station_record.__split_fields =
                                (Station__station_record.__split_fields__content
                                    Station__attempt_spacewalk__s.s__split_fields) }).
                          Station__station_record.rec__station__station_record__crew in
                      (Array__Int__Station__crew_record.get temp___734)
                        Station__attempt_spacewalk__cm.cm)).Station__crew_record.rec__station__crew_record__status))
               <> (0 : int))) /\
             ([@GP_Pretty_Ada:2455]
              ((((Station__station_record.__split_fields
                     { Station__station_record.__split_fields =
                         (Station__station_record.__split_fields__content
                             Station__attempt_spacewalk__s.s__split_fields) }).
                   Station__station_record.rec__station__station_record__activespacewalk)
                  = True) <->
                 false)))) };
     (try
        ([#"station.adb" 177 0 0]
         (([#"station.adb" 177 0 0]
           (Station__attempt_spacewalk__top_cm.top_cm.int__content <-
              (0 : int)));
          ([#"station.adb" 177 0 0]
           assume {
             [#"station.adb" 177 0 0]
             (((((Standard__integer___axiom.dynamic_invariant
                    (Station__attempt_spacewalk__top_cm.top_cm.int__content))
                   True)
                  False)
                 True)
                True) })));
        ([#"station.adb" 178 0 0]
         (([#"station.adb" 178 0 0]
           (Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content <-
              (0 : int)));
          ([#"station.adb" 178 0 0]
           assume {
             [#"station.adb" 178 0 0]
             (((((Standard__integer___axiom.dynamic_invariant
                    (Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content))
                   True)
                  False)
                 True)
                True) })));
        ([#"station.adb" 183 0 0] ());
        ([#"station.adb" 194 0 0] ());
        ([#"station.adb" 221 0 0] ());
        ([@GP_Sloc:station.adb:181:7] [#"station.adb" 181 0 0] ());
        ([@GP_Sloc:station.adb:181:7]
         [#"station.adb" 181 0 0]
         (([#"station.adb" 181 0 0] (val _f : unit in
                                     _f));
          (Ada___ada__text_io__put_line__2___axiom.put_line
             (let temp___607 =
                Temp___String_Literal_606.temp___String_Literal_606 () in
              ((Standard__string.of_array temp___607) (1 : int)) (0 : int)))));
        ([@GP_Sloc:station.adb:183:32]
         [#"station.adb" 183 0 0]
         (let temp___608 = 1 : int in
          let temp___609 = 3 : int in
          ([@GNAT-comment:Translation of an unrolled Ada loop from station.adb:183]
           ());
          ([#"station.adb" 183 0 0]
           (try
              ([@GNAT-comment:Unrolling of the loop statements of loop station.adb:183]
               ());
              ([#"station.adb" 183 0 0]
               (Station__attempt_spacewalk__L_4__i.i.int__content <-
                  (1 : int)));
              ([@GP_Sloc:station.adb:184:10]
               [#"station.adb" 184 0 0]
               (if (([#"station.adb" 184 0 0]
                     [#"station.adb" 184 0 0]
                     (([@branch_id=1383] Main.spark__branch).bool__content <-
                        ((Station__module__rep.to_rep
                            (let temp___614 =
                               (Station__station_record.__split_fields
                                   { Station__station_record.__split_fields =
                                       (Station__station_record.__split_fields__content
                                           Station__attempt_spacewalk__s.s__split_fields) }).
                                 Station__station_record.rec__station__station_record__modules in
                             (Array__Int__Station__module.get temp___614)
                               (Station__attempt_spacewalk__L_4__i.i.int__content)))
                           = (3 : int))));
                    (([@branch_id=1383] Main.spark__branch).bool__content)) then
                  (([@GP_Sloc:station.adb:185:13] [#"station.adb" 185 0 0] ());
                   ([@GP_Sloc:station.adb:185:13]
                    [#"station.adb" 185 0 0]
                    (([#"station.adb" 185 0 0] (val _f : unit in
                                                _f));
                     (Ada___ada__text_io__put_line__2___axiom.put_line
                        (let temp___611 =
                           Temp___String_Literal_610.temp___String_Literal_610
                             () in
                         ((Standard__string.of_array temp___611) (1 : int))
                           (0 : int)))));
                   ([@GP_Sloc:station.adb:186:13]
                    [#"station.adb" 186 0 0] [#"station.adb" 186 0 0] ());
                   ([@GP_Sloc:station.adb:187:13] [#"station.adb" 187 0 0] ());
                   ([@GP_Sloc:station.adb:187:13]
                    [#"station.adb" 187 0 0]
                    (([#"station.adb" 187 0 0] (val _f : unit in
                                                _f));
                     (Ada___ada__text_io__put_line__2___axiom.put_line
                        (let temp___613 =
                           Temp___String_Literal_612.temp___String_Literal_612
                             () in
                         ((Standard__string.of_array temp___613) (1 : int))
                           (60 : int)))));
                   ([@GP_Sloc:station.adb:188:13]
                    [#"station.adb" 188 0 0] [#"station.adb" 188 0 0] ());
                   ([@GP_Sloc:station.adb:189:13]
                    [#"station.adb" 189 0 0]
                    [#"station.adb" 189 0 0] ((raise Return__exc) : unit)))
                else ()));
              (Station__attempt_spacewalk__L_4__i.i.int__content <- (2 : int));
              ([@GP_Sloc:station.adb:184:10]
               [#"station.adb" 184 0 0]
               (if (([#"station.adb" 184 0 0]
                     [#"station.adb" 184 0 0]
                     (([@branch_id=1383] Main.spark__branch).bool__content <-
                        ((Station__module__rep.to_rep
                            (let temp___614 =
                               (Station__station_record.__split_fields
                                   { Station__station_record.__split_fields =
                                       (Station__station_record.__split_fields__content
                                           Station__attempt_spacewalk__s.s__split_fields) }).
                                 Station__station_record.rec__station__station_record__modules in
                             (Array__Int__Station__module.get temp___614)
                               (Station__attempt_spacewalk__L_4__i.i.int__content)))
                           = (3 : int))));
                    (([@branch_id=1383] Main.spark__branch).bool__content)) then
                  (([@GP_Sloc:station.adb:185:13] [#"station.adb" 185 0 0] ());
                   ([@GP_Sloc:station.adb:185:13]
                    [#"station.adb" 185 0 0]
                    (([#"station.adb" 185 0 0] (val _f : unit in
                                                _f));
                     (Ada___ada__text_io__put_line__2___axiom.put_line
                        (let temp___611 =
                           Temp___String_Literal_610.temp___String_Literal_610
                             () in
                         ((Standard__string.of_array temp___611) (1 : int))
                           (0 : int)))));
                   ([@GP_Sloc:station.adb:186:13]
                    [#"station.adb" 186 0 0] [#"station.adb" 186 0 0] ());
                   ([@GP_Sloc:station.adb:187:13] [#"station.adb" 187 0 0] ());
                   ([@GP_Sloc:station.adb:187:13]
                    [#"station.adb" 187 0 0]
                    (([#"station.adb" 187 0 0] (val _f : unit in
                                                _f));
                     (Ada___ada__text_io__put_line__2___axiom.put_line
                        (let temp___613 =
                           Temp___String_Literal_612.temp___String_Literal_612
                             () in
                         ((Standard__string.of_array temp___613) (1 : int))
                           (60 : int)))));
                   ([@GP_Sloc:station.adb:188:13]
                    [#"station.adb" 188 0 0] [#"station.adb" 188 0 0] ());
                   ([@GP_Sloc:station.adb:189:13]
                    [#"station.adb" 189 0 0]
                    [#"station.adb" 189 0 0] ((raise Return__exc) : unit)))
                else ()));
              (Station__attempt_spacewalk__L_4__i.i.int__content <- (3 : int));
              ([@GP_Sloc:station.adb:184:10]
               [#"station.adb" 184 0 0]
               (if (([#"station.adb" 184 0 0]
                     [#"station.adb" 184 0 0]
                     (([@branch_id=1383] Main.spark__branch).bool__content <-
                        ((Station__module__rep.to_rep
                            (let temp___614 =
                               (Station__station_record.__split_fields
                                   { Station__station_record.__split_fields =
                                       (Station__station_record.__split_fields__content
                                           Station__attempt_spacewalk__s.s__split_fields) }).
                                 Station__station_record.rec__station__station_record__modules in
                             (Array__Int__Station__module.get temp___614)
                               (Station__attempt_spacewalk__L_4__i.i.int__content)))
                           = (3 : int))));
                    (([@branch_id=1383] Main.spark__branch).bool__content)) then
                  (([@GP_Sloc:station.adb:185:13] [#"station.adb" 185 0 0] ());
                   ([@GP_Sloc:station.adb:185:13]
                    [#"station.adb" 185 0 0]
                    (([#"station.adb" 185 0 0] (val _f : unit in
                                                _f));
                     (Ada___ada__text_io__put_line__2___axiom.put_line
                        (let temp___611 =
                           Temp___String_Literal_610.temp___String_Literal_610
                             () in
                         ((Standard__string.of_array temp___611) (1 : int))
                           (0 : int)))));
                   ([@GP_Sloc:station.adb:186:13]
                    [#"station.adb" 186 0 0] [#"station.adb" 186 0 0] ());
                   ([@GP_Sloc:station.adb:187:13] [#"station.adb" 187 0 0] ());
                   ([@GP_Sloc:station.adb:187:13]
                    [#"station.adb" 187 0 0]
                    (([#"station.adb" 187 0 0] (val _f : unit in
                                                _f));
                     (Ada___ada__text_io__put_line__2___axiom.put_line
                        (let temp___613 =
                           Temp___String_Literal_612.temp___String_Literal_612
                             () in
                         ((Standard__string.of_array temp___613) (1 : int))
                           (60 : int)))));
                   ([@GP_Sloc:station.adb:188:13]
                    [#"station.adb" 188 0 0] [#"station.adb" 188 0 0] ());
                   ([@GP_Sloc:station.adb:189:13]
                    [#"station.adb" 189 0 0]
                    [#"station.adb" 189 0 0] ((raise Return__exc) : unit)))
                else ()))
            with Station__attempt_spacewalk__L_4.L_4 -> ()
            end))));
        ([@GP_Sloc:station.adb:194:29]
         [#"station.adb" 194 0 0]
         (let temp___615 = 1 : int in
          let temp___616 = 3 : int in
          ([@GNAT-comment:Translation of an unrolled Ada loop from station.adb:194]
           ());
          ([#"station.adb" 194 0 0]
           (try
              ([@GNAT-comment:Unrolling of the loop statements of loop station.adb:194]
               ());
              ([#"station.adb" 194 0 0]
               (Station__attempt_spacewalk__L_5__i.i.int__content <-
                  (1 : int)));
              ([@GP_Sloc:station.adb:195:10]
               [#"station.adb" 195 0 0]
               (if (([#"station.adb" 195 0 0]
                     [#"station.adb" 195 0 0]
                     (([@branch_id=1412] Main.spark__branch).bool__content <-
                        ((Station__crewmemberstatus__rep.to_rep
                            ((Station__crew_record.__split_fields
                                 (let temp___619 =
                                    (Station__station_record.__split_fields
                                        { Station__station_record.__split_fields =
                                            (Station__station_record.__split_fields__content
                                                Station__attempt_spacewalk__s.s__split_fields) }).
                                      Station__station_record.rec__station__station_record__crew in
                                  (Array__Int__Station__crew_record.get
                                     temp___619)
                                    (Station__attempt_spacewalk__L_5__i.i.int__content))).
                               Station__crew_record.rec__station__crew_record__status))
                           = (0 : int))));
                    (([@branch_id=1412] Main.spark__branch).bool__content)) then
                  (([@GP_Sloc:station.adb:196:13]
                    [#"station.adb" 196 0 0] [#"station.adb" 196 0 0] ());
                   ([@GP_Sloc:station.adb:197:13] [#"station.adb" 197 0 0] ());
                   ([@GP_Sloc:station.adb:197:13]
                    [#"station.adb" 197 0 0]
                    (([#"station.adb" 197 0 0] (val _f : unit in
                                                _f));
                     (Ada___ada__text_io__put_line__2___axiom.put_line
                        (let temp___618 =
                           Temp___String_Literal_617.temp___String_Literal_617
                             () in
                         ((Standard__string.of_array temp___618) (1 : int))
                           (72 : int)))));
                   ([@GP_Sloc:station.adb:198:13]
                    [#"station.adb" 198 0 0] [#"station.adb" 198 0 0] ());
                   ([@GP_Sloc:station.adb:199:13]
                    [#"station.adb" 199 0 0]
                    [#"station.adb" 199 0 0] ((raise Return__exc) : unit)))
                else ()));
              (Station__attempt_spacewalk__L_5__i.i.int__content <- (2 : int));
              ([@GP_Sloc:station.adb:195:10]
               [#"station.adb" 195 0 0]
               (if (([#"station.adb" 195 0 0]
                     [#"station.adb" 195 0 0]
                     (([@branch_id=1412] Main.spark__branch).bool__content <-
                        ((Station__crewmemberstatus__rep.to_rep
                            ((Station__crew_record.__split_fields
                                 (let temp___619 =
                                    (Station__station_record.__split_fields
                                        { Station__station_record.__split_fields =
                                            (Station__station_record.__split_fields__content
                                                Station__attempt_spacewalk__s.s__split_fields) }).
                                      Station__station_record.rec__station__station_record__crew in
                                  (Array__Int__Station__crew_record.get
                                     temp___619)
                                    (Station__attempt_spacewalk__L_5__i.i.int__content))).
                               Station__crew_record.rec__station__crew_record__status))
                           = (0 : int))));
                    (([@branch_id=1412] Main.spark__branch).bool__content)) then
                  (([@GP_Sloc:station.adb:196:13]
                    [#"station.adb" 196 0 0] [#"station.adb" 196 0 0] ());
                   ([@GP_Sloc:station.adb:197:13] [#"station.adb" 197 0 0] ());
                   ([@GP_Sloc:station.adb:197:13]
                    [#"station.adb" 197 0 0]
                    (([#"station.adb" 197 0 0] (val _f : unit in
                                                _f));
                     (Ada___ada__text_io__put_line__2___axiom.put_line
                        (let temp___618 =
                           Temp___String_Literal_617.temp___String_Literal_617
                             () in
                         ((Standard__string.of_array temp___618) (1 : int))
                           (72 : int)))));
                   ([@GP_Sloc:station.adb:198:13]
                    [#"station.adb" 198 0 0] [#"station.adb" 198 0 0] ());
                   ([@GP_Sloc:station.adb:199:13]
                    [#"station.adb" 199 0 0]
                    [#"station.adb" 199 0 0] ((raise Return__exc) : unit)))
                else ()));
              (Station__attempt_spacewalk__L_5__i.i.int__content <- (3 : int));
              ([@GP_Sloc:station.adb:195:10]
               [#"station.adb" 195 0 0]
               (if (([#"station.adb" 195 0 0]
                     [#"station.adb" 195 0 0]
                     (([@branch_id=1412] Main.spark__branch).bool__content <-
                        ((Station__crewmemberstatus__rep.to_rep
                            ((Station__crew_record.__split_fields
                                 (let temp___619 =
                                    (Station__station_record.__split_fields
                                        { Station__station_record.__split_fields =
                                            (Station__station_record.__split_fields__content
                                                Station__attempt_spacewalk__s.s__split_fields) }).
                                      Station__station_record.rec__station__station_record__crew in
                                  (Array__Int__Station__crew_record.get
                                     temp___619)
                                    (Station__attempt_spacewalk__L_5__i.i.int__content))).
                               Station__crew_record.rec__station__crew_record__status))
                           = (0 : int))));
                    (([@branch_id=1412] Main.spark__branch).bool__content)) then
                  (([@GP_Sloc:station.adb:196:13]
                    [#"station.adb" 196 0 0] [#"station.adb" 196 0 0] ());
                   ([@GP_Sloc:station.adb:197:13] [#"station.adb" 197 0 0] ());
                   ([@GP_Sloc:station.adb:197:13]
                    [#"station.adb" 197 0 0]
                    (([#"station.adb" 197 0 0] (val _f : unit in
                                                _f));
                     (Ada___ada__text_io__put_line__2___axiom.put_line
                        (let temp___618 =
                           Temp___String_Literal_617.temp___String_Literal_617
                             () in
                         ((Standard__string.of_array temp___618) (1 : int))
                           (72 : int)))));
                   ([@GP_Sloc:station.adb:198:13]
                    [#"station.adb" 198 0 0] [#"station.adb" 198 0 0] ());
                   ([@GP_Sloc:station.adb:199:13]
                    [#"station.adb" 199 0 0]
                    [#"station.adb" 199 0 0] ((raise Return__exc) : unit)))
                else ()))
            with Station__attempt_spacewalk__L_5.L_5 -> ()
            end))));
        ([@GP_Sloc:station.adb:204:7]
         [#"station.adb" 204 0 0]
         (if (([#"station.adb" 204 0 0]
               [#"station.adb" 204 0 0]
               (([@branch_id=1431] Main.spark__branch).bool__content <-
                  ((Station__crewmemberstatus__rep.to_rep
                      ((Station__crew_record.__split_fields
                           (let temp___632 =
                              (Station__station_record.__split_fields
                                  { Station__station_record.__split_fields =
                                      (Station__station_record.__split_fields__content
                                          Station__attempt_spacewalk__s.s__split_fields) }).
                                Station__station_record.rec__station__station_record__crew in
                            (Array__Int__Station__crew_record.get temp___632)
                              (([#"station.adb" 204 0 0]
                                assert {
                                  [#"station.adb" 204 0 0]
                                  [#"station.adb" 204 0 0]
                                  [@vc:annotation]
                                  [@GP_Shape:if__cmp__selectcomp__ixdcomp]
                                  [@GP_Reason:VC_INDEX_CHECK]
                                  [@comment:      if S.Crew(CM).Status /= Spacewalk then                 ^ station.adb:204:17:VC_INDEX_CHECK]
                                  [@GP_Id:25]
                                  [@GP_Sloc:station.adb:204:17]
                                  ((Station__Tcrew_arrayD1.first
                                      <= Station__attempt_spacewalk__cm.cm) /\
                                     (Station__attempt_spacewalk__cm.cm
                                        <= Station__Tcrew_arrayD1.last)) });
                               Station__attempt_spacewalk__cm.cm))).Station__crew_record.rec__station__crew_record__status))
                     <> (0 : int))));
              (([@branch_id=1431] Main.spark__branch).bool__content)) then
            (([@GP_Sloc:station.adb:205:10] [#"station.adb" 205 0 0] ());
             ([@GP_Sloc:station.adb:205:10]
              [#"station.adb" 205 0 0]
              (([#"station.adb" 205 0 0] (val _f : unit in
                                          _f));
               (Ada___ada__text_io__put_line__2___axiom.put_line
                  (let temp___621 =
                     Temp___String_Literal_620.temp___String_Literal_620 () in
                   ((Standard__string.of_array temp___621) (1 : int))
                     (0 : int)))));
             ([@GP_Sloc:station.adb:206:10]
              [#"station.adb" 206 0 0] [#"station.adb" 206 0 0] ());
             ([@GP_Sloc:station.adb:207:10] [#"station.adb" 207 0 0] ());
             ([@GP_Sloc:station.adb:207:10]
              [#"station.adb" 207 0 0]
              (([#"station.adb" 207 0 0] (val _f : unit in
                                          _f));
               (Ada___ada__text_io__put_line__2___axiom.put_line
                  (let temp___625 =
                     Temp___String_Literal_622.temp___String_Literal_622 () in
                   let temp___624 =
                     (Standard_String__Img.to_string
                        (Station__crewmember.attr__ATTRIBUTE_IMAGE
                           (Station__crewmember__rep.to_rep
                              ((Station__crew_record.__split_fields
                                   (let temp___623 =
                                      (Station__station_record.__split_fields
                                          { Station__station_record.__split_fields =
                                              (Station__station_record.__split_fields__content
                                                  Station__attempt_spacewalk__s.s__split_fields) }).
                                        Station__station_record.rec__station__station_record__crew in
                                    (Array__Int__Station__crew_record.get
                                       temp___623)
                                      (([#"station.adb" 207 0 0]
                                        assert {
                                          [#"station.adb" 207 0 0]
                                          [#"station.adb" 207 0 0]
                                          [@GP_Shape:if__call_put_line__concat__image_ref__selectcomp__ixdcomp]
                                          [@comment:         Put_Line(S.Crew(CM).Name'Image & " IS AVALIABLE FOR A SPACEWALK");                          ^ station.adb:207:26:VC_INDEX_CHECK]
                                          [@vc:annotation]
                                          [@GP_Reason:VC_INDEX_CHECK]
                                          [@GP_Sloc:station.adb:207:26]
                                          [@GP_Id:21]
                                          ((Station__Tcrew_arrayD1.first
                                              <= Station__attempt_spacewalk__cm.cm) /\
                                             (Station__attempt_spacewalk__cm.cm
                                                <= Station__Tcrew_arrayD1.last)) });
                                       Station__attempt_spacewalk__cm.cm))).
                                 Station__crew_record.rec__station__crew_record__name))))
                       (2040 : int) in
                   if ((Standard__string.length temp___624) = (0 : int)) then
                     (((Standard__string.of_array temp___625) (1 : int))
                        (29 : int))
                   else
                     (((Standard__string.of_array
                          ((((((Array__Int__Standard__character__Concat.concat
                                  (Standard__string.to_array temp___624))
                                 (Standard__string.first temp___624))
                                (Standard__string.last temp___624))
                               temp___625)
                              (1 : int))
                             (29 : int)))
                         (Standard__string.first temp___624))
                        ([#"station.adb" 207 0 0]
                         [@GP_Sloc:station.adb:207:41]
                         [@vc:annotation]
                         [@GP_Reason:VC_RANGE_CHECK]
                         [@GP_Shape:if__call_put_line__concat]
                         [@comment:         Put_Line(S.Crew(CM).Name'Image & " IS AVALIABLE FOR A SPACEWALK");                                         ^ station.adb:207:41:VC_RANGE_CHECK]
                         [@GP_Id:22]
                         (Standard__positive.range_check_
                            (((Standard__string.first temp___624)
                                + (((Integer.length
                                       (Standard__string.first temp___624))
                                      (Standard__string.last temp___624))
                                     + ((Integer.length (1 : int)) (29 : int))))
                               - (1 : int)))))))));
             ([@GP_Sloc:station.adb:208:10]
              [#"station.adb" 208 0 0] [#"station.adb" 208 0 0] ()))
          else
            (([@GP_Sloc:station.adb:210:10] [#"station.adb" 210 0 0] ());
             ([@GP_Sloc:station.adb:210:10]
              [#"station.adb" 210 0 0]
              (([#"station.adb" 210 0 0] (val _f : unit in
                                          _f));
               (Ada___ada__text_io__put_line__2___axiom.put_line
                  (let temp___627 =
                     Temp___String_Literal_626.temp___String_Literal_626 () in
                   ((Standard__string.of_array temp___627) (1 : int))
                     (0 : int)))));
             ([@GP_Sloc:station.adb:211:10]
              [#"station.adb" 211 0 0] [#"station.adb" 211 0 0] ());
             ([@GP_Sloc:station.adb:212:10] [#"station.adb" 212 0 0] ());
             ([@GP_Sloc:station.adb:212:10]
              [#"station.adb" 212 0 0]
              (([#"station.adb" 212 0 0] (val _f : unit in
                                          _f));
               (Ada___ada__text_io__put_line__2___axiom.put_line
                  (let temp___631 =
                     Temp___String_Literal_628.temp___String_Literal_628 () in
                   let temp___630 =
                     (Standard_String__Img.to_string
                        (Station__crewmember.attr__ATTRIBUTE_IMAGE
                           (Station__crewmember__rep.to_rep
                              ((Station__crew_record.__split_fields
                                   (let temp___629 =
                                      (Station__station_record.__split_fields
                                          { Station__station_record.__split_fields =
                                              (Station__station_record.__split_fields__content
                                                  Station__attempt_spacewalk__s.s__split_fields) }).
                                        Station__station_record.rec__station__station_record__crew in
                                    (Array__Int__Station__crew_record.get
                                       temp___629)
                                      (([#"station.adb" 212 0 0]
                                        assert {
                                          [#"station.adb" 212 0 0]
                                          [#"station.adb" 212 0 0]
                                          [@GP_Shape:if__call_put_line__concat__image_ref__selectcomp__ixdcomp]
                                          [@vc:annotation]
                                          [@comment:         Put_Line(S.Crew(CM).Name'Image & " IS ALREADY ON A SPACEWALK");                          ^ station.adb:212:26:VC_INDEX_CHECK]
                                          [@GP_Reason:VC_INDEX_CHECK]
                                          [@GP_Sloc:station.adb:212:26]
                                          [@GP_Id:23]
                                          ((Station__Tcrew_arrayD1.first
                                              <= Station__attempt_spacewalk__cm.cm) /\
                                             (Station__attempt_spacewalk__cm.cm
                                                <= Station__Tcrew_arrayD1.last)) });
                                       Station__attempt_spacewalk__cm.cm))).
                                 Station__crew_record.rec__station__crew_record__name))))
                       (2040 : int) in
                   if ((Standard__string.length temp___630) = (0 : int)) then
                     (((Standard__string.of_array temp___631) (1 : int))
                        (26 : int))
                   else
                     (((Standard__string.of_array
                          ((((((Array__Int__Standard__character__Concat.concat
                                  (Standard__string.to_array temp___630))
                                 (Standard__string.first temp___630))
                                (Standard__string.last temp___630))
                               temp___631)
                              (1 : int))
                             (26 : int)))
                         (Standard__string.first temp___630))
                        ([#"station.adb" 212 0 0]
                         [@GP_Sloc:station.adb:212:41]
                         [@vc:annotation]
                         [@comment:         Put_Line(S.Crew(CM).Name'Image & " IS ALREADY ON A SPACEWALK");                                         ^ station.adb:212:41:VC_RANGE_CHECK]
                         [@GP_Reason:VC_RANGE_CHECK]
                         [@GP_Shape:if__call_put_line__concat]
                         [@GP_Id:24]
                         (Standard__positive.range_check_
                            (((Standard__string.first temp___630)
                                + (((Integer.length
                                       (Standard__string.first temp___630))
                                      (Standard__string.last temp___630))
                                     + ((Integer.length (1 : int)) (26 : int))))
                               - (1 : int)))))))));
             ([@GP_Sloc:station.adb:213:10]
              [#"station.adb" 213 0 0] [#"station.adb" 213 0 0] ());
             ([@GP_Sloc:station.adb:214:10]
              [#"station.adb" 214 0 0]
              [#"station.adb" 214 0 0] ((raise Return__exc) : unit)))));
        ([@GP_Sloc:station.adb:218:25]
         [#"station.adb" 218 0 0]
         (let temp___638 =
            let temp___637 =
              { Station__station_record.__split_fields =
                  (Station__station_record.__split_fields__content
                      Station__attempt_spacewalk__s.s__split_fields) } in
            ([#"station.adb" 218 0 0]
             (begin
                ensures { true }
                let _ =
                  let _ =
                    (Station__station_record.__split_fields temp___637).
                      Station__station_record.rec__station__station_record__crew in
                  () in
                ()
              end));
            ({ temp___637 with
               Station__station_record.__split_fields =
                 ({ (Station__station_record.__split_fields temp___637) with
                    Station__station_record.rec__station__station_record__crew =
                      (let temp___636 =
                         (Station__station_record.__split_fields
                             { Station__station_record.__split_fields =
                                 (Station__station_record.__split_fields__content
                                     Station__attempt_spacewalk__s.s__split_fields) }).
                           Station__station_record.rec__station__station_record__crew in
                       ((Array__Int__Station__crew_record.set
                           ((Station__station_record.__split_fields
                                { Station__station_record.__split_fields =
                                    (Station__station_record.__split_fields__content
                                        Station__attempt_spacewalk__s.s__split_fields) }).
                              Station__station_record.rec__station__station_record__crew))
                          (([#"station.adb" 218 0 0]
                            assert {
                              [#"station.adb" 218 0 0]
                              [#"station.adb" 218 0 0]
                              [@comment:      S.Crew(CM).Status := Spacewalk;              ^ station.adb:218:14:VC_INDEX_CHECK]
                              [@GP_Shape:s_assign__selectcomp__ixdcomp]
                              [@vc:annotation]
                              [@GP_Sloc:station.adb:218:14]
                              [@GP_Reason:VC_INDEX_CHECK]
                              [@GP_Id:26]
                              ((Station__Tcrew_arrayD1.first
                                  <= Station__attempt_spacewalk__cm.cm) /\
                                 (Station__attempt_spacewalk__cm.cm
                                    <= Station__Tcrew_arrayD1.last)) });
                           Station__attempt_spacewalk__cm.cm))
                         (let temp___635 =
                            let temp___634 =
                              (Station__station_record.__split_fields
                                  { Station__station_record.__split_fields =
                                      (Station__station_record.__split_fields__content
                                          Station__attempt_spacewalk__s.s__split_fields) }).
                                Station__station_record.rec__station__station_record__crew in
                            (Array__Int__Station__crew_record.get temp___634)
                              Station__attempt_spacewalk__cm.cm in
                          (begin
                             ensures { true }
                             let _ =
                               let _ =
                                 (Station__crew_record.__split_fields
                                     temp___635).Station__crew_record.rec__station__crew_record__status in
                               () in
                             ()
                           end);
                          ({ temp___635 with
                             Station__crew_record.__split_fields =
                               ({ (Station__crew_record.__split_fields
                                      temp___635) with
                                  Station__crew_record.rec__station__crew_record__status =
                                    (Station__crewmemberstatus__rep.of_rep
                                       (0 : int)) }) }))) }) }) in
          Station__attempt_spacewalk__s.s__split_fields.Station__station_record.__split_fields__content <-
            (Station__station_record.__split_fields temp___638)));
        ([@GP_Sloc:station.adb:221:26]
         [#"station.adb" 221 0 0]
         (let temp___639 = 1 : int in
          let temp___640 = 3 : int in
          ([@GNAT-comment:Translation of an unrolled Ada loop from station.adb:221]
           ());
          ([#"station.adb" 221 0 0]
           (try
              ([@GNAT-comment:Unrolling of the loop statements of loop station.adb:221]
               ());
              ([#"station.adb" 221 0 0]
               (Station__attempt_spacewalk__L_6__i.i.int__content <-
                  (1 : int)));
              ([@GP_Sloc:station.adb:222:7]
               [#"station.adb" 222 0 0]
               (if (([#"station.adb" 222 0 0]
                     [#"station.adb" 222 0 0]
                     (([@branch_id=1500] Main.spark__branch).bool__content <-
                        ((Boolean.andb
                            ((Station__attempt_spacewalk__L_6__i.i.int__content)
                               <> Station__attempt_spacewalk__cm.cm))
                           ((Station__crewmemberstatus__rep.to_rep
                               ((Station__crew_record.__split_fields
                                    (let temp___643 =
                                       (Station__station_record.__split_fields
                                           { Station__station_record.__split_fields =
                                               (Station__station_record.__split_fields__content
                                                   Station__attempt_spacewalk__s.s__split_fields) }).
                                         Station__station_record.rec__station__station_record__crew in
                                     (Array__Int__Station__crew_record.get
                                        temp___643)
                                       (Station__attempt_spacewalk__L_6__i.i.int__content))).
                                  Station__crew_record.rec__station__crew_record__status))
                              <> (0 : int)))));
                    (([@branch_id=1500] Main.spark__branch).bool__content)) then
                  (([@GP_Sloc:station.adb:223:13] [#"station.adb" 223 0 0] ());
                   ([@GP_Sloc:station.adb:223:10]
                    [#"station.adb" 223 0 0]
                    (if (([#"station.adb" 223 0 0]
                          [#"station.adb" 223 0 0]
                          (([@branch_id=1514] Main.spark__branch).bool__content <-
                             ((Station__attempt_spacewalk__top_cm.top_cm.int__content)
                                = (0 : int))));
                         (([@branch_id=1514] Main.spark__branch).bool__content)) then
                       (([@GP_Sloc:station.adb:224:13]
                         [#"station.adb" 224 0 0] ());
                        ([@GP_Sloc:station.adb:224:20]
                         [#"station.adb" 224 0 0]
                         [#"station.adb" 224 0 0]
                         (Station__attempt_spacewalk__top_cm.top_cm.int__content <-
                            (Station__attempt_spacewalk__L_6__i.i.int__content))))
                     else
                       (([@GP_Sloc:station.adb:226:13]
                         [#"station.adb" 226 0 0] ());
                        ([@GP_Sloc:station.adb:226:23]
                         [#"station.adb" 226 0 0]
                         [#"station.adb" 226 0 0]
                         (Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content <-
                            (Station__attempt_spacewalk__L_6__i.i.int__content)));
                        ([@GP_Sloc:station.adb:227:13]
                         [#"station.adb" 227 0 0]
                         [#"station.adb" 227 0 0]
                         (raise Station__attempt_spacewalk__L_6.L_6))))))
                else ()));
              (Station__attempt_spacewalk__L_6__i.i.int__content <- (2 : int));
              ([@GP_Sloc:station.adb:222:7]
               [#"station.adb" 222 0 0]
               (if (([#"station.adb" 222 0 0]
                     [#"station.adb" 222 0 0]
                     (([@branch_id=1500] Main.spark__branch).bool__content <-
                        ((Boolean.andb
                            ((Station__attempt_spacewalk__L_6__i.i.int__content)
                               <> Station__attempt_spacewalk__cm.cm))
                           ((Station__crewmemberstatus__rep.to_rep
                               ((Station__crew_record.__split_fields
                                    (let temp___643 =
                                       (Station__station_record.__split_fields
                                           { Station__station_record.__split_fields =
                                               (Station__station_record.__split_fields__content
                                                   Station__attempt_spacewalk__s.s__split_fields) }).
                                         Station__station_record.rec__station__station_record__crew in
                                     (Array__Int__Station__crew_record.get
                                        temp___643)
                                       (Station__attempt_spacewalk__L_6__i.i.int__content))).
                                  Station__crew_record.rec__station__crew_record__status))
                              <> (0 : int)))));
                    (([@branch_id=1500] Main.spark__branch).bool__content)) then
                  (([@GP_Sloc:station.adb:223:13] [#"station.adb" 223 0 0] ());
                   ([@GP_Sloc:station.adb:223:10]
                    [#"station.adb" 223 0 0]
                    (if (([#"station.adb" 223 0 0]
                          [#"station.adb" 223 0 0]
                          (([@branch_id=1514] Main.spark__branch).bool__content <-
                             ((Station__attempt_spacewalk__top_cm.top_cm.int__content)
                                = (0 : int))));
                         (([@branch_id=1514] Main.spark__branch).bool__content)) then
                       (([@GP_Sloc:station.adb:224:13]
                         [#"station.adb" 224 0 0] ());
                        ([@GP_Sloc:station.adb:224:20]
                         [#"station.adb" 224 0 0]
                         [#"station.adb" 224 0 0]
                         (Station__attempt_spacewalk__top_cm.top_cm.int__content <-
                            (Station__attempt_spacewalk__L_6__i.i.int__content))))
                     else
                       (([@GP_Sloc:station.adb:226:13]
                         [#"station.adb" 226 0 0] ());
                        ([@GP_Sloc:station.adb:226:23]
                         [#"station.adb" 226 0 0]
                         [#"station.adb" 226 0 0]
                         (Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content <-
                            (Station__attempt_spacewalk__L_6__i.i.int__content)));
                        ([@GP_Sloc:station.adb:227:13]
                         [#"station.adb" 227 0 0]
                         [#"station.adb" 227 0 0]
                         (raise Station__attempt_spacewalk__L_6.L_6))))))
                else ()));
              (Station__attempt_spacewalk__L_6__i.i.int__content <- (3 : int));
              ([@GP_Sloc:station.adb:222:7]
               [#"station.adb" 222 0 0]
               (if (([#"station.adb" 222 0 0]
                     [#"station.adb" 222 0 0]
                     (([@branch_id=1500] Main.spark__branch).bool__content <-
                        ((Boolean.andb
                            ((Station__attempt_spacewalk__L_6__i.i.int__content)
                               <> Station__attempt_spacewalk__cm.cm))
                           ((Station__crewmemberstatus__rep.to_rep
                               ((Station__crew_record.__split_fields
                                    (let temp___643 =
                                       (Station__station_record.__split_fields
                                           { Station__station_record.__split_fields =
                                               (Station__station_record.__split_fields__content
                                                   Station__attempt_spacewalk__s.s__split_fields) }).
                                         Station__station_record.rec__station__station_record__crew in
                                     (Array__Int__Station__crew_record.get
                                        temp___643)
                                       (Station__attempt_spacewalk__L_6__i.i.int__content))).
                                  Station__crew_record.rec__station__crew_record__status))
                              <> (0 : int)))));
                    (([@branch_id=1500] Main.spark__branch).bool__content)) then
                  (([@GP_Sloc:station.adb:223:13] [#"station.adb" 223 0 0] ());
                   ([@GP_Sloc:station.adb:223:10]
                    [#"station.adb" 223 0 0]
                    (if (([#"station.adb" 223 0 0]
                          [#"station.adb" 223 0 0]
                          (([@branch_id=1514] Main.spark__branch).bool__content <-
                             ((Station__attempt_spacewalk__top_cm.top_cm.int__content)
                                = (0 : int))));
                         (([@branch_id=1514] Main.spark__branch).bool__content)) then
                       (([@GP_Sloc:station.adb:224:13]
                         [#"station.adb" 224 0 0] ());
                        ([@GP_Sloc:station.adb:224:20]
                         [#"station.adb" 224 0 0]
                         [#"station.adb" 224 0 0]
                         (Station__attempt_spacewalk__top_cm.top_cm.int__content <-
                            (Station__attempt_spacewalk__L_6__i.i.int__content))))
                     else
                       (([@GP_Sloc:station.adb:226:13]
                         [#"station.adb" 226 0 0] ());
                        ([@GP_Sloc:station.adb:226:23]
                         [#"station.adb" 226 0 0]
                         [#"station.adb" 226 0 0]
                         (Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content <-
                            (Station__attempt_spacewalk__L_6__i.i.int__content)));
                        ([@GP_Sloc:station.adb:227:13]
                         [#"station.adb" 227 0 0]
                         [#"station.adb" 227 0 0]
                         (raise Station__attempt_spacewalk__L_6.L_6))))))
                else ()))
            with Station__attempt_spacewalk__L_6.L_6 -> ()
            end))));
        ([@GP_Sloc:station.adb:233:14] [#"station.adb" 233 0 0] ());
        ([@GP_Sloc:station.adb:233:29]
         [#"station.adb" 233 0 0]
         (let temp___649 =
            let temp___648 =
              { Station__station_record.__split_fields =
                  (Station__station_record.__split_fields__content
                      Station__attempt_spacewalk__s.s__split_fields) } in
            ([#"station.adb" 233 0 0]
             (begin
                ensures { true }
                let _ =
                  let _ =
                    (Station__station_record.__split_fields temp___648).
                      Station__station_record.rec__station__station_record__crew in
                  () in
                ()
              end));
            ({ temp___648 with
               Station__station_record.__split_fields =
                 ({ (Station__station_record.__split_fields temp___648) with
                    Station__station_record.rec__station__station_record__crew =
                      (let temp___647 =
                         (Station__station_record.__split_fields
                             { Station__station_record.__split_fields =
                                 (Station__station_record.__split_fields__content
                                     Station__attempt_spacewalk__s.s__split_fields) }).
                           Station__station_record.rec__station__station_record__crew in
                       ((Array__Int__Station__crew_record.set
                           ((Station__station_record.__split_fields
                                { Station__station_record.__split_fields =
                                    (Station__station_record.__split_fields__content
                                        Station__attempt_spacewalk__s.s__split_fields) }).
                              Station__station_record.rec__station__station_record__crew))
                          (([#"station.adb" 233 0 0]
                            assert {
                              [#"station.adb" 233 0 0]
                              [#"station.adb" 233 0 0]
                              [@GP_Shape:s_assign__selectcomp__ixdcomp]
                              [@vc:annotation]
                              [@GP_Sloc:station.adb:233:14]
                              [@GP_Reason:VC_INDEX_CHECK]
                              [@comment:      S.Crew(Top_CM).Status := Monitoring;              ^ station.adb:233:14:VC_INDEX_CHECK]
                              [@GP_Id:27]
                              ((Station__Tcrew_arrayD1.first
                                  <= (Station__attempt_spacewalk__top_cm.top_cm.int__content)) /\
                                 ((Station__attempt_spacewalk__top_cm.top_cm.int__content)
                                    <= Station__Tcrew_arrayD1.last)) });
                           (Station__attempt_spacewalk__top_cm.top_cm.int__content)))
                         (let temp___646 =
                            let temp___645 =
                              (Station__station_record.__split_fields
                                  { Station__station_record.__split_fields =
                                      (Station__station_record.__split_fields__content
                                          Station__attempt_spacewalk__s.s__split_fields) }).
                                Station__station_record.rec__station__station_record__crew in
                            (Array__Int__Station__crew_record.get temp___645)
                              (Station__attempt_spacewalk__top_cm.top_cm.int__content) in
                          (begin
                             ensures { true }
                             let _ =
                               let _ =
                                 (Station__crew_record.__split_fields
                                     temp___646).Station__crew_record.rec__station__crew_record__status in
                               () in
                             ()
                           end);
                          ({ temp___646 with
                             Station__crew_record.__split_fields =
                               ({ (Station__crew_record.__split_fields
                                      temp___646) with
                                  Station__crew_record.rec__station__crew_record__status =
                                    (Station__crewmemberstatus__rep.of_rep
                                       (1 : int)) }) }))) }) }) in
          Station__attempt_spacewalk__s.s__split_fields.Station__station_record.__split_fields__content <-
            (Station__station_record.__split_fields temp___649)));
        ([@GP_Sloc:station.adb:234:14] [#"station.adb" 234 0 0] ());
        ([@GP_Sloc:station.adb:234:31]
         [#"station.adb" 234 0 0]
         (let temp___656 =
            let temp___655 =
              { Station__station_record.__split_fields =
                  (Station__station_record.__split_fields__content
                      Station__attempt_spacewalk__s.s__split_fields) } in
            ([#"station.adb" 234 0 0]
             (begin
                ensures { true }
                let _ =
                  let _ =
                    (Station__station_record.__split_fields temp___655).
                      Station__station_record.rec__station__station_record__crew in
                  () in
                ()
              end));
            ({ temp___655 with
               Station__station_record.__split_fields =
                 ({ (Station__station_record.__split_fields temp___655) with
                    Station__station_record.rec__station__station_record__crew =
                      (let temp___654 =
                         (Station__station_record.__split_fields
                             { Station__station_record.__split_fields =
                                 (Station__station_record.__split_fields__content
                                     Station__attempt_spacewalk__s.s__split_fields) }).
                           Station__station_record.rec__station__station_record__crew in
                       ((Array__Int__Station__crew_record.set
                           ((Station__station_record.__split_fields
                                { Station__station_record.__split_fields =
                                    (Station__station_record.__split_fields__content
                                        Station__attempt_spacewalk__s.s__split_fields) }).
                              Station__station_record.rec__station__station_record__crew))
                          (([#"station.adb" 234 0 0]
                            assert {
                              [#"station.adb" 234 0 0]
                              [#"station.adb" 234 0 0]
                              [@GP_Shape:s_assign__selectcomp__ixdcomp]
                              [@vc:annotation]
                              [@comment:      S.Crew(Top_CM).Location := S.Modules(3);              ^ station.adb:234:14:VC_INDEX_CHECK]
                              [@GP_Reason:VC_INDEX_CHECK]
                              [@GP_Sloc:station.adb:234:14]
                              [@GP_Id:28]
                              ((Station__Tcrew_arrayD1.first
                                  <= (Station__attempt_spacewalk__top_cm.top_cm.int__content)) /\
                                 ((Station__attempt_spacewalk__top_cm.top_cm.int__content)
                                    <= Station__Tcrew_arrayD1.last)) });
                           (Station__attempt_spacewalk__top_cm.top_cm.int__content)))
                         (let temp___653 =
                            let temp___652 =
                              (Station__station_record.__split_fields
                                  { Station__station_record.__split_fields =
                                      (Station__station_record.__split_fields__content
                                          Station__attempt_spacewalk__s.s__split_fields) }).
                                Station__station_record.rec__station__station_record__crew in
                            (Array__Int__Station__crew_record.get temp___652)
                              (Station__attempt_spacewalk__top_cm.top_cm.int__content) in
                          (begin
                             ensures { true }
                             let _ =
                               let _ =
                                 (Station__crew_record.__split_fields
                                     temp___653).Station__crew_record.rec__station__crew_record__location in
                               () in
                             ()
                           end);
                          ({ temp___653 with
                             Station__crew_record.__split_fields =
                               ({ (Station__crew_record.__split_fields
                                      temp___653) with
                                  Station__crew_record.rec__station__crew_record__location =
                                    (Station__module__rep.of_rep
                                       (Station__module__rep.to_rep
                                          (let temp___651 =
                                             (Station__station_record.__split_fields
                                                 { Station__station_record.__split_fields =
                                                     (Station__station_record.__split_fields__content
                                                         Station__attempt_spacewalk__s.s__split_fields) }).
                                               Station__station_record.rec__station__station_record__modules in
                                           (Array__Int__Station__module.get
                                              temp___651)
                                             (3 : int)))) }) }))) }) }) in
          Station__attempt_spacewalk__s.s__split_fields.Station__station_record.__split_fields__content <-
            (Station__station_record.__split_fields temp___656)));
        ([@GP_Sloc:station.adb:237:14] [#"station.adb" 237 0 0] ());
        ([@GP_Sloc:station.adb:237:32]
         [#"station.adb" 237 0 0]
         (let temp___662 =
            let temp___661 =
              { Station__station_record.__split_fields =
                  (Station__station_record.__split_fields__content
                      Station__attempt_spacewalk__s.s__split_fields) } in
            ([#"station.adb" 237 0 0]
             (begin
                ensures { true }
                let _ =
                  let _ =
                    (Station__station_record.__split_fields temp___661).
                      Station__station_record.rec__station__station_record__crew in
                  () in
                ()
              end));
            ({ temp___661 with
               Station__station_record.__split_fields =
                 ({ (Station__station_record.__split_fields temp___661) with
                    Station__station_record.rec__station__station_record__crew =
                      (let temp___660 =
                         (Station__station_record.__split_fields
                             { Station__station_record.__split_fields =
                                 (Station__station_record.__split_fields__content
                                     Station__attempt_spacewalk__s.s__split_fields) }).
                           Station__station_record.rec__station__station_record__crew in
                       ((Array__Int__Station__crew_record.set
                           ((Station__station_record.__split_fields
                                { Station__station_record.__split_fields =
                                    (Station__station_record.__split_fields__content
                                        Station__attempt_spacewalk__s.s__split_fields) }).
                              Station__station_record.rec__station__station_record__crew))
                          (([#"station.adb" 237 0 0]
                            assert {
                              [#"station.adb" 237 0 0]
                              [#"station.adb" 237 0 0]
                              [@comment:      S.Crew(Bottom_CM).Status := Monitoring;              ^ station.adb:237:14:VC_INDEX_CHECK]
                              [@GP_Sloc:station.adb:237:14]
                              [@GP_Shape:s_assign__selectcomp__ixdcomp]
                              [@vc:annotation]
                              [@GP_Reason:VC_INDEX_CHECK]
                              [@GP_Id:29]
                              ((Station__Tcrew_arrayD1.first
                                  <= (Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content)) /\
                                 ((Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content)
                                    <= Station__Tcrew_arrayD1.last)) });
                           (Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content)))
                         (let temp___659 =
                            let temp___658 =
                              (Station__station_record.__split_fields
                                  { Station__station_record.__split_fields =
                                      (Station__station_record.__split_fields__content
                                          Station__attempt_spacewalk__s.s__split_fields) }).
                                Station__station_record.rec__station__station_record__crew in
                            (Array__Int__Station__crew_record.get temp___658)
                              (Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content) in
                          (begin
                             ensures { true }
                             let _ =
                               let _ =
                                 (Station__crew_record.__split_fields
                                     temp___659).Station__crew_record.rec__station__crew_record__status in
                               () in
                             ()
                           end);
                          ({ temp___659 with
                             Station__crew_record.__split_fields =
                               ({ (Station__crew_record.__split_fields
                                      temp___659) with
                                  Station__crew_record.rec__station__crew_record__status =
                                    (Station__crewmemberstatus__rep.of_rep
                                       (1 : int)) }) }))) }) }) in
          Station__attempt_spacewalk__s.s__split_fields.Station__station_record.__split_fields__content <-
            (Station__station_record.__split_fields temp___662)));
        ([@GP_Sloc:station.adb:238:14] [#"station.adb" 238 0 0] ());
        ([@GP_Sloc:station.adb:238:34]
         [#"station.adb" 238 0 0]
         (let temp___669 =
            let temp___668 =
              { Station__station_record.__split_fields =
                  (Station__station_record.__split_fields__content
                      Station__attempt_spacewalk__s.s__split_fields) } in
            ([#"station.adb" 238 0 0]
             (begin
                ensures { true }
                let _ =
                  let _ =
                    (Station__station_record.__split_fields temp___668).
                      Station__station_record.rec__station__station_record__crew in
                  () in
                ()
              end));
            ({ temp___668 with
               Station__station_record.__split_fields =
                 ({ (Station__station_record.__split_fields temp___668) with
                    Station__station_record.rec__station__station_record__crew =
                      (let temp___667 =
                         (Station__station_record.__split_fields
                             { Station__station_record.__split_fields =
                                 (Station__station_record.__split_fields__content
                                     Station__attempt_spacewalk__s.s__split_fields) }).
                           Station__station_record.rec__station__station_record__crew in
                       ((Array__Int__Station__crew_record.set
                           ((Station__station_record.__split_fields
                                { Station__station_record.__split_fields =
                                    (Station__station_record.__split_fields__content
                                        Station__attempt_spacewalk__s.s__split_fields) }).
                              Station__station_record.rec__station__station_record__crew))
                          (([#"station.adb" 238 0 0]
                            assert {
                              [#"station.adb" 238 0 0]
                              [#"station.adb" 238 0 0]
                              [@GP_Shape:s_assign__selectcomp__ixdcomp]
                              [@vc:annotation]
                              [@GP_Id:30]
                              [@GP_Sloc:station.adb:238:14]
                              [@GP_Reason:VC_INDEX_CHECK]
                              [@comment:      S.Crew(Bottom_CM).Location := S.Modules(1);              ^ station.adb:238:14:VC_INDEX_CHECK]
                              ((Station__Tcrew_arrayD1.first
                                  <= (Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content)) /\
                                 ((Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content)
                                    <= Station__Tcrew_arrayD1.last)) });
                           (Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content)))
                         (let temp___666 =
                            let temp___665 =
                              (Station__station_record.__split_fields
                                  { Station__station_record.__split_fields =
                                      (Station__station_record.__split_fields__content
                                          Station__attempt_spacewalk__s.s__split_fields) }).
                                Station__station_record.rec__station__station_record__crew in
                            (Array__Int__Station__crew_record.get temp___665)
                              (Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content) in
                          (begin
                             ensures { true }
                             let _ =
                               let _ =
                                 (Station__crew_record.__split_fields
                                     temp___666).Station__crew_record.rec__station__crew_record__location in
                               () in
                             ()
                           end);
                          ({ temp___666 with
                             Station__crew_record.__split_fields =
                               ({ (Station__crew_record.__split_fields
                                      temp___666) with
                                  Station__crew_record.rec__station__crew_record__location =
                                    (Station__module__rep.of_rep
                                       (Station__module__rep.to_rep
                                          (let temp___664 =
                                             (Station__station_record.__split_fields
                                                 { Station__station_record.__split_fields =
                                                     (Station__station_record.__split_fields__content
                                                         Station__attempt_spacewalk__s.s__split_fields) }).
                                               Station__station_record.rec__station__station_record__modules in
                                           (Array__Int__Station__module.get
                                              temp___664)
                                             (1 : int)))) }) }))) }) }) in
          Station__attempt_spacewalk__s.s__split_fields.Station__station_record.__split_fields__content <-
            (Station__station_record.__split_fields temp___669)));
        ([@GP_Sloc:station.adb:240:7] [#"station.adb" 240 0 0] ());
        ([@GP_Sloc:station.adb:240:7]
         [#"station.adb" 240 0 0]
         (([#"station.adb" 240 0 0] (val _f : unit in
                                     _f));
          (Ada___ada__text_io__put_line__2___axiom.put_line
             (let temp___679 =
                Temp___String_Literal_670.temp___String_Literal_670 () in
              let temp___678 =
                let temp___677 =
                  (Standard_String__Img.to_string
                     (Station__module.attr__ATTRIBUTE_IMAGE
                        (Station__module__rep.to_rep
                           ((Station__crew_record.__split_fields
                                (let temp___671 =
                                   (Station__station_record.__split_fields
                                       { Station__station_record.__split_fields =
                                           (Station__station_record.__split_fields__content
                                               Station__attempt_spacewalk__s.s__split_fields) }).
                                     Station__station_record.rec__station__station_record__crew in
                                 (Array__Int__Station__crew_record.get
                                    temp___671)
                                   (([#"station.adb" 240 0 0]
                                     assert {
                                       [#"station.adb" 240 0 0]
                                       [#"station.adb" 240 0 0]
                                       [@GP_Shape:call_put_line__concat__concat__image_ref__selectcomp__ixdcomp]
                                       [@vc:annotation]
                                       [@GP_Id:31]
                                       [@GP_Reason:VC_INDEX_CHECK]
                                       [@comment:      Put_Line(S.Crew(Top_CM).Name'Image & " Is moving to the " & S.Crew(Top_CM).Location'Image & " Module...");                                                                          ^ station.adb:240:74:VC_INDEX_CHECK]
                                       [@GP_Sloc:station.adb:240:74]
                                       ((Station__Tcrew_arrayD1.first
                                           <= (Station__attempt_spacewalk__top_cm.top_cm.int__content)) /\
                                          ((Station__attempt_spacewalk__top_cm.top_cm.int__content)
                                             <= Station__Tcrew_arrayD1.last)) });
                                    (Station__attempt_spacewalk__top_cm.top_cm.int__content)))).
                              Station__crew_record.rec__station__crew_record__location))))
                    (2040 : int) in
                let temp___676 =
                  let temp___675 =
                    Temp___String_Literal_672.temp___String_Literal_672 () in
                  let temp___674 =
                    (Standard_String__Img.to_string
                       (Station__crewmember.attr__ATTRIBUTE_IMAGE
                          (Station__crewmember__rep.to_rep
                             ((Station__crew_record.__split_fields
                                  (let temp___673 =
                                     (Station__station_record.__split_fields
                                         { Station__station_record.__split_fields =
                                             (Station__station_record.__split_fields__content
                                                 Station__attempt_spacewalk__s.s__split_fields) }).
                                       Station__station_record.rec__station__station_record__crew in
                                   (Array__Int__Station__crew_record.get
                                      temp___673)
                                     (assert {
                                        [#"station.adb" 240 0 0]
                                        [@GP_Sloc:station.adb:240:23]
                                        [@vc:annotation]
                                        [@GP_Id:32]
                                        [@comment:      Put_Line(S.Crew(Top_CM).Name'Image & " Is moving to the " & S.Crew(Top_CM).Location'Image & " Module...");                       ^ station.adb:240:23:VC_INDEX_CHECK]
                                        [@GP_Reason:VC_INDEX_CHECK]
                                        [@GP_Shape:call_put_line__concat__concat__concat__image_ref__selectcomp__ixdcomp]
                                        ((Station__Tcrew_arrayD1.first
                                            <= (Station__attempt_spacewalk__top_cm.top_cm.int__content)) /\
                                           ((Station__attempt_spacewalk__top_cm.top_cm.int__content)
                                              <= Station__Tcrew_arrayD1.last)) };
                                      (Station__attempt_spacewalk__top_cm.top_cm.int__content)))).
                                Station__crew_record.rec__station__crew_record__name))))
                      (2040 : int) in
                  if ((Standard__string.length temp___674) = (0 : int)) then
                    (((Standard__string.of_array temp___675) (1 : int))
                       (18 : int))
                  else
                    (((Standard__string.of_array
                         ((((((Array__Int__Standard__character__Concat.concat
                                 (Standard__string.to_array temp___674))
                                (Standard__string.first temp___674))
                               (Standard__string.last temp___674))
                              temp___675)
                             (1 : int))
                            (18 : int)))
                        (Standard__string.first temp___674))
                       ([#"station.adb" 240 0 0]
                        [@comment:      Put_Line(S.Crew(Top_CM).Name'Image & " Is moving to the " & S.Crew(Top_CM).Location'Image & " Module...");                                          ^ station.adb:240:42:VC_RANGE_CHECK]
                        [@vc:annotation]
                        [@GP_Id:33]
                        [@GP_Sloc:station.adb:240:42]
                        [@GP_Reason:VC_RANGE_CHECK]
                        [@GP_Shape:call_put_line__concat__concat__concat]
                        (Standard__positive.range_check_
                           (((Standard__string.first temp___674)
                               + (((Integer.length
                                      (Standard__string.first temp___674))
                                     (Standard__string.last temp___674))
                                    + ((Integer.length (1 : int)) (18 : int))))
                              - (1 : int))))) in
                if ((Standard__string.length temp___676) = (0 : int)) then
                  (((Standard__string.of_array
                       (Standard__string.to_array temp___677))
                      (Standard__string.first temp___677))
                     (Standard__string.last temp___677))
                else
                  (((Standard__string.of_array
                       ((((((Array__Int__Standard__character__Concat.concat
                               (Standard__string.to_array temp___676))
                              (Standard__string.first temp___676))
                             (Standard__string.last temp___676))
                            (Standard__string.to_array temp___677))
                           (Standard__string.first temp___677))
                          (Standard__string.last temp___677)))
                      (Standard__string.first temp___676))
                     ([#"station.adb" 240 0 0]
                      [@GP_Sloc:station.adb:240:65]
                      [@GP_Shape:call_put_line__concat__concat]
                      [@vc:annotation]
                      [@GP_Id:34]
                      [@GP_Reason:VC_RANGE_CHECK]
                      [@comment:      Put_Line(S.Crew(Top_CM).Name'Image & " Is moving to the " & S.Crew(Top_CM).Location'Image & " Module...");                                                                 ^ station.adb:240:65:VC_RANGE_CHECK]
                      (Standard__positive.range_check_
                         (((Standard__string.first temp___676)
                             + (((Integer.length
                                    (Standard__string.first temp___676))
                                   (Standard__string.last temp___676))
                                  + ((Integer.length
                                        (Standard__string.first temp___677))
                                       (Standard__string.last temp___677))))
                            - (1 : int))))) in
              if ((Standard__string.length temp___678) = (0 : int)) then
                (((Standard__string.of_array temp___679) (1 : int))
                   (10 : int))
              else
                (((Standard__string.of_array
                     ((((((Array__Int__Standard__character__Concat.concat
                             (Standard__string.to_array temp___678))
                            (Standard__string.first temp___678))
                           (Standard__string.last temp___678))
                          temp___679)
                         (1 : int))
                        (10 : int)))
                    (Standard__string.first temp___678))
                   ([#"station.adb" 240 0 0]
                    [@GP_Sloc:station.adb:240:97]
                    [@vc:annotation]
                    [@comment:      Put_Line(S.Crew(Top_CM).Name'Image & " Is moving to the " & S.Crew(Top_CM).Location'Image & " Module...");                                                                                                 ^ station.adb:240:97:VC_RANGE_CHECK]
                    [@GP_Id:35]
                    [@GP_Reason:VC_RANGE_CHECK]
                    [@GP_Shape:call_put_line__concat]
                    (Standard__positive.range_check_
                       (((Standard__string.first temp___678)
                           + (((Integer.length
                                  (Standard__string.first temp___678))
                                 (Standard__string.last temp___678))
                                + ((Integer.length (1 : int)) (10 : int))))
                          - (1 : int)))))))));
        ([@GP_Sloc:station.adb:241:7]
         [#"station.adb" 241 0 0] [#"station.adb" 241 0 0] ());
        ([@GP_Sloc:station.adb:242:7]
         [#"station.adb" 242 0 0] [#"station.adb" 242 0 0] ());
        ([@GP_Sloc:station.adb:243:7] [#"station.adb" 243 0 0] ());
        ([@GP_Sloc:station.adb:243:7]
         [#"station.adb" 243 0 0]
         (([#"station.adb" 243 0 0] (val _f : unit in
                                     _f));
          (Ada___ada__text_io__put_line__2___axiom.put_line
             (let temp___689 =
                Temp___String_Literal_680.temp___String_Literal_680 () in
              let temp___688 =
                let temp___687 =
                  (Standard_String__Img.to_string
                     (Station__module.attr__ATTRIBUTE_IMAGE
                        (Station__module__rep.to_rep
                           ((Station__crew_record.__split_fields
                                (let temp___681 =
                                   (Station__station_record.__split_fields
                                       { Station__station_record.__split_fields =
                                           (Station__station_record.__split_fields__content
                                               Station__attempt_spacewalk__s.s__split_fields) }).
                                     Station__station_record.rec__station__station_record__crew in
                                 (Array__Int__Station__crew_record.get
                                    temp___681)
                                   (([#"station.adb" 243 0 0]
                                     assert {
                                       [#"station.adb" 243 0 0]
                                       [#"station.adb" 243 0 0]
                                       [@comment:      Put_Line(S.Crew(Bottom_CM).Name'Image & " Is moving to the " & S.Crew(Bottom_CM).Location'Image & " Module...");                                                                             ^ station.adb:243:77:VC_INDEX_CHECK]
                                       [@GP_Shape:call_put_line__concat__concat__image_ref__selectcomp__ixdcomp]
                                       [@vc:annotation]
                                       [@GP_Id:36]
                                       [@GP_Reason:VC_INDEX_CHECK]
                                       [@GP_Sloc:station.adb:243:77]
                                       ((Station__Tcrew_arrayD1.first
                                           <= (Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content)) /\
                                          ((Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content)
                                             <= Station__Tcrew_arrayD1.last)) });
                                    (Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content)))).
                              Station__crew_record.rec__station__crew_record__location))))
                    (2040 : int) in
                let temp___686 =
                  let temp___685 =
                    Temp___String_Literal_682.temp___String_Literal_682 () in
                  let temp___684 =
                    (Standard_String__Img.to_string
                       (Station__crewmember.attr__ATTRIBUTE_IMAGE
                          (Station__crewmember__rep.to_rep
                             ((Station__crew_record.__split_fields
                                  (let temp___683 =
                                     (Station__station_record.__split_fields
                                         { Station__station_record.__split_fields =
                                             (Station__station_record.__split_fields__content
                                                 Station__attempt_spacewalk__s.s__split_fields) }).
                                       Station__station_record.rec__station__station_record__crew in
                                   (Array__Int__Station__crew_record.get
                                      temp___683)
                                     (assert {
                                        [#"station.adb" 243 0 0]
                                        [@GP_Sloc:station.adb:243:23]
                                        [@vc:annotation]
                                        [@comment:      Put_Line(S.Crew(Bottom_CM).Name'Image & " Is moving to the " & S.Crew(Bottom_CM).Location'Image & " Module...");                       ^ station.adb:243:23:VC_INDEX_CHECK]
                                        [@GP_Id:37]
                                        [@GP_Reason:VC_INDEX_CHECK]
                                        [@GP_Shape:call_put_line__concat__concat__concat__image_ref__selectcomp__ixdcomp]
                                        ((Station__Tcrew_arrayD1.first
                                            <= (Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content)) /\
                                           ((Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content)
                                              <= Station__Tcrew_arrayD1.last)) };
                                      (Station__attempt_spacewalk__bottom_cm.bottom_cm.int__content)))).
                                Station__crew_record.rec__station__crew_record__name))))
                      (2040 : int) in
                  if ((Standard__string.length temp___684) = (0 : int)) then
                    (((Standard__string.of_array temp___685) (1 : int))
                       (18 : int))
                  else
                    (((Standard__string.of_array
                         ((((((Array__Int__Standard__character__Concat.concat
                                 (Standard__string.to_array temp___684))
                                (Standard__string.first temp___684))
                               (Standard__string.last temp___684))
                              temp___685)
                             (1 : int))
                            (18 : int)))
                        (Standard__string.first temp___684))
                       ([#"station.adb" 243 0 0]
                        [@vc:annotation]
                        [@GP_Reason:VC_RANGE_CHECK]
                        [@GP_Shape:call_put_line__concat__concat__concat]
                        [@GP_Id:38]
                        [@comment:      Put_Line(S.Crew(Bottom_CM).Name'Image & " Is moving to the " & S.Crew(Bottom_CM).Location'Image & " Module...");                                             ^ station.adb:243:45:VC_RANGE_CHECK]
                        [@GP_Sloc:station.adb:243:45]
                        (Standard__positive.range_check_
                           (((Standard__string.first temp___684)
                               + (((Integer.length
                                      (Standard__string.first temp___684))
                                     (Standard__string.last temp___684))
                                    + ((Integer.length (1 : int)) (18 : int))))
                              - (1 : int))))) in
                if ((Standard__string.length temp___686) = (0 : int)) then
                  (((Standard__string.of_array
                       (Standard__string.to_array temp___687))
                      (Standard__string.first temp___687))
                     (Standard__string.last temp___687))
                else
                  (((Standard__string.of_array
                       ((((((Array__Int__Standard__character__Concat.concat
                               (Standard__string.to_array temp___686))
                              (Standard__string.first temp___686))
                             (Standard__string.last temp___686))
                            (Standard__string.to_array temp___687))
                           (Standard__string.first temp___687))
                          (Standard__string.last temp___687)))
                      (Standard__string.first temp___686))
                     ([#"station.adb" 243 0 0]
                      [@GP_Shape:call_put_line__concat__concat]
                      [@GP_Sloc:station.adb:243:68]
                      [@vc:annotation]
                      [@GP_Reason:VC_RANGE_CHECK]
                      [@GP_Id:39]
                      [@comment:      Put_Line(S.Crew(Bottom_CM).Name'Image & " Is moving to the " & S.Crew(Bottom_CM).Location'Image & " Module...");                                                                    ^ station.adb:243:68:VC_RANGE_CHECK]
                      (Standard__positive.range_check_
                         (((Standard__string.first temp___686)
                             + (((Integer.length
                                    (Standard__string.first temp___686))
                                   (Standard__string.last temp___686))
                                  + ((Integer.length
                                        (Standard__string.first temp___687))
                                       (Standard__string.last temp___687))))
                            - (1 : int))))) in
              if ((Standard__string.length temp___688) = (0 : int)) then
                (((Standard__string.of_array temp___689) (1 : int))
                   (10 : int))
              else
                (((Standard__string.of_array
                     ((((((Array__Int__Standard__character__Concat.concat
                             (Standard__string.to_array temp___688))
                            (Standard__string.first temp___688))
                           (Standard__string.last temp___688))
                          temp___689)
                         (1 : int))
                        (10 : int)))
                    (Standard__string.first temp___688))
                   ([#"station.adb" 243 0 0]
                    [@GP_Sloc:station.adb:243:103]
                    [@GP_Id:40]
                    [@vc:annotation]
                    [@GP_Reason:VC_RANGE_CHECK]
                    [@comment:      Put_Line(S.Crew(Bottom_CM).Name'Image & " Is moving to the " & S.Crew(Bottom_CM).Location'Image & " Module...");                                                                                                       ^ station.adb:243:103:VC_RANGE_CHECK]
                    [@GP_Shape:call_put_line__concat]
                    (Standard__positive.range_check_
                       (((Standard__string.first temp___688)
                           + (((Integer.length
                                  (Standard__string.first temp___688))
                                 (Standard__string.last temp___688))
                                + ((Integer.length (1 : int)) (10 : int))))
                          - (1 : int)))))))));
        ([@GP_Sloc:station.adb:244:7]
         [#"station.adb" 244 0 0] [#"station.adb" 244 0 0] ());
        ([@GP_Sloc:station.adb:245:7]
         [#"station.adb" 245 0 0] [#"station.adb" 245 0 0] ());
        ([@GP_Sloc:station.adb:246:7] [#"station.adb" 246 0 0] ());
        ([@GP_Sloc:station.adb:246:7]
         [#"station.adb" 246 0 0]
         (([#"station.adb" 246 0 0] (val _f : unit in
                                     _f));
          (Ada___ada__text_io__put_line__2___axiom.put_line
             (let temp___691 =
                Temp___String_Literal_690.temp___String_Literal_690 () in
              ((Standard__string.of_array temp___691) (1 : int)) (33 : int)))));
        ([@GP_Sloc:station.adb:248:7] [#"station.adb" 248 0 0] ());
        ([@GP_Sloc:station.adb:248:7]
         [#"station.adb" 248 0 0]
         (let temp___compl_692 =
            { Station__station_record.__split_fields =
                (Station__station_record.__split_fields__content
                    Station__attempt_spacewalk__s.s__split_fields) } in
          ([#"station.adb" 248 0 0] (val _f : unit in
                                     _f));
          ([#"station.adb" 248 0 0]
           [@GP_Reason:VC_PRECONDITION]
           [@GP_Id:41]
           [@GP_Shape:call_open_door]
           [@vc:annotation]
           [@GP_Sloc:station.adb:248:7]
           [@comment:      Open_Door(S, 1);       ^ station.adb:248:7:VC_PRECONDITION]
           ((Station__open_door___axiom.open_door
               Station__attempt_spacewalk__s.s__split_fields)
              (1 : int)))));
        ([@GP_Sloc:station.adb:249:7]
         [#"station.adb" 249 0 0] [#"station.adb" 249 0 0] ());
        ([@GP_Sloc:station.adb:250:7] [#"station.adb" 250 0 0] ());
        ([@GP_Sloc:station.adb:250:7]
         [#"station.adb" 250 0 0]
         (([#"station.adb" 250 0 0] (val _f : unit in
                                     _f));
          (Ada___ada__text_io__put_line__2___axiom.put_line
             (let temp___696 =
                Temp___String_Literal_693.temp___String_Literal_693 () in
              let temp___695 =
                (Standard_String__Img.to_string
                   (Station__crewmember.attr__ATTRIBUTE_IMAGE
                      (Station__crewmember__rep.to_rep
                         ((Station__crew_record.__split_fields
                              (let temp___694 =
                                 (Station__station_record.__split_fields
                                     { Station__station_record.__split_fields =
                                         (Station__station_record.__split_fields__content
                                             Station__attempt_spacewalk__s.s__split_fields) }).
                                   Station__station_record.rec__station__station_record__crew in
                               (Array__Int__Station__crew_record.get
                                  temp___694)
                                 (([#"station.adb" 250 0 0]
                                   assert {
                                     [#"station.adb" 250 0 0]
                                     [#"station.adb" 250 0 0]
                                     [@comment:      Put_Line(S.Crew(CM).Name'Image & " Is inside the airlock...");                       ^ station.adb:250:23:VC_INDEX_CHECK]
                                     [@GP_Sloc:station.adb:250:23]
                                     [@GP_Id:42]
                                     [@vc:annotation]
                                     [@GP_Reason:VC_INDEX_CHECK]
                                     [@GP_Shape:call_put_line__concat__image_ref__selectcomp__ixdcomp]
                                     ((Station__Tcrew_arrayD1.first
                                         <= Station__attempt_spacewalk__cm.cm) /\
                                        (Station__attempt_spacewalk__cm.cm
                                           <= Station__Tcrew_arrayD1.last)) });
                                  Station__attempt_spacewalk__cm.cm))).
                            Station__crew_record.rec__station__crew_record__name))))
                  (2040 : int) in
              if ((Standard__string.length temp___695) = (0 : int)) then
                (((Standard__string.of_array temp___696) (1 : int))
                   (25 : int))
              else
                (((Standard__string.of_array
                     ((((((Array__Int__Standard__character__Concat.concat
                             (Standard__string.to_array temp___695))
                            (Standard__string.first temp___695))
                           (Standard__string.last temp___695))
                          temp___696)
                         (1 : int))
                        (25 : int)))
                    (Standard__string.first temp___695))
                   ([#"station.adb" 250 0 0]
                    [@GP_Id:43]
                    [@vc:annotation]
                    [@GP_Reason:VC_RANGE_CHECK]
                    [@comment:      Put_Line(S.Crew(CM).Name'Image & " Is inside the airlock...");                                      ^ station.adb:250:38:VC_RANGE_CHECK]
                    [@GP_Shape:call_put_line__concat]
                    [@GP_Sloc:station.adb:250:38]
                    (Standard__positive.range_check_
                       (((Standard__string.first temp___695)
                           + (((Integer.length
                                  (Standard__string.first temp___695))
                                 (Standard__string.last temp___695))
                                + ((Integer.length (1 : int)) (25 : int))))
                          - (1 : int)))))))));
        ([@GP_Sloc:station.adb:251:7] [#"station.adb" 251 0 0] ());
        ([@GP_Sloc:station.adb:251:7]
         [#"station.adb" 251 0 0]
         (([#"station.adb" 251 0 0] (val _f : unit in
                                     _f));
          (Ada___ada__text_io__put_line__2___axiom.put_line
             (let temp___698 =
                Temp___String_Literal_697.temp___String_Literal_697 () in
              ((Standard__string.of_array temp___698) (1 : int)) (0 : int)))));
        ([@GP_Sloc:station.adb:252:7]
         [#"station.adb" 252 0 0] [#"station.adb" 252 0 0] ());
        ([@GP_Sloc:station.adb:253:7] [#"station.adb" 253 0 0] ());
        ([@GP_Sloc:station.adb:253:7]
         [#"station.adb" 253 0 0]
         (let temp___compl_699 =
            { Station__station_record.__split_fields =
                (Station__station_record.__split_fields__content
                    Station__attempt_spacewalk__s.s__split_fields) } in
          ([#"station.adb" 253 0 0] (val _f : unit in
                                     _f));
          ([#"station.adb" 253 0 0]
           [@GP_Reason:VC_PRECONDITION]
           [@GP_Shape:call_open_door]
           [@GP_Id:44]
           [@vc:annotation]
           [@comment:      Open_Door(S, 2);       ^ station.adb:253:7:VC_PRECONDITION]
           [@GP_Sloc:station.adb:253:7]
           ((Station__open_door___axiom.open_door
               Station__attempt_spacewalk__s.s__split_fields)
              (2 : int)))));
        ([@GP_Sloc:station.adb:254:7]
         [#"station.adb" 254 0 0] [#"station.adb" 254 0 0] ());
        ([@GP_Sloc:station.adb:255:7] [#"station.adb" 255 0 0] ());
        ([@GP_Sloc:station.adb:255:7]
         [#"station.adb" 255 0 0]
         (([#"station.adb" 255 0 0] (val _f : unit in
                                     _f));
          (Ada___ada__text_io__put_line__2___axiom.put_line
             (let temp___703 =
                Temp___String_Literal_700.temp___String_Literal_700 () in
              let temp___702 =
                (Standard_String__Img.to_string
                   (Station__crewmember.attr__ATTRIBUTE_IMAGE
                      (Station__crewmember__rep.to_rep
                         ((Station__crew_record.__split_fields
                              (let temp___701 =
                                 (Station__station_record.__split_fields
                                     { Station__station_record.__split_fields =
                                         (Station__station_record.__split_fields__content
                                             Station__attempt_spacewalk__s.s__split_fields) }).
                                   Station__station_record.rec__station__station_record__crew in
                               (Array__Int__Station__crew_record.get
                                  temp___701)
                                 (([#"station.adb" 255 0 0]
                                   assert {
                                     [#"station.adb" 255 0 0]
                                     [#"station.adb" 255 0 0]
                                     [@GP_Sloc:station.adb:255:23]
                                     [@GP_Id:45]
                                     [@vc:annotation]
                                     [@GP_Reason:VC_INDEX_CHECK]
                                     [@GP_Shape:call_put_line__concat__image_ref__selectcomp__ixdcomp]
                                     [@comment:      Put_Line(S.Crew(CM).Name'Image & " Has left the airlock...");                       ^ station.adb:255:23:VC_INDEX_CHECK]
                                     ((Station__Tcrew_arrayD1.first
                                         <= Station__attempt_spacewalk__cm.cm) /\
                                        (Station__attempt_spacewalk__cm.cm
                                           <= Station__Tcrew_arrayD1.last)) });
                                  Station__attempt_spacewalk__cm.cm))).
                            Station__crew_record.rec__station__crew_record__name))))
                  (2040 : int) in
              if ((Standard__string.length temp___702) = (0 : int)) then
                (((Standard__string.of_array temp___703) (1 : int))
                   (24 : int))
              else
                (((Standard__string.of_array
                     ((((((Array__Int__Standard__character__Concat.concat
                             (Standard__string.to_array temp___702))
                            (Standard__string.first temp___702))
                           (Standard__string.last temp___702))
                          temp___703)
                         (1 : int))
                        (24 : int)))
                    (Standard__string.first temp___702))
                   ([#"station.adb" 255 0 0]
                    [@GP_Id:46]
                    [@vc:annotation]
                    [@GP_Reason:VC_RANGE_CHECK]
                    [@comment:      Put_Line(S.Crew(CM).Name'Image & " Has left the airlock...");                                      ^ station.adb:255:38:VC_RANGE_CHECK]
                    [@GP_Shape:call_put_line__concat]
                    [@GP_Sloc:station.adb:255:38]
                    (Standard__positive.range_check_
                       (((Standard__string.first temp___702)
                           + (((Integer.length
                                  (Standard__string.first temp___702))
                                 (Standard__string.last temp___702))
                                + ((Integer.length (1 : int)) (24 : int))))
                          - (1 : int)))))))));
        ([@GP_Sloc:station.adb:256:7] [#"station.adb" 256 0 0] ());
        ([@GP_Sloc:station.adb:256:7]
         [#"station.adb" 256 0 0]
         (([#"station.adb" 256 0 0] (val _f : unit in
                                     _f));
          (Ada___ada__text_io__put_line__2___axiom.put_line
             (let temp___705 =
                Temp___String_Literal_704.temp___String_Literal_704 () in
              ((Standard__string.of_array temp___705) (1 : int)) (0 : int)))));
        ([@GP_Sloc:station.adb:257:7]
         [#"station.adb" 257 0 0] [#"station.adb" 257 0 0] ());
        ([@GP_Sloc:station.adb:258:7] [#"station.adb" 258 0 0] ());
        ([@GP_Sloc:station.adb:258:7]
         [#"station.adb" 258 0 0]
         (let temp___compl_706 =
            { Station__station_record.__split_fields =
                (Station__station_record.__split_fields__content
                    Station__attempt_spacewalk__s.s__split_fields) } in
          ([#"station.adb" 258 0 0] (val _f : unit in
                                     _f));
          ([#"station.adb" 258 0 0]
           [@GP_Reason:VC_PRECONDITION]
           [@GP_Shape:call_seal_airlock]
           [@GP_Id:47]
           [@vc:annotation]
           [@comment:      Seal_Airlock(S);       ^ station.adb:258:7:VC_PRECONDITION]
           [@GP_Sloc:station.adb:258:7]
           (Station__seal_airlock___axiom.seal_airlock
              Station__attempt_spacewalk__s.s__split_fields))));
        ([@GP_Sloc:station.adb:259:7] [#"station.adb" 259 0 0] ());
        ([@GP_Sloc:station.adb:259:7]
         [#"station.adb" 259 0 0]
         (([#"station.adb" 259 0 0] (val _f : unit in
                                     _f));
          (Ada___ada__text_io__put_line__2___axiom.put_line
             (let temp___710 =
                Temp___String_Literal_707.temp___String_Literal_707 () in
              let temp___709 =
                (Standard_String__Img.to_string
                   (Station__crewmember.attr__ATTRIBUTE_IMAGE
                      (Station__crewmember__rep.to_rep
                         ((Station__crew_record.__split_fields
                              (let temp___708 =
                                 (Station__station_record.__split_fields
                                     { Station__station_record.__split_fields =
                                         (Station__station_record.__split_fields__content
                                             Station__attempt_spacewalk__s.s__split_fields) }).
                                   Station__station_record.rec__station__station_record__crew in
                               (Array__Int__Station__crew_record.get
                                  temp___708)
                                 (([#"station.adb" 259 0 0]
                                   assert {
                                     [#"station.adb" 259 0 0]
                                     [#"station.adb" 259 0 0]
                                     [@GP_Id:48]
                                     [@vc:annotation]
                                     [@comment:      Put_Line(S.Crew(CM).Name'Image & " IS ON A SPACEWALK");                       ^ station.adb:259:23:VC_INDEX_CHECK]
                                     [@GP_Reason:VC_INDEX_CHECK]
                                     [@GP_Sloc:station.adb:259:23]
                                     [@GP_Shape:call_put_line__concat__image_ref__selectcomp__ixdcomp]
                                     ((Station__Tcrew_arrayD1.first
                                         <= Station__attempt_spacewalk__cm.cm) /\
                                        (Station__attempt_spacewalk__cm.cm
                                           <= Station__Tcrew_arrayD1.last)) });
                                  Station__attempt_spacewalk__cm.cm))).
                            Station__crew_record.rec__station__crew_record__name))))
                  (2040 : int) in
              if ((Standard__string.length temp___709) = (0 : int)) then
                (((Standard__string.of_array temp___710) (1 : int))
                   (18 : int))
              else
                (((Standard__string.of_array
                     ((((((Array__Int__Standard__character__Concat.concat
                             (Standard__string.to_array temp___709))
                            (Standard__string.first temp___709))
                           (Standard__string.last temp___709))
                          temp___710)
                         (1 : int))
                        (18 : int)))
                    (Standard__string.first temp___709))
                   ([#"station.adb" 259 0 0]
                    [@vc:annotation]
                    [@GP_Id:49]
                    [@GP_Reason:VC_RANGE_CHECK]
                    [@GP_Sloc:station.adb:259:38]
                    [@comment:      Put_Line(S.Crew(CM).Name'Image & " IS ON A SPACEWALK");                                      ^ station.adb:259:38:VC_RANGE_CHECK]
                    [@GP_Shape:call_put_line__concat]
                    (Standard__positive.range_check_
                       (((Standard__string.first temp___709)
                           + (((Integer.length
                                  (Standard__string.first temp___709))
                                 (Standard__string.last temp___709))
                                + ((Integer.length (1 : int)) (18 : int))))
                          - (1 : int)))))))));
        ([@GP_Sloc:station.adb:261:27]
         [#"station.adb" 261 0 0]
         (let temp___716 =
            let temp___715 =
              { Station__station_record.__split_fields =
                  (Station__station_record.__split_fields__content
                      Station__attempt_spacewalk__s.s__split_fields) } in
            ([#"station.adb" 261 0 0]
             (begin
                ensures { true }
                let _ =
                  let _ =
                    (Station__station_record.__split_fields temp___715).
                      Station__station_record.rec__station__station_record__crew in
                  () in
                ()
              end));
            ({ temp___715 with
               Station__station_record.__split_fields =
                 ({ (Station__station_record.__split_fields temp___715) with
                    Station__station_record.rec__station__station_record__crew =
                      (let temp___714 =
                         (Station__station_record.__split_fields
                             { Station__station_record.__split_fields =
                                 (Station__station_record.__split_fields__content
                                     Station__attempt_spacewalk__s.s__split_fields) }).
                           Station__station_record.rec__station__station_record__crew in
                       ((Array__Int__Station__crew_record.set
                           ((Station__station_record.__split_fields
                                { Station__station_record.__split_fields =
                                    (Station__station_record.__split_fields__content
                                        Station__attempt_spacewalk__s.s__split_fields) }).
                              Station__station_record.rec__station__station_record__crew))
                          (([#"station.adb" 261 0 0]
                            assert {
                              [#"station.adb" 261 0 0]
                              [#"station.adb" 261 0 0]
                              [@GP_Sloc:station.adb:261:14]
                              [@GP_Shape:s_assign__selectcomp__ixdcomp]
                              [@vc:annotation]
                              [@comment:      S.Crew(CM).Location := Space;              ^ station.adb:261:14:VC_INDEX_CHECK]
                              [@GP_Reason:VC_INDEX_CHECK]
                              [@GP_Id:50]
                              ((Station__Tcrew_arrayD1.first
                                  <= Station__attempt_spacewalk__cm.cm) /\
                                 (Station__attempt_spacewalk__cm.cm
                                    <= Station__Tcrew_arrayD1.last)) });
                           Station__attempt_spacewalk__cm.cm))
                         (let temp___713 =
                            let temp___712 =
                              (Station__station_record.__split_fields
                                  { Station__station_record.__split_fields =
                                      (Station__station_record.__split_fields__content
                                          Station__attempt_spacewalk__s.s__split_fields) }).
                                Station__station_record.rec__station__station_record__crew in
                            (Array__Int__Station__crew_record.get temp___712)
                              Station__attempt_spacewalk__cm.cm in
                          (begin
                             ensures { true }
                             let _ =
                               let _ =
                                 (Station__crew_record.__split_fields
                                     temp___713).Station__crew_record.rec__station__crew_record__location in
                               () in
                             ()
                           end);
                          ({ temp___713 with
                             Station__crew_record.__split_fields =
                               ({ (Station__crew_record.__split_fields
                                      temp___713) with
                                  Station__crew_record.rec__station__crew_record__location =
                                    (Station__module__rep.of_rep (4 : int)) }) }))) }) }) in
          Station__attempt_spacewalk__s.s__split_fields.Station__station_record.__split_fields__content <-
            (Station__station_record.__split_fields temp___716)));
        ([@GP_Sloc:station.adb:262:25]
         [#"station.adb" 262 0 0]
         (let temp___719 =
            let temp___718 =
              { Station__station_record.__split_fields =
                  (Station__station_record.__split_fields__content
                      Station__attempt_spacewalk__s.s__split_fields) } in
            ([#"station.adb" 262 0 0]
             (begin
                ensures { true }
                let _ =
                  let _ =
                    (Station__station_record.__split_fields temp___718).
                      Station__station_record.rec__station__station_record__activespacewalk in
                  () in
                ()
              end));
            ({ temp___718 with
               Station__station_record.__split_fields =
                 ({ (Station__station_record.__split_fields temp___718) with
                    Station__station_record.rec__station__station_record__activespacewalk =
                      (Boolean.of_int (1 : int)) }) }) in
          [#"station.adb" 262 0 0]
          (Station__attempt_spacewalk__s.s__split_fields.Station__station_record.__split_fields__content <-
             (Station__station_record.__split_fields temp___719))));
        (raise Return__exc)
      with Return__exc -> ()
      end);
     (begin
        ensures { true }
        let _ =
          let _ =
            (Boolean.orb
               ((Boolean.andb
                   ((Boolean.andb
                       (Station__altitudeinvariant___axiom.altitudeinvariant
                          ()))
                      ((Station__module__rep.to_rep
                          ((Station__crew_record.__split_fields
                               (let temp___722 =
                                  (Station__station_record.__split_fields
                                      { Station__station_record.__split_fields =
                                          (Station__station_record.__split_fields__content
                                              Station__attempt_spacewalk__s.s__split_fields) }).
                                    Station__station_record.rec__station__station_record__crew in
                                (Array__Int__Station__crew_record.get
                                   temp___722)
                                  (assert {
                                     [#"station.ads" 98 0 0]
                                     [@GP_Shape:pragargs__or__and__and__cmp__selectcomp__ixdcomp]
                                     [@vc:annotation]
                                     [@comment:       Post => (AltitudeInvariant and S.Crew(CM).Location = Space and                                              ^ station.ads:98:46:VC_INDEX_CHECK]
                                     [@GP_Reason:VC_INDEX_CHECK]
                                     [@GP_Id:51]
                                     [@GP_Sloc:station.ads:98:46]
                                     ((Station__Tcrew_arrayD1.first
                                         <= Station__attempt_spacewalk__cm.cm) /\
                                        (Station__attempt_spacewalk__cm.cm
                                           <= Station__Tcrew_arrayD1.last)) };
                                   Station__attempt_spacewalk__cm.cm))).
                             Station__crew_record.rec__station__crew_record__location))
                         = (4 : int))))
                  ((Boolean.to_int
                      ((Station__station_record.__split_fields
                           { Station__station_record.__split_fields =
                               (Station__station_record.__split_fields__content
                                   Station__attempt_spacewalk__s.s__split_fields) }).
                         Station__station_record.rec__station__station_record__activespacewalk))
                     = (Boolean.to_int (Boolean.of_int (1 : int))))))
              ((Boolean.andb
                  ((Boolean.andb
                      ((Boolean.andb
                          (Station__sealedinvariant___axiom.sealedinvariant
                             ()))
                         (Station__altitudeinvariant___axiom.altitudeinvariant
                            ())))
                     ((Station__module__rep.to_rep
                         ((Station__crew_record.__split_fields
                              (let temp___723 =
                                 (Station__station_record.__split_fields
                                     { Station__station_record.__split_fields =
                                         (Station__station_record.__split_fields__content
                                             Station__attempt_spacewalk__s.s__split_fields) }).
                                   Station__station_record.rec__station__station_record__crew in
                               (Array__Int__Station__crew_record.get
                                  temp___723)
                                 (assert {
                                    [#"station.ads" 100 0 0]
                                    [@GP_Shape:pragargs__or__and__and__cmp__selectcomp__ixdcomp]
                                    [@vc:annotation]
                                    [@comment:       (SealedInvariant and AltitudeInvariant and S.Crew(CM).Location /= Space and                                                          ^ station.ads:100:58:VC_INDEX_CHECK]
                                    [@GP_Reason:VC_INDEX_CHECK]
                                    [@GP_Sloc:station.ads:100:58]
                                    [@GP_Id:52]
                                    ((Station__Tcrew_arrayD1.first
                                        <= Station__attempt_spacewalk__cm.cm) /\
                                       (Station__attempt_spacewalk__cm.cm
                                          <= Station__Tcrew_arrayD1.last)) };
                                  Station__attempt_spacewalk__cm.cm))).
                            Station__crew_record.rec__station__crew_record__location))
                        <> (4 : int))))
                 ((Boolean.to_int
                     ((Station__station_record.__split_fields
                          { Station__station_record.__split_fields =
                              (Station__station_record.__split_fields__content
                                  Station__attempt_spacewalk__s.s__split_fields) }).
                        Station__station_record.rec__station__station_record__activespacewalk))
                    = (Boolean.to_int (Boolean.of_int (0 : int))))) in
          () in
        ()
      end))
end

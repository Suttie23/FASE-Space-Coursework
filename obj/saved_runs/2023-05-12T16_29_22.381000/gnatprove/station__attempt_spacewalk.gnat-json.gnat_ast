(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type integer  = <range -2147483648 2147483647>
  
  function   first () requires { True } ensures  { True } returns
    int = -2147483648
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = integer,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type integer__ref  = { mutable integer__content : integer }
  
  function   integer__ref_integer__content__projection (a : integer__ref)
    requires {  } ensures  {  } returns integer = a.integer__content
  
  meta model_projection function integer__ref_integer__content__projection
  
  meta inline:no function integer__ref_integer__content__projection
  
  function   integer__havoc (x : integer__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type positive  = <range 1 2147483647>
  
  function   first () requires { True } ensures  { True } returns int = 1
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = positive,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type positive__ref  = { mutable positive__content : positive }
  
  function   positive__ref_positive__content__projection (a : positive__ref)
    requires {  } ensures  {  } returns positive = a.positive__content
  
  meta model_projection function positive__ref_positive__content__projection
  
  meta inline:no function positive__ref_positive__content__projection
  
  function   positive__havoc (x : positive__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type character  
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 255
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = character,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type character__ref  = { mutable character__content : character }
  
  function   character__ref_character__content__projection
    (a : character__ref) requires {  } ensures  {  } returns
    character = a.character__content
  
  meta model_projection function character__ref_character__content__projection
  
  meta inline:no function character__ref_character__content__projection
  
  function   character__havoc (x : character__ref) requires {  } ensures 
    {  } returns unit

end

(* Module defining to_rep/of_rep for type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character__rep
  
  use        Standard__character
  use import _gnatprove_standard.Main
  use import int.Int
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Standard__character.character,
    predicate in_range = Standard__character.in_range
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__character
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  
  function   index_I1_one () requires { True } ensures  { True } returns
    int = 1
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  clone export _gnatprove_standard.Array__1 with axiom . type I1.t = int,
    predicate I1.le = <=, predicate I1.lt = <, predicate I1.gt = >,
    function I1.add = +, function I1.sub = -, function I1.one = index_I1_one,
    type component_type = component_type
  
  function   bool_eq
    (a : map a__first : int a__last : int b : map b__first : int
    b__last : int) requires { True } ensures  { True } returns
    bool = ((if (a__first <= a__last) then
            ((b__first <= b__last) /\
               ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              --pp_universal_quantif NOT IMPLEMENTED)
  
  axiom bool_eq_rev : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module defining to_rep/of_rep for type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer__rep
  
  use        Standard__integer
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Standard__integer.integer) requires { True }
    ensures  { True } returns int = (Standard__integer.integer'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Standard__integer.integer,
    predicate in_range = Standard__integer.in_range, function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__integer
  use        Standard__positive
  use        Standard__character
  use        Array__Int__Standard__character
  use        Standard__integer__rep
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   index_1_id (x : int) requires { True } ensures  { True } returns
    int = x
  
  clone export ada__model.Unconstr_Array with axiom . type map = Array__Int__Standard__character.map,
    function array_bool_eq = Array__Int__Standard__character.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__positive.dynamic_property,
    predicate index_rep_le = <=
  
  type string__  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  meta model_projection function to_array
  
  meta inline:no function to_array
  
  meta model_projection function first
  
  meta inline:no function first
  
  meta model_projection function last
  
  meta inline:no function last
  
  type string____ref  = { mutable string____content : string__ }
  
  function   string____ref_string____content__projection (a : string____ref)
    requires {  } ensures  {  } returns string__ = a.string____content
  
  meta model_projection function string____ref_string____content__projection
  
  meta inline:no function string____ref_string____content__projection
  
  function   string____havoc (x : string____ref) requires {  } ensures  {  }
    returns unit

end

(* Module defining to_string/of_string functions, created in Gnat2Why.Types.Translate_Type *)
module Standard_String__Img
  
  use import int.Int
  use        Standard__string
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_string (x : _gnatprove_standard.Main.__image s : int)
    requires { True } ensures  { True } returns Standard__string.string__
  
  function   from_string (x : Standard__string.string__) requires { True }
    ensures  { True } returns _gnatprove_standard.Main.__image
  
  axiom to_string__first : --pp_universal_quantif NOT IMPLEMENTED
  
  axiom to_string__length : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving axioms for type "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__integer
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_18) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_14) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_15) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_16) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_17) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_14) = True) \/
          (Standard__integer.first <= Standard__integer.last))
       then
       (Standard__integer.dynamic_property Standard__integer.first
          Standard__integer.last ([mlw:proxy_symbol]
          [introduced] temp___expr_18))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_19) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_20) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for axiomatizing concatenation for the array theory associated to type "string", created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Standard__character__Concat
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Array__Int__Standard__character
  
  function   index_Index_one () requires { True } ensures  { True } returns
    int = 1
  
  clone export _gnatprove_standard.Array__1__Concat with axiom . type component_type = Array__Int__Standard__character.component_type,
    type map = Array__Int__Standard__character.map, type Index.t = int,
    predicate Index.le = <=, predicate Index.lt = <, predicate Index.gt = >,
    function Index.add = +, function Index.sub = -,
    function Index.one = index_Index_one,
    function get = Array__Int__Standard__character.get

end

(* Module for axiomatizing type "airlock_door" defined at station.ads:9, created in Gnat2Why.Types.Translate_Type *)
module Station__airlock_door
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type airlock_door  
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 1
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = airlock_door,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type airlock_door__ref  = { mutable airlock_door__content : airlock_door }
  
  function   airlock_door__ref_airlock_door__content__projection
    (a : airlock_door__ref) requires {  } ensures  {  } returns
    airlock_door = a.airlock_door__content
  
  meta model_projection function airlock_door__ref_airlock_door__content__projection
  
  meta inline:no function airlock_door__ref_airlock_door__content__projection
  
  function   airlock_door__havoc (x : airlock_door__ref) requires {  }
    ensures  {  } returns unit

end

(* Module defining to_rep/of_rep for type "airlock_door" defined at station.ads:9, created in Gnat2Why.Types.Translate_Type *)
module Station__airlock_door__rep
  
  use        Station__airlock_door
  use import _gnatprove_standard.Main
  use import int.Int
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Station__airlock_door.airlock_door,
    predicate in_range = Station__airlock_door.in_range
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing type "module" defined at station.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Station__module
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type module__  
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 4
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = module__,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type module____ref  = { mutable module____content : module__ }
  
  function   module____ref_module____content__projection (a : module____ref)
    requires {  } ensures  {  } returns module__ = a.module____content
  
  meta model_projection function module____ref_module____content__projection
  
  meta inline:no function module____ref_module____content__projection
  
  function   module____havoc (x : module____ref) requires {  } ensures  {  }
    returns unit

end

(* Module defining to_rep/of_rep for type "module" defined at station.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Station__module__rep
  
  use        Station__module
  use import _gnatprove_standard.Main
  use import int.Int
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Station__module.module__,
    predicate in_range = Station__module.in_range
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the array theory associated to type "Tmodule_arrayB" defined at station.ads:13, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Station__module
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Station__module
  use        Station__module__rep
  
  function   index_I1_one () requires { True } ensures  { True } returns
    int = 1
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  clone export _gnatprove_standard.Array__1 with axiom . type I1.t = int,
    predicate I1.le = <=, predicate I1.lt = <, predicate I1.gt = >,
    function I1.add = +, function I1.sub = -, function I1.one = index_I1_one,
    type component_type = component_type
  
  function   bool_eq
    (a : map a__first : int a__last : int b : map b__first : int
    b__last : int) requires { True } ensures  { True } returns
    bool = ((if (a__first <= a__last) then
            ((b__first <= b__last) /\
               ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              --pp_universal_quantif NOT IMPLEMENTED)
  
  axiom bool_eq_rev : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for axiomatizing type "module_array" defined at station.ads:13, created in Gnat2Why.Types.Translate_Type *)
module Station__module_array
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Station__module
  use        Array__Int__Station__module
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   first () requires {  } ensures  {  } returns int = 1
  
  function   last () requires {  } ensures  {  } returns int = 3
  
  clone export ada__model.Constr_Array with axiom . type map = Array__Int__Station__module.map,
    function array_bool_eq = Array__Int__Station__module.bool_eq,
    function first = first, function last = last, type index_rep_type = int

end

(* Module for axiomatizing type "crewmember" defined at station.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Station__crewmember
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type crewmember  
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 2
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = crewmember,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type crewmember__ref  = { mutable crewmember__content : crewmember }
  
  function   crewmember__ref_crewmember__content__projection
    (a : crewmember__ref) requires {  } ensures  {  } returns
    crewmember = a.crewmember__content
  
  meta model_projection function crewmember__ref_crewmember__content__projection
  
  meta inline:no function crewmember__ref_crewmember__content__projection
  
  function   crewmember__havoc (x : crewmember__ref) requires {  } ensures 
    {  } returns unit

end

(* Module defining to_rep/of_rep for type "crewmember" defined at station.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Station__crewmember__rep
  
  use        Station__crewmember
  use import _gnatprove_standard.Main
  use import int.Int
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Station__crewmember.crewmember,
    predicate in_range = Station__crewmember.in_range
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing type "crewmemberstatus" defined at station.ads:16, created in Gnat2Why.Types.Translate_Type *)
module Station__crewmemberstatus
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type crewmemberstatus  
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 2
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = crewmemberstatus,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type crewmemberstatus__ref  = { mutable crewmemberstatus__content : crewmemberstatus }
  
  function   crewmemberstatus__ref_crewmemberstatus__content__projection
    (a : crewmemberstatus__ref) requires {  } ensures  {  } returns
    crewmemberstatus = a.crewmemberstatus__content
  
  meta model_projection function crewmemberstatus__ref_crewmemberstatus__content__projection
  
  meta inline:no function crewmemberstatus__ref_crewmemberstatus__content__projection
  
  function   crewmemberstatus__havoc (x : crewmemberstatus__ref) requires
    {  } ensures  {  } returns unit

end

(* Module defining to_rep/of_rep for type "crewmemberstatus" defined at station.ads:16, created in Gnat2Why.Types.Translate_Type *)
module Station__crewmemberstatus__rep
  
  use        Station__crewmemberstatus
  use import _gnatprove_standard.Main
  use import int.Int
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Station__crewmemberstatus.crewmemberstatus,
    predicate in_range = Station__crewmemberstatus.in_range
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the record theory associated to type "crew_record" defined at station.ads:18, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Station__crew_record__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Station__module
  use        Station__module__rep
  use        Station__crewmember
  use        Station__crewmember__rep
  use        Station__crewmemberstatus
  use        Station__crewmemberstatus__rep
  
  type __split_fields  = { [name:Name]
                           [model_trace:.1607]rec__station__crew_record__name : Station__crewmember.crewmember;
                           [model_trace:.1612]
                           [name:Status]rec__station__crew_record__status : Station__crewmemberstatus.crewmemberstatus;
                           [name:Location]
                           [model_trace:.1616]rec__station__crew_record__location : Station__module.module__ }
  
  function [name:Name] [model_trace:.1607] 
    __split_fields_rec__station__crew_record__name__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Station__crewmember.crewmember = a.rec__station__crew_record__name
  
  meta model_projection function __split_fields_rec__station__crew_record__name__projection
  
  meta inline:no function __split_fields_rec__station__crew_record__name__projection
  
  function [model_trace:.1612] [name:Status] 
    __split_fields_rec__station__crew_record__status__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Station__crewmemberstatus.crewmemberstatus = a.rec__station__crew_record__status
  
  meta model_projection function __split_fields_rec__station__crew_record__status__projection
  
  meta inline:no function __split_fields_rec__station__crew_record__status__projection
  
  function [name:Location] [model_trace:.1616] 
    __split_fields_rec__station__crew_record__location__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Station__module.module__ = a.rec__station__crew_record__location
  
  meta model_projection function __split_fields_rec__station__crew_record__location__projection
  
  meta inline:no function __split_fields_rec__station__crew_record__location__projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields }
  
  function   __rep___split_fields__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__projection
  
  meta inline:no function __rep___split_fields__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   station__crew_record__name__pred (a : __rep) requires { True }
    ensures  { True } returns  = True
  
  function   rec__station__crew_record__name_ (a : __rep) requires
    { (station__crew_record__name__pred a) } ensures 
    { (result = a.__split_fields.rec__station__crew_record__name) } returns
    Station__crewmember.crewmember
  
  function   station__crew_record__status__pred (a : __rep) requires { True }
    ensures  { True } returns  = True
  
  function   rec__station__crew_record__status_ (a : __rep) requires
    { (station__crew_record__status__pred a) } ensures 
    { (result = a.__split_fields.rec__station__crew_record__status) } returns
    Station__crewmemberstatus.crewmemberstatus
  
  function   station__crew_record__location__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__station__crew_record__location_ (a : __rep) requires
    { (station__crew_record__location__pred a) } ensures 
    { (result = a.__split_fields.rec__station__crew_record__location) }
    returns Station__module.module__
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           (((Station__crewmember__rep.to_rep
                a.__split_fields.rec__station__crew_record__name)
               = (Station__crewmember__rep.to_rep
                    b.__split_fields.rec__station__crew_record__name)) /\
              ((Station__crewmemberstatus__rep.to_rep
                  a.__split_fields.rec__station__crew_record__status)
                 = (Station__crewmemberstatus__rep.to_rep
                      b.__split_fields.rec__station__crew_record__status)) /\
              ((Station__module__rep.to_rep
                  a.__split_fields.rec__station__crew_record__location)
                 = (Station__module__rep.to_rep
                      b.__split_fields.rec__station__crew_record__location)))
           then True  else False)

end

(* Module for axiomatizing type "crew_record" defined at station.ads:18, created in Gnat2Why.Types.Translate_Type *)
module Station__crew_record
  
  use export Station__crew_record__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type crew_record  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   station__crew_record__name__first__bit () requires {  } ensures 
    {  } returns int
  
  function   station__crew_record__name__last__bit () requires {  } ensures 
    {  } returns int
  
  function   station__crew_record__name__position () requires {  } ensures 
    {  } returns int
  
  axiom station__crew_record__name__first__bit_axiom : ((station__crew_record__name__first__bit
                                                           ) >= 0)
  
  axiom station__crew_record__name__last__bit_axiom : ((station__crew_record__name__last__bit
                                                          )
                                                         > (station__crew_record__name__first__bit
                                                              ))
  
  axiom station__crew_record__name__position_axiom : ((station__crew_record__name__position
                                                         ) >= 0)
  
  function   station__crew_record__status__first__bit () requires {  }
    ensures  {  } returns int
  
  function   station__crew_record__status__last__bit () requires {  }
    ensures  {  } returns int
  
  function   station__crew_record__status__position () requires {  } ensures 
    {  } returns int
  
  axiom station__crew_record__status__first__bit_axiom : ((station__crew_record__status__first__bit
                                                             ) >= 0)
  
  axiom station__crew_record__status__last__bit_axiom : ((station__crew_record__status__last__bit
                                                            )
                                                           > (station__crew_record__status__first__bit
                                                                ))
  
  axiom station__crew_record__status__position_axiom : ((station__crew_record__status__position
                                                           ) >= 0)
  
  function   station__crew_record__location__first__bit () requires {  }
    ensures  {  } returns int
  
  function   station__crew_record__location__last__bit () requires {  }
    ensures  {  } returns int
  
  function   station__crew_record__location__position () requires {  }
    ensures  {  } returns int
  
  axiom station__crew_record__location__first__bit_axiom : ((station__crew_record__location__first__bit
                                                               ) >= 0)
  
  axiom station__crew_record__location__last__bit_axiom : ((station__crew_record__location__last__bit
                                                              )
                                                             > (station__crew_record__location__first__bit
                                                                  ))
  
  axiom station__crew_record__location__position_axiom : ((station__crew_record__location__position
                                                             ) >= 0)
  
  function   user_eq (a : crew_record b : crew_record) requires { True }
    ensures  { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns crew_record
  
  type crew_record__ref  = { mutable crew_record__content : crew_record }
  
  function   crew_record__ref_crew_record__content__projection
    (a : crew_record__ref) requires {  } ensures  {  } returns
    crew_record = a.crew_record__content
  
  meta model_projection function crew_record__ref_crew_record__content__projection
  
  meta inline:no function crew_record__ref_crew_record__content__projection
  
  function   crew_record__havoc (x : crew_record__ref) requires {  } ensures 
    {  } returns unit

end

(* Module for axiomatizing the array theory associated to type "Tcrew_arrayB" defined at station.ads:24, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Station__crew_record
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Station__crew_record
  
  function   index_I1_one () requires { True } ensures  { True } returns
    int = 1
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  clone export _gnatprove_standard.Array__1 with axiom . type I1.t = int,
    predicate I1.le = <=, predicate I1.lt = <, predicate I1.gt = >,
    function I1.add = +, function I1.sub = -, function I1.one = index_I1_one,
    type component_type = component_type
  
  function   bool_eq
    (a : map a__first : int a__last : int b : map b__first : int
    b__last : int) requires { True } ensures  { True } returns
    bool = ((if (a__first <= a__last) then
            ((b__first <= b__last) /\
               ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              --pp_universal_quantif NOT IMPLEMENTED)
  
  axiom bool_eq_rev : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for axiomatizing type "crew_array" defined at station.ads:24, created in Gnat2Why.Types.Translate_Type *)
module Station__crew_array
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Station__crew_record
  use        Array__Int__Station__crew_record
  
  type component_type  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   first () requires {  } ensures  {  } returns int = 1
  
  function   last () requires {  } ensures  {  } returns int = 3
  
  clone export ada__model.Constr_Array with axiom . type map = Array__Int__Station__crew_record.map,
    function array_bool_eq = Array__Int__Station__crew_record.bool_eq,
    function first = first, function last = last, type index_rep_type = int

end

(* Module for axiomatizing type "T5s" defined at station.ads:30, created in Gnat2Why.Types.Translate_Type *)
module Station__station_record__T5s
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type t5s  = <range 820000 920000>
  
  function   first () requires { True } ensures  { True } returns
    int = 820000
  
  function   last () requires { True } ensures  { True } returns int = 920000
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = t5s,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type t5s__ref  = { mutable t5s__content : t5s }
  
  function   t5s__ref_t5s__content__projection (a : t5s__ref) requires {  }
    ensures  {  } returns t5s = a.t5s__content
  
  meta model_projection function t5s__ref_t5s__content__projection
  
  meta inline:no function t5s__ref_t5s__content__projection
  
  function   t5s__havoc (x : t5s__ref) requires {  } ensures  {  } returns
    unit

end

(* Module defining to_rep/of_rep for type "T5s" defined at station.ads:30, created in Gnat2Why.Types.Translate_Type *)
module Station__station_record__T5s__rep
  
  use        Station__station_record__T5s
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Station__station_record__T5s.t5s) requires { True }
    ensures  { True } returns int = (Station__station_record__T5s.t5s'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Station__station_record__T5s.t5s,
    predicate in_range = Station__station_record__T5s.in_range,
    function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing type "T6s" defined at station.ads:32, created in Gnat2Why.Types.Translate_Type *)
module Station__station_record__T6s
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type t6s  = <range 1 3>
  
  function   first () requires { True } ensures  { True } returns int = 1
  
  function   last () requires { True } ensures  { True } returns int = 3
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = t6s,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type t6s__ref  = { mutable t6s__content : t6s }
  
  function   t6s__ref_t6s__content__projection (a : t6s__ref) requires {  }
    ensures  {  } returns t6s = a.t6s__content
  
  meta model_projection function t6s__ref_t6s__content__projection
  
  meta inline:no function t6s__ref_t6s__content__projection
  
  function   t6s__havoc (x : t6s__ref) requires {  } ensures  {  } returns
    unit

end

(* Module defining to_rep/of_rep for type "T6s" defined at station.ads:32, created in Gnat2Why.Types.Translate_Type *)
module Station__station_record__T6s__rep
  
  use        Station__station_record__T6s
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Station__station_record__T6s.t6s) requires { True }
    ensures  { True } returns int = (Station__station_record__T6s.t6s'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Station__station_record__T6s.t6s,
    predicate in_range = Station__station_record__T6s.in_range,
    function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the record theory associated to type "station_record" defined at station.ads:27, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Station__station_record__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Station__airlock_door
  use        Station__airlock_door__rep
  use        Station__module_array
  use        Station__crew_array
  use        Station__station_record__T5s
  use        Station__station_record__T5s__rep
  use        Station__station_record__T6s
  use        Station__station_record__T6s__rep
  use        Array__Int__Station__module
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__module
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__module
  use        Array__Int__Station__module
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  
  type __split_fields  = { [name:Door1]
                           [model_trace:.1632]rec__station__station_record__door1 : Station__airlock_door.airlock_door;
                           [model_trace:.1638]
                           [name:Door2]rec__station__station_record__door2 : Station__airlock_door.airlock_door;
                           [name:Altitude]
                           [model_trace:.1643]rec__station__station_record__altitude : Station__station_record__T5s.t5s;
                           [model_trace:.1652]
                           [name:Modules]rec__station__station_record__modules : Array__Int__Station__module.map;
                           [name:Top_Module_Index]
                           [model_trace:.1656]rec__station__station_record__top_module_index : Station__station_record__T6s.t6s;
                           [name:Crew]
                           [model_trace:.1665]rec__station__station_record__crew : Array__Int__Station__crew_record.map }
  
  function [name:Door1] [model_trace:.1632] 
    __split_fields_rec__station__station_record__door1__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Station__airlock_door.airlock_door = a.rec__station__station_record__door1
  
  meta model_projection function __split_fields_rec__station__station_record__door1__projection
  
  meta inline:no function __split_fields_rec__station__station_record__door1__projection
  
  function [model_trace:.1638] [name:Door2] 
    __split_fields_rec__station__station_record__door2__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Station__airlock_door.airlock_door = a.rec__station__station_record__door2
  
  meta model_projection function __split_fields_rec__station__station_record__door2__projection
  
  meta inline:no function __split_fields_rec__station__station_record__door2__projection
  
  function [name:Altitude] [model_trace:.1643] 
    __split_fields_rec__station__station_record__altitude__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Station__station_record__T5s.t5s = a.rec__station__station_record__altitude
  
  meta model_projection function __split_fields_rec__station__station_record__altitude__projection
  
  meta inline:no function __split_fields_rec__station__station_record__altitude__projection
  
  function [model_trace:.1652] [name:Modules] 
    __split_fields_rec__station__station_record__modules__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Array__Int__Station__module.map = a.rec__station__station_record__modules
  
  meta model_projection function __split_fields_rec__station__station_record__modules__projection
  
  meta inline:no function __split_fields_rec__station__station_record__modules__projection
  
  function [name:Top_Module_Index] [model_trace:.1656] 
    __split_fields_rec__station__station_record__top_module_index__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Station__station_record__T6s.t6s = a.rec__station__station_record__top_module_index
  
  meta model_projection function __split_fields_rec__station__station_record__top_module_index__projection
  
  meta inline:no function __split_fields_rec__station__station_record__top_module_index__projection
  
  function [name:Crew] [model_trace:.1665] 
    __split_fields_rec__station__station_record__crew__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Array__Int__Station__crew_record.map = a.rec__station__station_record__crew
  
  meta model_projection function __split_fields_rec__station__station_record__crew__projection
  
  meta inline:no function __split_fields_rec__station__station_record__crew__projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__2__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__2__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__2__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields }
  
  function   __rep___split_fields__2__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__2__projection
  
  meta inline:no function __rep___split_fields__2__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   station__station_record__door1__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__station__station_record__door1_ (a : __rep) requires
    { (station__station_record__door1__pred a) } ensures 
    { (result = a.__split_fields.rec__station__station_record__door1) }
    returns Station__airlock_door.airlock_door
  
  function   station__station_record__door2__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__station__station_record__door2_ (a : __rep) requires
    { (station__station_record__door2__pred a) } ensures 
    { (result = a.__split_fields.rec__station__station_record__door2) }
    returns Station__airlock_door.airlock_door
  
  function   station__station_record__altitude__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__station__station_record__altitude_ (a : __rep) requires
    { (station__station_record__altitude__pred a) } ensures 
    { (result = a.__split_fields.rec__station__station_record__altitude) }
    returns Station__station_record__T5s.t5s
  
  function   station__station_record__modules__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__station__station_record__modules_ (a : __rep) requires
    { (station__station_record__modules__pred a) } ensures 
    { (result = a.__split_fields.rec__station__station_record__modules) }
    returns Array__Int__Station__module.map
  
  function   station__station_record__top_module_index__pred (a : __rep)
    requires { True } ensures  { True } returns  = True
  
  function   rec__station__station_record__top_module_index_ (a : __rep)
    requires { (station__station_record__top_module_index__pred a) } ensures 
    { (result
         = a.__split_fields.rec__station__station_record__top_module_index) }
    returns Station__station_record__T6s.t6s
  
  function   station__station_record__crew__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__station__station_record__crew_ (a : __rep) requires
    { (station__station_record__crew__pred a) } ensures 
    { (result = a.__split_fields.rec__station__station_record__crew) }
    returns Array__Int__Station__crew_record.map
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           (((Station__airlock_door__rep.to_rep
                a.__split_fields.rec__station__station_record__door1)
               = (Station__airlock_door__rep.to_rep
                    b.__split_fields.rec__station__station_record__door1)) /\
              ((Station__airlock_door__rep.to_rep
                  a.__split_fields.rec__station__station_record__door2)
                 = (Station__airlock_door__rep.to_rep
                      b.__split_fields.rec__station__station_record__door2))
              /\
              ((Station__station_record__T5s__rep.to_rep
                  a.__split_fields.rec__station__station_record__altitude)
                 = (Station__station_record__T5s__rep.to_rep
                      b.__split_fields.rec__station__station_record__altitude))
              /\
              (Station__module_array.bool_eq
                 a.__split_fields.rec__station__station_record__modules
                 b.__split_fields.rec__station__station_record__modules) /\
              ((Station__station_record__T6s__rep.to_rep
                  a.__split_fields.rec__station__station_record__top_module_index)
                 = (Station__station_record__T6s__rep.to_rep
                      b.__split_fields.rec__station__station_record__top_module_index))
              /\
              (Station__crew_array.bool_eq
                 a.__split_fields.rec__station__station_record__crew
                 b.__split_fields.rec__station__station_record__crew))
           then True  else False)

end

(* Module for axiomatizing type "station_record" defined at station.ads:27, created in Gnat2Why.Types.Translate_Type *)
module Station__station_record
  
  use export Station__station_record__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type station_record  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   station__station_record__door1__first__bit () requires {  }
    ensures  {  } returns int
  
  function   station__station_record__door1__last__bit () requires {  }
    ensures  {  } returns int
  
  function   station__station_record__door1__position () requires {  }
    ensures  {  } returns int
  
  axiom station__station_record__door1__first__bit_axiom : ((station__station_record__door1__first__bit
                                                               ) >= 0)
  
  axiom station__station_record__door1__last__bit_axiom : ((station__station_record__door1__last__bit
                                                              )
                                                             > (station__station_record__door1__first__bit
                                                                  ))
  
  axiom station__station_record__door1__position_axiom : ((station__station_record__door1__position
                                                             ) >= 0)
  
  function   station__station_record__door2__first__bit () requires {  }
    ensures  {  } returns int
  
  function   station__station_record__door2__last__bit () requires {  }
    ensures  {  } returns int
  
  function   station__station_record__door2__position () requires {  }
    ensures  {  } returns int
  
  axiom station__station_record__door2__first__bit_axiom : ((station__station_record__door2__first__bit
                                                               ) >= 0)
  
  axiom station__station_record__door2__last__bit_axiom : ((station__station_record__door2__last__bit
                                                              )
                                                             > (station__station_record__door2__first__bit
                                                                  ))
  
  axiom station__station_record__door2__position_axiom : ((station__station_record__door2__position
                                                             ) >= 0)
  
  function   station__station_record__altitude__first__bit () requires {  }
    ensures  {  } returns int
  
  function   station__station_record__altitude__last__bit () requires {  }
    ensures  {  } returns int
  
  function   station__station_record__altitude__position () requires {  }
    ensures  {  } returns int
  
  axiom station__station_record__altitude__first__bit_axiom : ((station__station_record__altitude__first__bit
                                                                  ) >= 0)
  
  axiom station__station_record__altitude__last__bit_axiom : ((station__station_record__altitude__last__bit
                                                                 )
                                                                > (station__station_record__altitude__first__bit
                                                                    ))
  
  axiom station__station_record__altitude__position_axiom : ((station__station_record__altitude__position
                                                                ) >= 0)
  
  function   station__station_record__modules__first__bit () requires {  }
    ensures  {  } returns int
  
  function   station__station_record__modules__last__bit () requires {  }
    ensures  {  } returns int
  
  function   station__station_record__modules__position () requires {  }
    ensures  {  } returns int
  
  axiom station__station_record__modules__first__bit_axiom : ((station__station_record__modules__first__bit
                                                                 ) >= 0)
  
  axiom station__station_record__modules__last__bit_axiom : ((station__station_record__modules__last__bit
                                                                )
                                                               > (station__station_record__modules__first__bit
                                                                    ))
  
  axiom station__station_record__modules__position_axiom : ((station__station_record__modules__position
                                                               ) >= 0)
  
  function   station__station_record__top_module_index__first__bit ()
    requires {  } ensures  {  } returns int
  
  function   station__station_record__top_module_index__last__bit () requires
    {  } ensures  {  } returns int
  
  function   station__station_record__top_module_index__position () requires
    {  } ensures  {  } returns int
  
  axiom station__station_record__top_module_index__first__bit_axiom : 
  ((station__station_record__top_module_index__first__bit ) >= 0)
  
  axiom station__station_record__top_module_index__last__bit_axiom : 
  ((station__station_record__top_module_index__last__bit )
     > (station__station_record__top_module_index__first__bit ))
  
  axiom station__station_record__top_module_index__position_axiom : ((station__station_record__top_module_index__position
                                                                    ) >= 0)
  
  function   station__station_record__crew__first__bit () requires {  }
    ensures  {  } returns int
  
  function   station__station_record__crew__last__bit () requires {  }
    ensures  {  } returns int
  
  function   station__station_record__crew__position () requires {  }
    ensures  {  } returns int
  
  axiom station__station_record__crew__first__bit_axiom : ((station__station_record__crew__first__bit
                                                              ) >= 0)
  
  axiom station__station_record__crew__last__bit_axiom : ((station__station_record__crew__last__bit
                                                             )
                                                            > (station__station_record__crew__first__bit
                                                                 ))
  
  axiom station__station_record__crew__position_axiom : ((station__station_record__crew__position
                                                            ) >= 0)
  
  function   user_eq (a : station_record b : station_record) requires
    { True } ensures  { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns station_record
  
  type station_record__ref  = { mutable station_record__content : station_record }
  
  function   station_record__ref_station_record__content__projection
    (a : station_record__ref) requires {  } ensures  {  } returns
    station_record = a.station_record__content
  
  meta model_projection function station_record__ref_station_record__content__projection
  
  meta inline:no function station_record__ref_station_record__content__projection
  
  function   station_record__havoc (x : station_record__ref) requires {  }
    ensures  {  } returns unit

end

(* Module for defining a ref holding the value of variable "s" defined at station.ads:36, created in Gnat2Why.Decls.Translate_Variable *)
module Station__s
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Station__station_record
  
  val s__split_fields [model_projected] [model_trace:1671]
  [name:S] [sloc:station.ads:36]: Station__station_record.__split_fields

end

(* Module giving axioms for type "station_record" defined at station.ads:27, created in Gnat2Why.Types.Generate_Type_Completion *)
module Station__station_record___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Station__station_record
  use        Station__airlock_door
  use        Station__airlock_door__rep
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_232) : Station__station_record.station_record
    ([mlw:proxy_symbol] [introduced] temp___is_init_228) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_229) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_230) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_231) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_235) : Station__station_record.station_record
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_236) : bool)
    requires { True } ensures  { True } returns
     = ((if
        (Station__station_record.station__station_record__door1__pred
           ([mlw:proxy_symbol] [introduced] temp___expr_235))
        then
        (( (Station__airlock_door__rep.to_rep ([mlw:proxy_symbol]
              [introduced] temp___expr_235).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__door1))
           = ( 1))
        ) /\
          (if
          (Station__station_record.station__station_record__door2__pred
             ([mlw:proxy_symbol] [introduced] temp___expr_235))
          then
          (( (Station__airlock_door__rep.to_rep ([mlw:proxy_symbol]
                [introduced] temp___expr_235).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__door2))
             = ( 1))
          ))

end

(* Module for possibly declaring a logic function for "sealedinvariant" defined at station.ads:43, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Station__sealedinvariant
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Station__station_record
  
  function   sealedinvariant
    (Station__s___s__split_fields___ : Station__station_record.__split_fields)
    requires { True } ensures  { True } returns bool
  
  function   sealedinvariant__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_163) : bool
    Station__s___s__split_fields___ : Station__station_record.__split_fields)
    requires { True } ensures  { True } returns bool

end

(* Module giving a program function and a defining axiom for the expression function "sealedinvariant" defined at station.ads:43, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Station__sealedinvariant___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Station__s
  use        Station__station_record
  use        Station__station_record___axiom
  use        Station__sealedinvariant
  use        Station__airlock_door
  use        Station__airlock_door__rep
  
  function   sealedinvariant (__void_param : unit) requires { True } ensures 
    { ((result
          = (Station__sealedinvariant.sealedinvariant
               !Station__s.s__split_fields)) /\
         (Station__sealedinvariant.sealedinvariant__function_guard result
            !Station__s.s__split_fields) /\
         (result
            = (((((Station__airlock_door__rep.to_rep
                     ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__door1)
                    = 0) /\
                   ((Station__airlock_door__rep.to_rep
                       ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__door2)
                      = 1)) \/
                  (((Station__airlock_door__rep.to_rep
                       ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__door1)
                      = 1) /\
                     ((Station__airlock_door__rep.to_rep
                         ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__door2)
                        = 0))) \/
                 (((Station__airlock_door__rep.to_rep
                      ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__door1)
                     = 1) /\
                    ((Station__airlock_door__rep.to_rep
                        ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__door2)
                       = 1))))) } returns bool
  
  axiom sealedinvariant__post_axiom : --pp_universal_quantif NOT IMPLEMENTED
  
  axiom sealedinvariant__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for possibly declaring a logic function for "altitudeinvariant" defined at station.ads:47, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Station__altitudeinvariant
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Station__station_record
  
  function   altitudeinvariant
    (Station__s___s__split_fields___ : Station__station_record.__split_fields)
    requires { True } ensures  { True } returns bool
  
  function   altitudeinvariant__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_164) : bool
    Station__s___s__split_fields___ : Station__station_record.__split_fields)
    requires { True } ensures  { True } returns bool

end

(* Module giving a program function and a defining axiom for the expression function "altitudeinvariant" defined at station.ads:47, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Station__altitudeinvariant___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Station__s
  use        Station__station_record
  use        Station__station_record___axiom
  use        Station__altitudeinvariant
  use        Station__station_record__T5s
  use        Station__station_record__T5s__rep
  
  function   altitudeinvariant (__void_param : unit) requires { True }
    ensures 
    { ((result
          = (Station__altitudeinvariant.altitudeinvariant
               !Station__s.s__split_fields)) /\
         (Station__altitudeinvariant.altitudeinvariant__function_guard result
            !Station__s.s__split_fields) /\
         (result
            = (((Station__station_record__T5s__rep.to_rep
                   ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__altitude)
                  >= 820000) /\
                 ((Station__station_record__T5s__rep.to_rep
                     ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__altitude)
                    <= 920000)))) } returns bool
  
  axiom altitudeinvariant__post_axiom : --pp_universal_quantif NOT IMPLEMENTED
  
  axiom altitudeinvariant__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module declaring the external object "ada___ada__text_io__file_system," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__file_system
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val file_system  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__standard_in," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__standard_in
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val standard_in  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__standard_out," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__standard_out
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val standard_out  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__standard_err," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__standard_err
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val standard_err  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__current_in," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__current_in
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val current_in  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__current_out," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__current_out
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val current_out  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__text_io__current_err," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__text_io__current_err
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val current_err  : _gnatprove_standard.Main.__private

end

(* Module declaring the external object "ada___ada__real_time__clock_time," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada___ada__real_time__clock_time
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val clock_time  : _gnatprove_standard.Main.__private

end

(* Module for declaring a program function (and possibly an axiom) for "open_door" defined at station.ads:51, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Station__open_door___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Station__s
  use        Station__station_record
  use        Station__station_record___axiom
  use        Station__sealedinvariant
  use        Station__altitudeinvariant
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__real_time__clock_time
  
  function   open_door
    (s__split_fields : Station__station_record.__split_fields__ref
    airlock_number : int) requires
    { (([GP_Pretty_Ada:1799] ((epsilon ([mlw:proxy_symbol]
                              [introduced] temp___result_256) : bool {
                              ((([mlw:proxy_symbol]
                                  [introduced] temp___result_256)
                                  = (Station__sealedinvariant.sealedinvariant
                                       !Station__s.s__split_fields)) /\
                                 (Station__sealedinvariant.sealedinvariant__function_guard
                                    ([mlw:proxy_symbol]
                                    [introduced] temp___result_256)
                                    !Station__s.s__split_fields))}) = True))
         /\
         ([GP_Pretty_Ada:1800] ((epsilon ([mlw:proxy_symbol]
                                [introduced] temp___result_257) : bool {
                                ((([mlw:proxy_symbol]
                                    [introduced] temp___result_257)
                                    = (Station__altitudeinvariant.altitudeinvariant
                                         !Station__s.s__split_fields)) /\
                                   (Station__altitudeinvariant.altitudeinvariant__function_guard
                                      ([mlw:proxy_symbol]
                                      [introduced] temp___result_257)
                                      !Station__s.s__split_fields))}) = True))) }
    ensures 
    { ((([GP_Pretty_Ada:1805] ((epsilon ([mlw:proxy_symbol]
                               [introduced] temp___result_258) : bool {
                               ((([mlw:proxy_symbol]
                                   [introduced] temp___result_258)
                                   = (Station__sealedinvariant.sealedinvariant
                                        !Station__s.s__split_fields)) /\
                                  (Station__sealedinvariant.sealedinvariant__function_guard
                                     ([mlw:proxy_symbol]
                                     [introduced] temp___result_258)
                                     !Station__s.s__split_fields))}) = True))
          /\
          ([GP_Pretty_Ada:1806] ((epsilon ([mlw:proxy_symbol]
                                 [introduced] temp___result_259) : bool {
                                 ((([mlw:proxy_symbol]
                                     [introduced] temp___result_259)
                                     = (Station__altitudeinvariant.altitudeinvariant
                                          !Station__s.s__split_fields)) /\
                                    (Station__altitudeinvariant.altitudeinvariant__function_guard
                                       ([mlw:proxy_symbol]
                                       [introduced] temp___result_259)
                                       !Station__s.s__split_fields))}) = True)))
         /\
         (Station__station_record___axiom.dynamic_invariant
            --pp_record_aggregate NOT IMPLEMENTED True True True True)) }
    returns unit

end

(* Module for declaring a program function (and possibly an axiom) for "seal_airlock" defined at station.ads:56, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Station__seal_airlock___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Station__s
  use        Station__station_record
  use        Station__station_record___axiom
  use        Station__sealedinvariant
  use        Station__altitudeinvariant
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__real_time__clock_time
  
  function   seal_airlock
    (s__split_fields : Station__station_record.__split_fields__ref) requires
    { (([GP_Pretty_Ada:1818] ((epsilon ([mlw:proxy_symbol]
                              [introduced] temp___result_266) : bool {
                              ((([mlw:proxy_symbol]
                                  [introduced] temp___result_266)
                                  = (Station__sealedinvariant.sealedinvariant
                                       !Station__s.s__split_fields)) /\
                                 (Station__sealedinvariant.sealedinvariant__function_guard
                                    ([mlw:proxy_symbol]
                                    [introduced] temp___result_266)
                                    !Station__s.s__split_fields))}) = True))
         /\
         ([GP_Pretty_Ada:1819] ((epsilon ([mlw:proxy_symbol]
                                [introduced] temp___result_267) : bool {
                                ((([mlw:proxy_symbol]
                                    [introduced] temp___result_267)
                                    = (Station__altitudeinvariant.altitudeinvariant
                                         !Station__s.s__split_fields)) /\
                                   (Station__altitudeinvariant.altitudeinvariant__function_guard
                                      ([mlw:proxy_symbol]
                                      [introduced] temp___result_267)
                                      !Station__s.s__split_fields))}) = True))) }
    ensures 
    { ((([GP_Pretty_Ada:1824] ((epsilon ([mlw:proxy_symbol]
                               [introduced] temp___result_268) : bool {
                               ((([mlw:proxy_symbol]
                                   [introduced] temp___result_268)
                                   = (Station__sealedinvariant.sealedinvariant
                                        !Station__s.s__split_fields)) /\
                                  (Station__sealedinvariant.sealedinvariant__function_guard
                                     ([mlw:proxy_symbol]
                                     [introduced] temp___result_268)
                                     !Station__s.s__split_fields))}) = True))
          /\
          ([GP_Pretty_Ada:1825] ((epsilon ([mlw:proxy_symbol]
                                 [introduced] temp___result_269) : bool {
                                 ((([mlw:proxy_symbol]
                                     [introduced] temp___result_269)
                                     = (Station__altitudeinvariant.altitudeinvariant
                                          !Station__s.s__split_fields)) /\
                                    (Station__altitudeinvariant.altitudeinvariant__function_guard
                                       ([mlw:proxy_symbol]
                                       [introduced] temp___result_269)
                                       !Station__s.s__split_fields))}) = True)))
         /\
         (Station__station_record___axiom.dynamic_invariant
            --pp_record_aggregate NOT IMPLEMENTED True True True True)) }
    returns unit

end

(* Module for defining a ref holding the value of variable "s" defined at station.ads:77, created in Gnat2Why.Decls.Translate_Variable *)
module Station__attempt_spacewalk__s
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Station__station_record
  
  val s__split_fields [model_projected] [model_trace:1993]
  [name:S] [sloc:station.ads:77]: Station__station_record.__split_fields

end

(* Module for defining the constant "cm" defined at station.ads:77, created in Gnat2Why.Decls.Translate_Constant *)
module Station__attempt_spacewalk__cm
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  function [name:CM] [model_trace:1996] [sloc:station.ads:77] cm () requires
    {  } ensures  {  } returns int

end

(* Module for possibly declaring a logic function for "line_length" defined at a-textio.ads:243, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada___ada__text_io__line_length__2
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  
  function   line_length
    (Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns int
  
  function   line_length__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_165) : int
    Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns bool

end

(* Module for possibly declaring a logic function for "page_length" defined at a-textio.ads:249, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada___ada__text_io__page_length__2
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  
  function   page_length
    (Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns int
  
  function   page_length__function_guard
    (([mlw:proxy_symbol] [introduced] temp___result_166) : int
    Ada___ada__text_io__file_system___file_system___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_in___standard_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_out___standard_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__standard_err___standard_err___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_in___current_in___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_out___current_out___ : _gnatprove_standard.Main.__private
    Ada___ada__text_io__current_err___current_err___ : _gnatprove_standard.Main.__private)
    requires { True } ensures  { True } returns bool

end

(* Module for declaring a program function (and possibly an axiom) for "put_line" defined at a-textio.ads:506, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada___ada__text_io__put_line__2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        Standard__string
  use        Ada___ada__text_io__line_length__2
  use        Ada___ada__text_io__page_length__2
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   put_line (item : Standard__string.string__) requires { True }
    ensures 
    { (([GP_Pretty_Ada:4317] (--pp_tagged NOT IMPLEMENTED
                                = (Ada___ada__text_io__line_length__2.line_length
                                     !Ada___ada__text_io__file_system.file_system
                                     !Ada___ada__text_io__standard_in.standard_in
                                     !Ada___ada__text_io__standard_out.standard_out
                                     !Ada___ada__text_io__standard_err.standard_err
                                     !Ada___ada__text_io__current_in.current_in
                                     !Ada___ada__text_io__current_out.current_out
                                     !Ada___ada__text_io__current_err.current_err)))
         /\
         ([GP_Pretty_Ada:4323] (--pp_tagged NOT IMPLEMENTED
                                  = (Ada___ada__text_io__page_length__2.page_length
                                       !Ada___ada__text_io__file_system.file_system
                                       !Ada___ada__text_io__standard_in.standard_in
                                       !Ada___ada__text_io__standard_out.standard_out
                                       !Ada___ada__text_io__standard_err.standard_err
                                       !Ada___ada__text_io__current_in.current_in
                                       !Ada___ada__text_io__current_out.current_out
                                       !Ada___ada__text_io__current_err.current_err)))) }
    returns unit

end

(* Module for defining a ref holding the value of variable "top_cm" defined at station.adb:132, created in Gnat2Why.Decls.Translate_Variable *)
module Station__attempt_spacewalk__top_cm
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val top_cm [model_projected] [model_trace:1218]
  [name:Top_CM] [sloc:station.adb:132]: int

end

(* Module for defining a ref holding the value of variable "bottom_cm" defined at station.adb:133, created in Gnat2Why.Decls.Translate_Variable *)
module Station__attempt_spacewalk__bottom_cm
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val bottom_cm [model_trace:1223] [model_projected]
  [name:Bottom_CM] [sloc:station.adb:133]: int

end

(* Module for defining a ref holding the value of variable "i" defined at station.adb:138, created in Gnat2Why.Decls.Translate_Variable *)
module Station__attempt_spacewalk__L_3__i
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val i [model_trace:1231] [name:i]
  [model_projected] [sloc:station.adb:138]: int

end

(* Module for defining a ref holding the value of variable "i" defined at station.adb:146, created in Gnat2Why.Decls.Translate_Variable *)
module Station__attempt_spacewalk__L_4__i
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val i [name:i] [model_projected]
  [model_trace:1253] [sloc:station.adb:146]: int

end

(* Module for defining a ref holding the value of variable "i" defined at station.adb:164, created in Gnat2Why.Decls.Translate_Variable *)
module Station__attempt_spacewalk__L_5__i
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  val i [name:i] [model_projected]
  [model_trace:1323] [sloc:station.adb:164]: int

end

(* Module for axiomatizing type "Tcrew_arrayD1" defined at station.ads:24, created in Gnat2Why.Types.Translate_Type *)
module Station__Tcrew_arrayD1
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type tcrew_arrayD1  = <range 1 3>
  
  function   first () requires { True } ensures  { True } returns int = 1
  
  function   last () requires { True } ensures  { True } returns int = 3
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = tcrew_arrayD1,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type tcrew_arrayD1__ref  = { mutable tcrew_arrayD1__content : tcrew_arrayD1 }
  
  function   tcrew_arrayD1__ref_tcrew_arrayD1__content__projection
    (a : tcrew_arrayD1__ref) requires {  } ensures  {  } returns
    tcrew_arrayD1 = a.tcrew_arrayD1__content
  
  meta model_projection function tcrew_arrayD1__ref_tcrew_arrayD1__content__projection
  
  meta inline:no function tcrew_arrayD1__ref_tcrew_arrayD1__content__projection
  
  function   tcrew_arrayD1__havoc (x : tcrew_arrayD1__ref) requires {  }
    ensures  {  } returns unit

end

(* Module for defining the loop exit exception for the loop "L_3" defined at station.adb:138, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Station__attempt_spacewalk__L_3
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  --pp_exception_declaration NOT IMPLEMENTED

end

(* Module for defining the loop exit exception for the loop "L_4" defined at station.adb:146, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Station__attempt_spacewalk__L_4
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  --pp_exception_declaration NOT IMPLEMENTED

end

(* Module for defining the loop exit exception for the loop "L_5" defined at station.adb:164, created in Gnat2Why.Decls.Translate_Loop_Entity *)
module Station__attempt_spacewalk__L_5
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  --pp_exception_declaration NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at station.adb:136, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_533
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_533 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_533__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at station.adb:140, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_537
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_537 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_537__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at station.adb:148, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_542
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_542 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_542__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at station.adb:155, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_545
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_545 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_545__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at station.adb:157, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_549
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_549 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_549__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at station.adb:183, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_591
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_591 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_591__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at station.adb:183, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_593
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_593 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_593__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at station.adb:186, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_601
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_601 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_601__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at station.adb:186, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_603
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_603 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_603__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at station.adb:189, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_611
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_611 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_611__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at station.adb:193, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_614
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_614 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_614__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at station.adb:194, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_618
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_618 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_618__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at station.adb:198, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_621
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_621 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_621__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at station.adb:199, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_625
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_625 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_625__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for defining a value for string literal  defined at station.adb:202, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_628
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  use        Standard__character__rep
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  
  function   temp___String_Literal_628 (__void_param : unit) requires
    { True } ensures  { True } returns Array__Int__Standard__character.map
  
  axiom temp___String_Literal_628__def_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving axioms for type "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__positive
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_53) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_49) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_50) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_51) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_52) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_49) = True) \/
          (Standard__positive.first <= Standard__positive.last))
       then
       (Standard__positive.dynamic_property Standard__positive.first
          Standard__positive.last ([mlw:proxy_symbol]
          [introduced] temp___expr_53))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_54) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_55) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__character
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_81) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_77) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_78) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_79) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_80) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_77) = True) \/
          (Standard__character.first <= Standard__character.last))
       then
       (Standard__character.dynamic_property Standard__character.first
          Standard__character.last ([mlw:proxy_symbol]
          [introduced] temp___expr_81))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_82) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_83) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__positive
  use        Standard__string
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_103) : Standard__string.string__
    ([mlw:proxy_symbol] [introduced] temp___is_init_99) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_100) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_101) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_102) : bool) requires
    { True } ensures  { True } returns
     = (if ([mlw:proxy_symbol] [introduced] temp___skip_constant_100) then
       True  else
       (Standard__string.dynamic_property Standard__positive.first
          Standard__positive.last
          (Standard__string.first ([mlw:proxy_symbol]
             [introduced] temp___expr_103))
          (Standard__string.last ([mlw:proxy_symbol]
             [introduced] temp___expr_103))))

end

(* Module giving an empty axiom for the entity "top_cm" defined at station.adb:132, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Station__attempt_spacewalk__top_cm___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "bottom_cm" defined at station.adb:133, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Station__attempt_spacewalk__bottom_cm___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "i" defined at station.adb:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Station__attempt_spacewalk__L_3__i___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "i" defined at station.adb:146, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Station__attempt_spacewalk__L_4__i___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "i" defined at station.adb:164, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Station__attempt_spacewalk__L_5__i___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "L_3" defined at station.adb:138, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Station__attempt_spacewalk__L_3___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "L_4" defined at station.adb:146, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Station__attempt_spacewalk__L_4___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "L_5" defined at station.adb:164, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Station__attempt_spacewalk__L_5___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "airlock_door" defined at station.ads:9, created in Gnat2Why.Types.Generate_Type_Completion *)
module Station__airlock_door___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Station__airlock_door
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_171) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_167) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_168) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_169) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_170) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_167) = True) \/
          (Station__airlock_door.first <= Station__airlock_door.last))
       then
       (Station__airlock_door.dynamic_property Station__airlock_door.first
          Station__airlock_door.last ([mlw:proxy_symbol]
          [introduced] temp___expr_171))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_172) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_173) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "module" defined at station.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Station__module___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Station__module
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_178) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_174) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_175) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_176) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_177) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_174) = True) \/
          (Station__module.first <= Station__module.last))
       then
       (Station__module.dynamic_property Station__module.first
          Station__module.last ([mlw:proxy_symbol]
          [introduced] temp___expr_178))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_179) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_180) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "module_array" defined at station.ads:13, created in Gnat2Why.Types.Generate_Type_Completion *)
module Station__module_array___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Station__module
  use        Array__Int__Station__module
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_185) : Array__Int__Station__module.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_181) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_182) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_183) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_184) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_187) : Array__Int__Station__module.map
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_188) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "crewmember" defined at station.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Station__crewmember___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Station__crewmember
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_195) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_191) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_192) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_193) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_194) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_191) = True) \/
          (Station__crewmember.first <= Station__crewmember.last))
       then
       (Station__crewmember.dynamic_property Station__crewmember.first
          Station__crewmember.last ([mlw:proxy_symbol]
          [introduced] temp___expr_195))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_196) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_197) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "crewmemberstatus" defined at station.ads:16, created in Gnat2Why.Types.Generate_Type_Completion *)
module Station__crewmemberstatus___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Station__crewmemberstatus
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_202) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_198) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_199) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_200) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_201) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_198) = True) \/
          (Station__crewmemberstatus.first <= Station__crewmemberstatus.last))
       then
       (Station__crewmemberstatus.dynamic_property
          Station__crewmemberstatus.first Station__crewmemberstatus.last
          ([mlw:proxy_symbol] [introduced] temp___expr_202))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_203) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_204) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "crew_record" defined at station.ads:18, created in Gnat2Why.Types.Generate_Type_Completion *)
module Station__crew_record___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Station__crew_record
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_209) : Station__crew_record.crew_record
    ([mlw:proxy_symbol] [introduced] temp___is_init_205) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_206) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_207) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_208) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_210) : Station__crew_record.crew_record
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_211) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "crew_array" defined at station.ads:24, created in Gnat2Why.Types.Generate_Type_Completion *)
module Station__crew_array___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_219) : Array__Int__Station__crew_record.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_215) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_216) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_217) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_218) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_221) : Array__Int__Station__crew_record.map
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_222) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving an empty axiom for the entity "s" defined at station.ads:36, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Station__s___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "s" defined at station.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Station__attempt_spacewalk__s___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving an empty axiom for the entity "cm" defined at station.ads:77, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Station__attempt_spacewalk__cm___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for axiomatizing type "count" defined at a-textio.ads:78, created in Gnat2Why.Types.Translate_Type *)
module Ada___ada__text_io__count
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type count  = <range 0 2147483647>
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = count,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type count__ref  = { mutable count__content : count }
  
  function   count__ref_count__content__projection (a : count__ref) requires
    {  } ensures  {  } returns count = a.count__content
  
  meta model_projection function count__ref_count__content__projection
  
  meta inline:no function count__ref_count__content__projection
  
  function   count__havoc (x : count__ref) requires {  } ensures  {  }
    returns unit

end

(* Module giving axioms for type "count" defined at a-textio.ads:78, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada___ada__text_io__count___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Ada___ada__text_io__count
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_324) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_320) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_321) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_322) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_323) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_320) = True) \/
          (Ada___ada__text_io__count.first <= Ada___ada__text_io__count.last))
       then
       (Ada___ada__text_io__count.dynamic_property
          Ada___ada__text_io__count.first Ada___ada__text_io__count.last
          ([mlw:proxy_symbol] [introduced] temp___expr_324))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_325) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_326) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module for declaring a program function (and possibly an axiom) for "line_length" defined at a-textio.ads:243, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada___ada__text_io__line_length__2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        Ada___ada__text_io__line_length__2
  use        Ada___ada__text_io__count___axiom
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   line_length (__void_param : unit) requires { True } ensures 
    { ((result
          = (Ada___ada__text_io__line_length__2.line_length
               !Ada___ada__text_io__file_system.file_system
               !Ada___ada__text_io__standard_in.standard_in
               !Ada___ada__text_io__standard_out.standard_out
               !Ada___ada__text_io__standard_err.standard_err
               !Ada___ada__text_io__current_in.current_in
               !Ada___ada__text_io__current_out.current_out
               !Ada___ada__text_io__current_err.current_err)) /\ True /\
         (Ada___ada__text_io__count___axiom.dynamic_invariant result True
            False True True)) } returns int
  
  axiom line_length__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module for declaring a program function (and possibly an axiom) for "page_length" defined at a-textio.ads:249, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada___ada__text_io__page_length__2___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        Ada___ada__text_io__page_length__2
  use        Ada___ada__text_io__count___axiom
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  use        Ada___ada__text_io__file_system
  use        Ada___ada__text_io__standard_in
  use        Ada___ada__text_io__standard_out
  use        Ada___ada__text_io__standard_err
  use        Ada___ada__text_io__current_in
  use        Ada___ada__text_io__current_out
  use        Ada___ada__text_io__current_err
  
  function   page_length (__void_param : unit) requires { True } ensures 
    { ((result
          = (Ada___ada__text_io__page_length__2.page_length
               !Ada___ada__text_io__file_system.file_system
               !Ada___ada__text_io__standard_in.standard_in
               !Ada___ada__text_io__standard_out.standard_out
               !Ada___ada__text_io__standard_err.standard_err
               !Ada___ada__text_io__current_in.current_in
               !Ada___ada__text_io__current_out.current_out
               !Ada___ada__text_io__current_err.current_err)) /\ True /\
         (Ada___ada__text_io__count___axiom.dynamic_invariant result True
            False True True)) } returns int
  
  axiom page_length__post_axiom : --pp_universal_quantif NOT IMPLEMENTED

end

(* Module giving axioms for type "Tcrew_arrayD1" defined at station.ads:24, created in Gnat2Why.Types.Generate_Type_Completion *)
module Station__Tcrew_arrayD1___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "T5s" defined at station.ads:30, created in Gnat2Why.Types.Generate_Type_Completion *)
module Station__station_record__T5s___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module giving axioms for type "T6s" defined at station.ads:32, created in Gnat2Why.Types.Generate_Type_Completion *)
module Station__station_record__T6s___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for checking contracts and absence of run-time errors in subprogram "attempt_spacewalk" defined at station.ads:77, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Station__attempt_spacewalk__subprogram_def
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.Main
  use        _gnatprove_standard.Integer
  use        _gnatprove_standard.Boolean
  use        Standard_String__Img
  use        Standard__integer___axiom
  use        Standard__positive
  use        Array__Int__Standard__character__Concat
  use        Standard__string
  use        Station__s
  use        Station__station_record
  use        Station__station_record___axiom
  use        Station__sealedinvariant
  use        Station__sealedinvariant___axiom
  use        Station__altitudeinvariant
  use        Station__altitudeinvariant___axiom
  use        Station__open_door___axiom
  use        Station__seal_airlock___axiom
  use        Station__attempt_spacewalk__s
  use        Station__attempt_spacewalk__cm
  use        Ada___ada__text_io__put_line__2___axiom
  use        Station__attempt_spacewalk__top_cm
  use        Station__attempt_spacewalk__bottom_cm
  use        Station__attempt_spacewalk__L_3__i
  use        Station__attempt_spacewalk__L_4__i
  use        Station__attempt_spacewalk__L_5__i
  use        Station__module
  use        Station__module__rep
  use        Array__Int__Station__module
  use        Station__crewmember
  use        Station__crewmember__rep
  use        Station__crewmemberstatus
  use        Station__crewmemberstatus__rep
  use        Station__crew_record
  use        Station__Tcrew_arrayD1
  use        Array__Int__Station__crew_record
  use        Station__attempt_spacewalk__L_3
  use        Station__attempt_spacewalk__L_4
  use        Station__attempt_spacewalk__L_5
  use        Temp___String_Literal_533
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_537
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Station__module
  use        Temp___String_Literal_542
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Station__crew_record
  use        Temp___String_Literal_545
  use        Array__Int__Standard__character
  use        Array__Int__Station__crew_record
  use        Array__Int__Standard__character
  use        Temp___String_Literal_549
  use        Array__Int__Standard__character
  use        Array__Int__Station__crew_record
  use        Array__Int__Standard__character
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__module
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__module
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Temp___String_Literal_591
  use        Array__Int__Standard__character
  use        Array__Int__Station__crew_record
  use        Temp___String_Literal_593
  use        Array__Int__Standard__character
  use        Array__Int__Station__crew_record
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_601
  use        Array__Int__Standard__character
  use        Array__Int__Station__crew_record
  use        Temp___String_Literal_603
  use        Array__Int__Standard__character
  use        Array__Int__Station__crew_record
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_611
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_614
  use        Array__Int__Standard__character
  use        Array__Int__Station__crew_record
  use        Array__Int__Standard__character
  use        Temp___String_Literal_618
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_621
  use        Array__Int__Standard__character
  use        Array__Int__Station__crew_record
  use        Array__Int__Standard__character
  use        Temp___String_Literal_625
  use        Array__Int__Standard__character
  use        Array__Int__Standard__character
  use        Temp___String_Literal_628
  use        Array__Int__Standard__character
  use        Array__Int__Station__crew_record
  use        Array__Int__Standard__character
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Array__Int__Station__crew_record
  use        Standard__integer___axiom
  use        Standard__positive___axiom
  use        Standard__character___axiom
  use        Standard__string___axiom
  use        Standard__integer___axiom
  use        Station__attempt_spacewalk__top_cm___axiom
  use        Station__attempt_spacewalk__bottom_cm___axiom
  use        Station__attempt_spacewalk__L_3__i___axiom
  use        Station__attempt_spacewalk__L_4__i___axiom
  use        Station__attempt_spacewalk__L_5__i___axiom
  use        Station__attempt_spacewalk__L_3___axiom
  use        Station__attempt_spacewalk__L_4___axiom
  use        Station__attempt_spacewalk__L_5___axiom
  use        Station__airlock_door___axiom
  use        Station__module___axiom
  use        Station__module_array___axiom
  use        Station__crewmember___axiom
  use        Station__crewmemberstatus___axiom
  use        Station__crew_record___axiom
  use        Station__crew_array___axiom
  use        Station__station_record___axiom
  use        Station__s___axiom
  use        Station__sealedinvariant___axiom
  use        Station__altitudeinvariant___axiom
  use        Station__open_door___axiom
  use        Station__seal_airlock___axiom
  use        Station__attempt_spacewalk__s___axiom
  use        Station__attempt_spacewalk__cm___axiom
  use        Ada___ada__text_io__count___axiom
  use        Ada___ada__text_io__line_length__2___axiom
  use        Ada___ada__text_io__page_length__2___axiom
  use        Ada___ada__text_io__put_line__2___axiom
  use        Station__Tcrew_arrayD1___axiom
  use        Station__station_record__T5s___axiom
  use        Station__station_record__T6s___axiom
  
  function [GP_Subp:station.ads:77] [sloc:station.ads:77] def
    (__void_param : unit) requires { True } ensures 
    { ([sloc:station.ads:79] ([GP_Reason:VC_POSTCONDITION]
                             [GP_Sloc:station.ads:79:14] [GP_Id:44]
                             [comment:     Post => SealedInvariant and AltitudeInvariant;              ^ station.ads:79:14:VC_POSTCONDITION]
                             [model_vc_post]
                             [GP_Shape:pragargs__and] (([GP_Sloc:station.ads:79:14]
                                                       [GP_Pretty_Ada:2015] (
                                                       (epsilon ([mlw:proxy_symbol]
                                                       [introduced] temp___result_646) : bool {
                                                       ((([mlw:proxy_symbol]
                                                           [introduced] temp___result_646)
                                                           = (Station__sealedinvariant.sealedinvariant
                                                                !Station__s.s__split_fields))
                                                          /\
                                                          (Station__sealedinvariant.sealedinvariant__function_guard
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___result_646)
                                                             !Station__s.s__split_fields))})
                                                         = True)) /\
                                                         ([GP_Pretty_Ada:2016]
                                                         [GP_Sloc:station.ads:79:34] (
                                                         (epsilon ([mlw:proxy_symbol]
                                                         [introduced] temp___result_647) : bool {
                                                         ((([mlw:proxy_symbol]
                                                             [introduced] temp___result_647)
                                                             = (Station__altitudeinvariant.altitudeinvariant
                                                                  !Station__s.s__split_fields))
                                                            /\
                                                            (Station__altitudeinvariant.altitudeinvariant__function_guard
                                                               ([mlw:proxy_symbol]
                                                               [introduced] temp___result_647)
                                                               !Station__s.s__split_fields))})
                                                           = True))))) }
    returns
     = (* Assume dynamic invariants of inputs of the subprogram station.ads:77 *);
        assume
        { (Station__station_record___axiom.dynamic_invariant
             --pp_record_aggregate NOT IMPLEMENTED True False True True) };
        assume
        { (Station__station_record___axiom.dynamic_invariant
             --pp_record_aggregate NOT IMPLEMENTED True False True True) };
        assume
        { (Standard__integer___axiom.dynamic_invariant
             Station__attempt_spacewalk__cm.cm True False True True) };
        (* Assume moved pointers in outputs of the subprogram station.ads:77 *);
        (* Check for RTE in the Pre of the subprogram station.ads:77 *);
        abstract ensures
        { True } begin  (let _ =
                       (_gnatprove_standard.Boolean.andb
                          (_gnatprove_standard.Boolean.andb
                             (Station__sealedinvariant___axiom.sealedinvariant
                                ())
                             (Station__altitudeinvariant___axiom.altitudeinvariant
                                ())) (Station__attempt_spacewalk__cm.cm >= 1))
                       in ())  end;
        (* Assume Pre of the subprogram station.ads:77 *);
        assume
        { ((([GP_Pretty_Ada:2005] ((epsilon ([mlw:proxy_symbol]
                                   [introduced] temp___result_644) : bool {
                                   ((([mlw:proxy_symbol]
                                       [introduced] temp___result_644)
                                       = (Station__sealedinvariant.sealedinvariant
                                            !Station__s.s__split_fields)) /\
                                      (Station__sealedinvariant.sealedinvariant__function_guard
                                         ([mlw:proxy_symbol]
                                         [introduced] temp___result_644)
                                         !Station__s.s__split_fields))})
                                     = True)) /\
              ([GP_Pretty_Ada:2006] ((epsilon ([mlw:proxy_symbol]
                                     [introduced] temp___result_645) : bool {
                                     ((([mlw:proxy_symbol]
                                         [introduced] temp___result_645)
                                         = (Station__altitudeinvariant.altitudeinvariant
                                              !Station__s.s__split_fields))
                                        /\
                                        (Station__altitudeinvariant.altitudeinvariant__function_guard
                                           ([mlw:proxy_symbol]
                                           [introduced] temp___result_645)
                                           !Station__s.s__split_fields))})
                                       = True))) /\
             ([GP_Pretty_Ada:2011] (Station__attempt_spacewalk__cm.cm >= 1))) };
        (try
        ();
          ([sloc:station.adb:132] ( Station__attempt_spacewalk__top_cm.top_cm
          := ( 0));
          assume
          { (Standard__integer___axiom.dynamic_invariant
               !Station__attempt_spacewalk__top_cm.top_cm True False True
               True) });
          ([sloc:station.adb:133] (
          Station__attempt_spacewalk__bottom_cm.bottom_cm := ( 0));
          assume
          { (Standard__integer___axiom.dynamic_invariant
               !Station__attempt_spacewalk__bottom_cm.bottom_cm True False
               True True) });
          ([sloc:station.adb:138] ());
          ([sloc:station.adb:146] ());
          ([sloc:station.adb:164] ());
          ();
          ([GP_Sloc:station.adb:136:7] ([sloc:station.adb:136] ()));
          ([GP_Sloc:station.adb:136:7] ([sloc:station.adb:136] ( any
                                                                  --pp_effects NOT IMPLEMENTED
                                                                  pre {
                                                                  }
                                       post {} return unit);
          (Ada___ada__text_io__put_line__2___axiom.put_line
             (let ([mlw:proxy_symbol] [introduced] temp___534) =
             ( (Temp___String_Literal_533.temp___String_Literal_533 ())) in
             (Standard__string.of_array ([mlw:proxy_symbol]
                [introduced] temp___534) 1 0)));
          ()));
        ([GP_Sloc:station.adb:138:32] ([sloc:station.adb:138] (let ([mlw:proxy_symbol]
                                      [introduced] temp___535) = 1 in
                                      (let ([mlw:proxy_symbol]
                                      [introduced] temp___536) = 3 in
                                      (* Translation of an unrolled Ada loop from station.adb:138 *);
                                      (try
                                      (* Unrolling of the loop statements of loop station.adb:138 *);
                                        (
                                        Station__attempt_spacewalk__L_3__i.i
                                        :=
                                        1);
                                        ();
                                        ([GP_Sloc:station.adb:139:10] 
                                        ([sloc:station.adb:139] (if
                                                                ([sloc:station.adb:139] ([branch_id=1240]
                                                                _gnatprove_standard.Main.spark__branch
                                                                :=
                                                                ((Station__module__rep.to_rep
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___539)
                                                                    =
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__modules
                                                                    in
                                                                    (
                                                                    Array__Int__Station__module.get
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___539)
                                                                    !Station__attempt_spacewalk__L_3__i.i)))
                                                                   = 3)));
                                                                ([branch_id=1240] _gnatprove_standard.Main.spark__branch).bool__content
                                                                then
                                                                ();
                                                                ([GP_Sloc:station.adb:140:13] 
                                                                ([sloc:station.adb:140] ()));
                                                                ([GP_Sloc:station.adb:140:13] 
                                                                ([sloc:station.adb:140] (
                                                                 any
                                                                  --pp_effects NOT IMPLEMENTED
                                                                  pre {
                                                                  }
                                                                post {
                                                                } return
                                                                unit);
                                                                (Ada___ada__text_io__put_line__2___axiom.put_line
                                                                   (let ([mlw:proxy_symbol]
                                                                   [introduced] temp___538)
                                                                   =
                                                                   ( (
                                                                   Temp___String_Literal_537.temp___String_Literal_537
                                                                    ())) in
                                                                   (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___538)
                                                                    1 60)));
                                                                ()));
                                                                ([GP_Sloc:station.adb:141:13] 
                                                                ([sloc:station.adb:141] raise Return__exc))
                                         else ())));
                                      ( Station__attempt_spacewalk__L_3__i.i
                                      :=
                                      2);
                                      ();
                                      ([GP_Sloc:station.adb:139:10] ([sloc:station.adb:139] 
                                                                    (if
                                                                    ([sloc:station.adb:139] ([branch_id=1240]
                                                                    _gnatprove_standard.Main.spark__branch
                                                                    :=
                                                                    ((Station__module__rep.to_rep
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___539)
                                                                    =
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__modules
                                                                    in
                                                                    (Array__Int__Station__module.get
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___539)
                                                                    !Station__attempt_spacewalk__L_3__i.i)))
                                                                    = 3)));
                                                                    ([branch_id=1240] _gnatprove_standard.Main.spark__branch).bool__content
                                                                    then
                                                                    ();
                                                                    ([GP_Sloc:station.adb:140:13] 
                                                                    ([sloc:station.adb:140] ()));
                                                                    ([GP_Sloc:station.adb:140:13] 
                                                                    ([sloc:station.adb:140] (
                                                                     any
                                                                    --pp_effects NOT IMPLEMENTED
                                                                    pre {
                                                                    } post {
                                                                    } return
                                                                    unit);
                                                                    (
                                                                    Ada___ada__text_io__put_line__2___axiom.put_line
                                                                    (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___538)
                                                                    =
                                                                    ( (
                                                                    Temp___String_Literal_537.temp___String_Literal_537
                                                                    ())) in
                                                                    (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___538)
                                                                    1 60)));
                                                                    ()));
                                                                    ([GP_Sloc:station.adb:141:13] 
                                                                    ([sloc:station.adb:141] raise Return__exc))
                                                                     else 
                                                                    ())));
        ( Station__attempt_spacewalk__L_3__i.i :=
        3);
        ();
        ([GP_Sloc:station.adb:139:10] ([sloc:station.adb:139] (if
                                                              ([sloc:station.adb:139] ([branch_id=1240]
                                                              _gnatprove_standard.Main.spark__branch
                                                              :=
                                                              ((Station__module__rep.to_rep
                                                                  (let ([mlw:proxy_symbol]
                                                                  [introduced] temp___539)
                                                                  =
                                                                  ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__modules
                                                                  in
                                                                  (Array__Int__Station__module.get
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___539)
                                                                    !Station__attempt_spacewalk__L_3__i.i)))
                                                                 = 3)));
                                                              ([branch_id=1240] _gnatprove_standard.Main.spark__branch).bool__content
                                                              then
                                                              ();
                                                              ([GP_Sloc:station.adb:140:13] 
                                                              ([sloc:station.adb:140] ()));
                                                              ([GP_Sloc:station.adb:140:13] 
                                                              ([sloc:station.adb:140] (
                                                               any
                                                                --pp_effects NOT IMPLEMENTED
                                                                pre {
                                                                }
                                                              post {} return
                                                              unit);
                                                              (Ada___ada__text_io__put_line__2___axiom.put_line
                                                                 (let ([mlw:proxy_symbol]
                                                                 [introduced] temp___538)
                                                                 =
                                                                 ( (Temp___String_Literal_537.temp___String_Literal_537
                                                                    ())) in
                                                                 (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___538)
                                                                    1 60)));
                                                              ()));
                                                              ([GP_Sloc:station.adb:141:13] 
                                                              ([sloc:station.adb:141] raise Return__exc))
                                       else ()))) with
    | Station__attempt_spacewalk__L_3.L_3  -> ())))));
([GP_Sloc:station.adb:146:29] ([sloc:station.adb:146] (let ([mlw:proxy_symbol]
                              [introduced] temp___540) = 1 in
                              (let ([mlw:proxy_symbol]
                              [introduced] temp___541) = 3 in
                              (* Translation of an unrolled Ada loop from station.adb:146 *);
                              (try
                              (* Unrolling of the loop statements of loop station.adb:146 *);
                                ( Station__attempt_spacewalk__L_4__i.i :=
                                1);
                                ();
                                ([GP_Sloc:station.adb:147:10] ([sloc:station.adb:147] 
                                                              (if
                                                              ([sloc:station.adb:147] ([branch_id=1262]
                                                              _gnatprove_standard.Main.spark__branch
                                                              :=
                                                              ((Station__crewmemberstatus__rep.to_rep
                                                                  ( (let ([mlw:proxy_symbol]
                                                                  [introduced] temp___544)
                                                                  =
                                                                  ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                                                                  in
                                                                  (Array__Int__Station__crew_record.get
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___544)
                                                                    !Station__attempt_spacewalk__L_4__i.i))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__status)
                                                                 = 0)));
                                                              ([branch_id=1262] _gnatprove_standard.Main.spark__branch).bool__content
                                                              then
                                                              ();
                                                              ([GP_Sloc:station.adb:148:13] 
                                                              ([sloc:station.adb:148] ()));
                                                              ([GP_Sloc:station.adb:148:13] 
                                                              ([sloc:station.adb:148] (
                                                               any
                                                                --pp_effects NOT IMPLEMENTED
                                                                pre {
                                                                }
                                                              post {} return
                                                              unit);
                                                              (Ada___ada__text_io__put_line__2___axiom.put_line
                                                                 (let ([mlw:proxy_symbol]
                                                                 [introduced] temp___543)
                                                                 =
                                                                 ( (Temp___String_Literal_542.temp___String_Literal_542
                                                                    ())) in
                                                                 (Standard__string.of_array
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___543)
                                                                    1 72)));
                                                              ()));
                                                              ([GP_Sloc:station.adb:149:13] 
                                                              ([sloc:station.adb:149] raise Return__exc))
                                                               else ())));
                              ( Station__attempt_spacewalk__L_4__i.i :=
                              2);
                              ();
                              ([GP_Sloc:station.adb:147:10] ([sloc:station.adb:147] 
                                                            (if
                                                            ([sloc:station.adb:147] ([branch_id=1262]
                                                            _gnatprove_standard.Main.spark__branch
                                                            :=
                                                            ((Station__crewmemberstatus__rep.to_rep
                                                                ( (let ([mlw:proxy_symbol]
                                                                [introduced] temp___544)
                                                                =
                                                                ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                                                                in
                                                                (Array__Int__Station__crew_record.get
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___544)
                                                                   !Station__attempt_spacewalk__L_4__i.i))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__status)
                                                               = 0)));
                                                            ([branch_id=1262] _gnatprove_standard.Main.spark__branch).bool__content
                                                            then
                                                            ();
                                                            ([GP_Sloc:station.adb:148:13] 
                                                            ([sloc:station.adb:148] ()));
                                                            ([GP_Sloc:station.adb:148:13] 
                                                            ([sloc:station.adb:148] (
                                                             any
                                                              --pp_effects NOT IMPLEMENTED
                                                              pre {}
                                                            post {} return
                                                            unit);
                                                            (Ada___ada__text_io__put_line__2___axiom.put_line
                                                               (let ([mlw:proxy_symbol]
                                                               [introduced] temp___543)
                                                               =
                                                               ( (Temp___String_Literal_542.temp___String_Literal_542
                                                                    ())) in
                                                               (Standard__string.of_array
                                                                  ([mlw:proxy_symbol]
                                                                  [introduced] temp___543)
                                                                  1 72)));
                                                            ()));
                                                            ([GP_Sloc:station.adb:149:13] 
                                                            ([sloc:station.adb:149] raise Return__exc))
                                                             else ())));
( Station__attempt_spacewalk__L_4__i.i :=
3);
();
([GP_Sloc:station.adb:147:10] ([sloc:station.adb:147] (if
                                                      ([sloc:station.adb:147] ([branch_id=1262]
                                                      _gnatprove_standard.Main.spark__branch
                                                      :=
                                                      ((Station__crewmemberstatus__rep.to_rep
                                                          ( (let ([mlw:proxy_symbol]
                                                          [introduced] temp___544)
                                                          =
                                                          ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                                                          in
                                                          (Array__Int__Station__crew_record.get
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___544)
                                                             !Station__attempt_spacewalk__L_4__i.i))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__status)
                                                         = 0)));
                                                      ([branch_id=1262] _gnatprove_standard.Main.spark__branch).bool__content
                                                      then
                                                      ();
                                                      ([GP_Sloc:station.adb:148:13] 
                                                      ([sloc:station.adb:148] ()));
                                                      ([GP_Sloc:station.adb:148:13] 
                                                      ([sloc:station.adb:148] (
                                                       any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                                                      post {} return unit);
                                                      (Ada___ada__text_io__put_line__2___axiom.put_line
                                                         (let ([mlw:proxy_symbol]
                                                         [introduced] temp___543)
                                                         =
                                                         ( (Temp___String_Literal_542.temp___String_Literal_542
                                                              ())) in
                                                         (Standard__string.of_array
                                                            ([mlw:proxy_symbol]
                                                            [introduced] temp___543)
                                                            1 72)));
                                                      ()));
                                                      ([GP_Sloc:station.adb:149:13] 
                                                      ([sloc:station.adb:149] raise Return__exc))
                               else ()))) with
| Station__attempt_spacewalk__L_4.L_4  -> ())))));
([GP_Sloc:station.adb:154:7] ([sloc:station.adb:154] (if
                                                     ([sloc:station.adb:154] ([branch_id=1277]
                                                     _gnatprove_standard.Main.spark__branch
                                                     :=
                                                     ((Station__crewmemberstatus__rep.to_rep
                                                         ( (let ([mlw:proxy_symbol]
                                                         [introduced] temp___553)
                                                         =
                                                         ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                                                         in
                                                         (Array__Int__Station__crew_record.get
                                                            ([mlw:proxy_symbol]
                                                            [introduced] temp___553)
                                                            assert
                                                            { ([sloc:station.adb:154] 
                                                              ([comment:      if S.Crew(CM).Status /= Spacewalk then                 ^ station.adb:154:17:VC_INDEX_CHECK]
                                                              [GP_Id:18]
                                                              [vc:annotation]
                                                              [GP_Shape:if__cmp__selectcomp__ixdcomp]
                                                              [GP_Reason:VC_INDEX_CHECK]
                                                              [GP_Sloc:station.adb:154:17] (
                                                              (Station__Tcrew_arrayD1.first
                                                                 <= Station__attempt_spacewalk__cm.cm)
                                                                /\
                                                                (Station__attempt_spacewalk__cm.cm
                                                                   <= Station__Tcrew_arrayD1.last)))) };
                                                            Station__attempt_spacewalk__cm.cm))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__status)
                                                        <> 0)));
                                                     ([branch_id=1277] _gnatprove_standard.Main.spark__branch).bool__content
                                                     then
                                                     ();
                                                     ([GP_Sloc:station.adb:155:10] 
                                                     ([sloc:station.adb:155] ()));
                                                     ([GP_Sloc:station.adb:155:10] 
                                                     ([sloc:station.adb:155] (
                                                      any
                                                       --pp_effects NOT IMPLEMENTED
                                                       pre {}
                                                     post {} return unit);
                                                     (Ada___ada__text_io__put_line__2___axiom.put_line
                                                        (let ([mlw:proxy_symbol]
                                                        [introduced] temp___548)
                                                        =
                                                        (Temp___String_Literal_545.temp___String_Literal_545
                                                           ()) in
                                                        (let ([mlw:proxy_symbol]
                                                        [introduced] temp___547)
                                                        =
                                                        (Standard_String__Img.to_string
                                                           (Station__crewmember.attr__ATTRIBUTE_IMAGE
                                                              (Station__crewmember__rep.to_rep
                                                                 ( (let ([mlw:proxy_symbol]
                                                                 [introduced] temp___546)
                                                                 =
                                                                 ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                                                                 in
                                                                 (Array__Int__Station__crew_record.get
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___546)
                                                                    assert
                                                                    { ([sloc:station.adb:155] 
                                                                    ([GP_Shape:if__call_put_line__concat__image_ref__selectcomp__ixdcomp]
                                                                    [GP_Id:14]
                                                                    [vc:annotation]
                                                                    [GP_Reason:VC_INDEX_CHECK]
                                                                    [comment:         Put_Line(S.Crew(CM).Name'Image & " IS AVALIABLE FOR A SPACEWALK");                          ^ station.adb:155:26:VC_INDEX_CHECK]
                                                                    [GP_Sloc:station.adb:155:26] (
                                                                    (Station__Tcrew_arrayD1.first
                                                                    <= Station__attempt_spacewalk__cm.cm)
                                                                    /\
                                                                    (Station__attempt_spacewalk__cm.cm
                                                                    <= Station__Tcrew_arrayD1.last)))) };
                                                                    Station__attempt_spacewalk__cm.cm))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__name))
                                                           2040) in
                                                        (if
                                                        ((Standard__string.length
                                                            ([mlw:proxy_symbol]
                                                            [introduced] temp___547))
                                                           = 0)
                                                        then
                                                        (Standard__string.of_array
                                                           ([mlw:proxy_symbol]
                                                           [introduced] temp___548)
                                                           1 29)
                                                         else
                                                        (Standard__string.of_array
                                                           (Array__Int__Standard__character__Concat.concat
                                                              (Standard__string.to_array
                                                                 ([mlw:proxy_symbol]
                                                                 [introduced] temp___547))
                                                              (Standard__string.first
                                                                 ([mlw:proxy_symbol]
                                                                 [introduced] temp___547))
                                                              (Standard__string.last
                                                                 ([mlw:proxy_symbol]
                                                                 [introduced] temp___547))
                                                              ([mlw:proxy_symbol]
                                                              [introduced] temp___548)
                                                              1 29)
                                                           (Standard__string.first
                                                              ([mlw:proxy_symbol]
                                                              [introduced] temp___547))
                                                           ([sloc:station.adb:155] 
                                                           ([comment:         Put_Line(S.Crew(CM).Name'Image & " IS AVALIABLE FOR A SPACEWALK");                                         ^ station.adb:155:41:VC_RANGE_CHECK]
                                                           [GP_Id:15]
                                                           [GP_Sloc:station.adb:155:41]
                                                           [vc:annotation]
                                                           [GP_Reason:VC_RANGE_CHECK]
                                                           [GP_Shape:if__call_put_line__concat] (
                                                           Standard__positive.range_check_
                                                             (((Standard__string.first
                                                                  ([mlw:proxy_symbol]
                                                                  [introduced] temp___547))
                                                                 + ((_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___547))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___547)))
                                                                    + (
                                                                    _gnatprove_standard.Integer.length
                                                                    1 29)))
                                                                - 1)))))))));
                                                     ()))
                              else
                             ();
                             ([GP_Sloc:station.adb:157:10] ([sloc:station.adb:157] ()));
                             ([GP_Sloc:station.adb:157:10] ([sloc:station.adb:157] (
                                                            any
                                                             --pp_effects NOT IMPLEMENTED
                                                             pre {}
                                                           post {} return
                                                           unit);
                             (Ada___ada__text_io__put_line__2___axiom.put_line
                                (let ([mlw:proxy_symbol]
                                [introduced] temp___552) =
                                (Temp___String_Literal_549.temp___String_Literal_549
                                   ()) in (let ([mlw:proxy_symbol]
                                [introduced] temp___551) =
                                (Standard_String__Img.to_string
                                   (Station__crewmember.attr__ATTRIBUTE_IMAGE
                                      (Station__crewmember__rep.to_rep
                                         ( (let ([mlw:proxy_symbol]
                                         [introduced] temp___550) =
                                         ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                                         in
                                         (Array__Int__Station__crew_record.get
                                            ([mlw:proxy_symbol]
                                            [introduced] temp___550) assert
                                            { ([sloc:station.adb:157] 
                                              ([GP_Shape:if__call_put_line__concat__image_ref__selectcomp__ixdcomp]
                                              [comment:         Put_Line(S.Crew(CM).Name'Image & " IS ALREADY ON A SPACEWALK");                          ^ station.adb:157:26:VC_INDEX_CHECK]
                                              [GP_Id:16] [vc:annotation]
                                              [GP_Sloc:station.adb:157:26]
                                              [GP_Reason:VC_INDEX_CHECK] (
                                              (Station__Tcrew_arrayD1.first
                                                 <= Station__attempt_spacewalk__cm.cm)
                                                /\
                                                (Station__attempt_spacewalk__cm.cm
                                                   <= Station__Tcrew_arrayD1.last)))) };
                                            Station__attempt_spacewalk__cm.cm))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__name))
                                   2040) in
                                (if
                                ((Standard__string.length ([mlw:proxy_symbol]
                                    [introduced] temp___551)) = 0)
                                then
                                (Standard__string.of_array
                                   ([mlw:proxy_symbol]
                                   [introduced] temp___552) 1 26)
                                 else
                                (Standard__string.of_array
                                   (Array__Int__Standard__character__Concat.concat
                                      (Standard__string.to_array
                                         ([mlw:proxy_symbol]
                                         [introduced] temp___551))
                                      (Standard__string.first
                                         ([mlw:proxy_symbol]
                                         [introduced] temp___551))
                                      (Standard__string.last
                                         ([mlw:proxy_symbol]
                                         [introduced] temp___551))
                                      ([mlw:proxy_symbol]
                                      [introduced] temp___552) 1 26)
                                   (Standard__string.first
                                      ([mlw:proxy_symbol]
                                      [introduced] temp___551))
                                   ([sloc:station.adb:157] ([comment:         Put_Line(S.Crew(CM).Name'Image & " IS ALREADY ON A SPACEWALK");                                         ^ station.adb:157:41:VC_RANGE_CHECK]
                                                           [GP_Id:17]
                                                           [vc:annotation]
                                                           [GP_Reason:VC_RANGE_CHECK]
                                                           [GP_Shape:if__call_put_line__concat]
                                                           [GP_Sloc:station.adb:157:41] (
                                                           Standard__positive.range_check_
                                                             (((Standard__string.first
                                                                  ([mlw:proxy_symbol]
                                                                  [introduced] temp___551))
                                                                 + ((_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___551))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___551)))
                                                                    + (
                                                                    _gnatprove_standard.Integer.length
                                                                    1 26)))
                                                                - 1)))))))));
                             ()));
                             ([GP_Sloc:station.adb:158:10] ([sloc:station.adb:158] raise Return__exc)))));
([GP_Sloc:station.adb:162:25] ([sloc:station.adb:162] (let ([mlw:proxy_symbol]
                              [introduced] temp___559) =
                              (let ([mlw:proxy_symbol]
                                [introduced] temp___558) =
                                ( --pp_record_aggregate NOT IMPLEMENTED) in
                                abstract ensures
                                { True } begin  (let _ =
                                               ([mlw:proxy_symbol]
                                                 [introduced] temp___558).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                                               in ())  end;
                                --pp_record_update NOT IMPLEMENTED)
                              in (
                              Station__attempt_spacewalk__s.s__split_fields
                              :=
                              ([mlw:proxy_symbol]
                                [introduced] temp___559).Station__station_record.__split_fields))));
([GP_Sloc:station.adb:164:26] ([sloc:station.adb:164] (let ([mlw:proxy_symbol]
                              [introduced] temp___560) = 1 in
                              (let ([mlw:proxy_symbol]
                              [introduced] temp___561) = 3 in
                              (* Translation of an unrolled Ada loop from station.adb:164 *);
                              (try
                              (* Unrolling of the loop statements of loop station.adb:164 *);
                                ( Station__attempt_spacewalk__L_5__i.i :=
                                1);
                                ();
                                ([GP_Sloc:station.adb:165:7] ([sloc:station.adb:165] 
                                                             (if
                                                             ([sloc:station.adb:165] ([branch_id=1332]
                                                             _gnatprove_standard.Main.spark__branch
                                                             :=
                                                             (_gnatprove_standard.Boolean.andb
                                                                (!Station__attempt_spacewalk__L_5__i.i
                                                                   <> Station__attempt_spacewalk__cm.cm)
                                                                ((Station__crewmemberstatus__rep.to_rep
                                                                    ( (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___564)
                                                                    =
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                                                                    in
                                                                    (
                                                                    Array__Int__Station__crew_record.get
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___564)
                                                                    !Station__attempt_spacewalk__L_5__i.i))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__status)
                                                                   <> 0))));
                                                             ([branch_id=1332] _gnatprove_standard.Main.spark__branch).bool__content
                                                             then
                                                             ();
                                                             ([GP_Sloc:station.adb:166:13] 
                                                             ([sloc:station.adb:166] ()));
                                                             ([GP_Sloc:station.adb:166:10] 
                                                             ([sloc:station.adb:166] 
                                                             (if
                                                             ([sloc:station.adb:166] ([branch_id=1346]
                                                             _gnatprove_standard.Main.spark__branch
                                                             :=
                                                             (!Station__attempt_spacewalk__top_cm.top_cm
                                                                = 0)));
                                                             ([branch_id=1346] _gnatprove_standard.Main.spark__branch).bool__content
                                                             then
                                                             ();
                                                             ([GP_Sloc:station.adb:167:13] 
                                                             ([sloc:station.adb:167] ()));
                                                             ([GP_Sloc:station.adb:167:20] 
                                                             ([sloc:station.adb:167] (
                                                             Station__attempt_spacewalk__top_cm.top_cm
                                                             :=
                                                             ( !Station__attempt_spacewalk__L_5__i.i))))
                                                              else
                                                             ();
                                                             ([GP_Sloc:station.adb:169:13] 
                                                             ([sloc:station.adb:169] ()));
                                                             ([GP_Sloc:station.adb:169:23] 
                                                             ([sloc:station.adb:169] (
                                                             Station__attempt_spacewalk__bottom_cm.bottom_cm
                                                             :=
                                                             ( !Station__attempt_spacewalk__L_5__i.i))));
                                                             ([GP_Sloc:station.adb:170:13] 
                                                             ([sloc:station.adb:170] raise Station__attempt_spacewalk__L_5.L_5)))))
                                                              else ())));
                                ( Station__attempt_spacewalk__L_5__i.i :=
                                2);
                                ();
                                ([GP_Sloc:station.adb:165:7] ([sloc:station.adb:165] 
                                                             (if
                                                             ([sloc:station.adb:165] ([branch_id=1332]
                                                             _gnatprove_standard.Main.spark__branch
                                                             :=
                                                             (_gnatprove_standard.Boolean.andb
                                                                (!Station__attempt_spacewalk__L_5__i.i
                                                                   <> Station__attempt_spacewalk__cm.cm)
                                                                ((Station__crewmemberstatus__rep.to_rep
                                                                    ( (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___564)
                                                                    =
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                                                                    in
                                                                    (
                                                                    Array__Int__Station__crew_record.get
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___564)
                                                                    !Station__attempt_spacewalk__L_5__i.i))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__status)
                                                                   <> 0))));
                                                             ([branch_id=1332] _gnatprove_standard.Main.spark__branch).bool__content
                                                             then
                                                             ();
                                                             ([GP_Sloc:station.adb:166:13] 
                                                             ([sloc:station.adb:166] ()));
                                                             ([GP_Sloc:station.adb:166:10] 
                                                             ([sloc:station.adb:166] 
                                                             (if
                                                             ([sloc:station.adb:166] ([branch_id=1346]
                                                             _gnatprove_standard.Main.spark__branch
                                                             :=
                                                             (!Station__attempt_spacewalk__top_cm.top_cm
                                                                = 0)));
                                                             ([branch_id=1346] _gnatprove_standard.Main.spark__branch).bool__content
                                                             then
                                                             ();
                                                             ([GP_Sloc:station.adb:167:13] 
                                                             ([sloc:station.adb:167] ()));
                                                             ([GP_Sloc:station.adb:167:20] 
                                                             ([sloc:station.adb:167] (
                                                             Station__attempt_spacewalk__top_cm.top_cm
                                                             :=
                                                             ( !Station__attempt_spacewalk__L_5__i.i))))
                                                              else
                                                             ();
                                                             ([GP_Sloc:station.adb:169:13] 
                                                             ([sloc:station.adb:169] ()));
                                                             ([GP_Sloc:station.adb:169:23] 
                                                             ([sloc:station.adb:169] (
                                                             Station__attempt_spacewalk__bottom_cm.bottom_cm
                                                             :=
                                                             ( !Station__attempt_spacewalk__L_5__i.i))));
                                                             ([GP_Sloc:station.adb:170:13] 
                                                             ([sloc:station.adb:170] raise Station__attempt_spacewalk__L_5.L_5)))))
                                                              else ())));
                                ( Station__attempt_spacewalk__L_5__i.i :=
                                3);
                                ();
                                ([GP_Sloc:station.adb:165:7] ([sloc:station.adb:165] 
                                                             (if
                                                             ([sloc:station.adb:165] ([branch_id=1332]
                                                             _gnatprove_standard.Main.spark__branch
                                                             :=
                                                             (_gnatprove_standard.Boolean.andb
                                                                (!Station__attempt_spacewalk__L_5__i.i
                                                                   <> Station__attempt_spacewalk__cm.cm)
                                                                ((Station__crewmemberstatus__rep.to_rep
                                                                    ( (let ([mlw:proxy_symbol]
                                                                    [introduced] temp___564)
                                                                    =
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                                                                    in
                                                                    (
                                                                    Array__Int__Station__crew_record.get
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___564)
                                                                    !Station__attempt_spacewalk__L_5__i.i))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__status)
                                                                   <> 0))));
                                                             ([branch_id=1332] _gnatprove_standard.Main.spark__branch).bool__content
                                                             then
                                                             ();
                                                             ([GP_Sloc:station.adb:166:13] 
                                                             ([sloc:station.adb:166] ()));
                                                             ([GP_Sloc:station.adb:166:10] 
                                                             ([sloc:station.adb:166] 
                                                             (if
                                                             ([sloc:station.adb:166] ([branch_id=1346]
                                                             _gnatprove_standard.Main.spark__branch
                                                             :=
                                                             (!Station__attempt_spacewalk__top_cm.top_cm
                                                                = 0)));
                                                             ([branch_id=1346] _gnatprove_standard.Main.spark__branch).bool__content
                                                             then
                                                             ();
                                                             ([GP_Sloc:station.adb:167:13] 
                                                             ([sloc:station.adb:167] ()));
                                                             ([GP_Sloc:station.adb:167:20] 
                                                             ([sloc:station.adb:167] (
                                                             Station__attempt_spacewalk__top_cm.top_cm
                                                             :=
                                                             ( !Station__attempt_spacewalk__L_5__i.i))))
                                                              else
                                                             ();
                                                             ([GP_Sloc:station.adb:169:13] 
                                                             ([sloc:station.adb:169] ()));
                                                             ([GP_Sloc:station.adb:169:23] 
                                                             ([sloc:station.adb:169] (
                                                             Station__attempt_spacewalk__bottom_cm.bottom_cm
                                                             :=
                                                             ( !Station__attempt_spacewalk__L_5__i.i))));
                                                             ([GP_Sloc:station.adb:170:13] 
                                                             ([sloc:station.adb:170] raise Station__attempt_spacewalk__L_5.L_5)))))
                                                              else ()))) with
                              | Station__attempt_spacewalk__L_5.L_5  -> ())))));
([GP_Sloc:station.adb:176:14] ([sloc:station.adb:176] ()));
([GP_Sloc:station.adb:176:29] ([sloc:station.adb:176] (let ([mlw:proxy_symbol]
                              [introduced] temp___570) =
                              (let ([mlw:proxy_symbol]
                                [introduced] temp___569) =
                                ( --pp_record_aggregate NOT IMPLEMENTED) in
                                abstract ensures
                                { True } begin  (let _ =
                                               ([mlw:proxy_symbol]
                                                 [introduced] temp___569).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                                               in ())  end;
                                --pp_record_update NOT IMPLEMENTED)
                              in (
                              Station__attempt_spacewalk__s.s__split_fields
                              :=
                              ([mlw:proxy_symbol]
                                [introduced] temp___570).Station__station_record.__split_fields))));
([GP_Sloc:station.adb:177:14] ([sloc:station.adb:177] ()));
([GP_Sloc:station.adb:177:31] ([sloc:station.adb:177] (let ([mlw:proxy_symbol]
                              [introduced] temp___577) =
                              (let ([mlw:proxy_symbol]
                                [introduced] temp___576) =
                                ( --pp_record_aggregate NOT IMPLEMENTED) in
                                abstract ensures
                                { True } begin  (let _ =
                                               ([mlw:proxy_symbol]
                                                 [introduced] temp___576).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                                               in ())  end;
                                --pp_record_update NOT IMPLEMENTED)
                              in (
                              Station__attempt_spacewalk__s.s__split_fields
                              :=
                              ([mlw:proxy_symbol]
                                [introduced] temp___577).Station__station_record.__split_fields))));
([GP_Sloc:station.adb:180:14] ([sloc:station.adb:180] ()));
([GP_Sloc:station.adb:180:32] ([sloc:station.adb:180] (let ([mlw:proxy_symbol]
                              [introduced] temp___583) =
                              (let ([mlw:proxy_symbol]
                                [introduced] temp___582) =
                                ( --pp_record_aggregate NOT IMPLEMENTED) in
                                abstract ensures
                                { True } begin  (let _ =
                                               ([mlw:proxy_symbol]
                                                 [introduced] temp___582).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                                               in ())  end;
                                --pp_record_update NOT IMPLEMENTED)
                              in (
                              Station__attempt_spacewalk__s.s__split_fields
                              :=
                              ([mlw:proxy_symbol]
                                [introduced] temp___583).Station__station_record.__split_fields))));
([GP_Sloc:station.adb:181:14] ([sloc:station.adb:181] ()));
([GP_Sloc:station.adb:181:34] ([sloc:station.adb:181] (let ([mlw:proxy_symbol]
                              [introduced] temp___590) =
                              (let ([mlw:proxy_symbol]
                                [introduced] temp___589) =
                                ( --pp_record_aggregate NOT IMPLEMENTED) in
                                abstract ensures
                                { True } begin  (let _ =
                                               ([mlw:proxy_symbol]
                                                 [introduced] temp___589).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                                               in ())  end;
                                --pp_record_update NOT IMPLEMENTED)
                              in (
                              Station__attempt_spacewalk__s.s__split_fields
                              :=
                              ([mlw:proxy_symbol]
                                [introduced] temp___590).Station__station_record.__split_fields))));
([GP_Sloc:station.adb:183:7] ([sloc:station.adb:183] ()));
([GP_Sloc:station.adb:183:7] ([sloc:station.adb:183] ( any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                             post {} return unit);
(Ada___ada__text_io__put_line__2___axiom.put_line (let ([mlw:proxy_symbol]
   [introduced] temp___600) =
   (Temp___String_Literal_591.temp___String_Literal_591 ()) in
   (let ([mlw:proxy_symbol] [introduced] temp___599) =
   (let ([mlw:proxy_symbol] [introduced] temp___598) =
     (Standard_String__Img.to_string
        (Station__module.attr__ATTRIBUTE_IMAGE
           (Station__module__rep.to_rep
              ( (let ([mlw:proxy_symbol] [introduced] temp___592) =
              ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
              in
              (Array__Int__Station__crew_record.get ([mlw:proxy_symbol]
                 [introduced] temp___592) assert
                 { ([sloc:station.adb:183] ([GP_Shape:call_put_line__concat__concat__image_ref__selectcomp__ixdcomp]
                                           [comment:      Put_Line(S.Crew(Top_CM).Name'Image & " Is moving to the " & S.Crew(Top_CM).Location'Image & " Module...");                                                                          ^ station.adb:183:74:VC_INDEX_CHECK]
                                           [vc:annotation]
                                           [GP_Sloc:station.adb:183:74]
                                           [GP_Reason:VC_INDEX_CHECK]
                                           [GP_Id:24] ((Station__Tcrew_arrayD1.first
                                                          <= !Station__attempt_spacewalk__top_cm.top_cm)
                                                         /\
                                                         (!Station__attempt_spacewalk__top_cm.top_cm
                                                            <= Station__Tcrew_arrayD1.last)))) };
                 !Station__attempt_spacewalk__top_cm.top_cm))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__location))
        2040) in (let ([mlw:proxy_symbol] [introduced] temp___597) =
     (let ([mlw:proxy_symbol] [introduced] temp___596) =
       (Temp___String_Literal_593.temp___String_Literal_593 ()) in
       (let ([mlw:proxy_symbol] [introduced] temp___595) =
       (Standard_String__Img.to_string
          (Station__crewmember.attr__ATTRIBUTE_IMAGE
             (Station__crewmember__rep.to_rep
                ( (let ([mlw:proxy_symbol] [introduced] temp___594) =
                ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                in
                (Array__Int__Station__crew_record.get ([mlw:proxy_symbol]
                   [introduced] temp___594) assert
                   { ([sloc:station.adb:183] ([GP_Sloc:station.adb:183:23]
                                             [vc:annotation]
                                             [GP_Reason:VC_INDEX_CHECK]
                                             [GP_Id:25]
                                             [GP_Shape:call_put_line__concat__concat__concat__image_ref__selectcomp__ixdcomp]
                                             [comment:      Put_Line(S.Crew(Top_CM).Name'Image & " Is moving to the " & S.Crew(Top_CM).Location'Image & " Module...");                       ^ station.adb:183:23:VC_INDEX_CHECK] (
                                             (Station__Tcrew_arrayD1.first
                                                <= !Station__attempt_spacewalk__top_cm.top_cm)
                                               /\
                                               (!Station__attempt_spacewalk__top_cm.top_cm
                                                  <= Station__Tcrew_arrayD1.last)))) };
                   !Station__attempt_spacewalk__top_cm.top_cm))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__name))
          2040) in
       (if
       ((Standard__string.length ([mlw:proxy_symbol] [introduced] temp___595))
          = 0)
       then
       (Standard__string.of_array ([mlw:proxy_symbol]
          [introduced] temp___596) 1 18)
        else
       (Standard__string.of_array
          (Array__Int__Standard__character__Concat.concat
             (Standard__string.to_array ([mlw:proxy_symbol]
                [introduced] temp___595))
             (Standard__string.first ([mlw:proxy_symbol]
                [introduced] temp___595))
             (Standard__string.last ([mlw:proxy_symbol]
                [introduced] temp___595)) ([mlw:proxy_symbol]
             [introduced] temp___596) 1 18)
          (Standard__string.first ([mlw:proxy_symbol]
             [introduced] temp___595))
          ([sloc:station.adb:183] ([vc:annotation]
                                  [GP_Sloc:station.adb:183:42]
                                  [GP_Reason:VC_RANGE_CHECK]
                                  [GP_Shape:call_put_line__concat__concat__concat]
                                  [comment:      Put_Line(S.Crew(Top_CM).Name'Image & " Is moving to the " & S.Crew(Top_CM).Location'Image & " Module...");                                          ^ station.adb:183:42:VC_RANGE_CHECK]
                                  [GP_Id:26] (Standard__positive.range_check_
                                                (((Standard__string.first
                                                     ([mlw:proxy_symbol]
                                                     [introduced] temp___595))
                                                    + ((_gnatprove_standard.Integer.length
                                                          (Standard__string.first
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___595))
                                                          (Standard__string.last
                                                             ([mlw:proxy_symbol]
                                                             [introduced] temp___595)))
                                                         + (_gnatprove_standard.Integer.length
                                                              1 18))) - 1))))))))
     in
     (if
     ((Standard__string.length ([mlw:proxy_symbol] [introduced] temp___597))
        = 0)
     then
     (Standard__string.of_array
        (Standard__string.to_array ([mlw:proxy_symbol]
           [introduced] temp___598))
        (Standard__string.first ([mlw:proxy_symbol] [introduced] temp___598))
        (Standard__string.last ([mlw:proxy_symbol] [introduced] temp___598)))
      else
     (Standard__string.of_array
        (Array__Int__Standard__character__Concat.concat
           (Standard__string.to_array ([mlw:proxy_symbol]
              [introduced] temp___597))
           (Standard__string.first ([mlw:proxy_symbol]
              [introduced] temp___597))
           (Standard__string.last ([mlw:proxy_symbol]
              [introduced] temp___597))
           (Standard__string.to_array ([mlw:proxy_symbol]
              [introduced] temp___598))
           (Standard__string.first ([mlw:proxy_symbol]
              [introduced] temp___598))
           (Standard__string.last ([mlw:proxy_symbol]
              [introduced] temp___598)))
        (Standard__string.first ([mlw:proxy_symbol] [introduced] temp___597))
        ([sloc:station.adb:183] ([comment:      Put_Line(S.Crew(Top_CM).Name'Image & " Is moving to the " & S.Crew(Top_CM).Location'Image & " Module...");                                                                 ^ station.adb:183:65:VC_RANGE_CHECK]
                                [GP_Shape:call_put_line__concat__concat]
                                [vc:annotation] [GP_Reason:VC_RANGE_CHECK]
                                [GP_Id:27]
                                [GP_Sloc:station.adb:183:65] (Standard__positive.range_check_
                                                                (((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___597))
                                                                    + (
                                                                    (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___597))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___597)))
                                                                    + (
                                                                    _gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___598))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___598)))))
                                                                   - 1))))))))
   in
   (if
   ((Standard__string.length ([mlw:proxy_symbol] [introduced] temp___599))
      = 0)
   then
   (Standard__string.of_array ([mlw:proxy_symbol] [introduced] temp___600) 1
      10)
    else
   (Standard__string.of_array
      (Array__Int__Standard__character__Concat.concat
         (Standard__string.to_array ([mlw:proxy_symbol]
            [introduced] temp___599))
         (Standard__string.first ([mlw:proxy_symbol] [introduced] temp___599))
         (Standard__string.last ([mlw:proxy_symbol] [introduced] temp___599))
         ([mlw:proxy_symbol] [introduced] temp___600) 1 10)
      (Standard__string.first ([mlw:proxy_symbol] [introduced] temp___599))
      ([sloc:station.adb:183] ([comment:      Put_Line(S.Crew(Top_CM).Name'Image & " Is moving to the " & S.Crew(Top_CM).Location'Image & " Module...");                                                                                                 ^ station.adb:183:97:VC_RANGE_CHECK]
                              [GP_Sloc:station.adb:183:97] [vc:annotation]
                              [GP_Reason:VC_RANGE_CHECK]
                              [GP_Shape:call_put_line__concat]
                              [GP_Id:28] (Standard__positive.range_check_
                                            (((Standard__string.first
                                                 ([mlw:proxy_symbol]
                                                 [introduced] temp___599))
                                                + ((_gnatprove_standard.Integer.length
                                                      (Standard__string.first
                                                         ([mlw:proxy_symbol]
                                                         [introduced] temp___599))
                                                      (Standard__string.last
                                                         ([mlw:proxy_symbol]
                                                         [introduced] temp___599)))
                                                     + (_gnatprove_standard.Integer.length
                                                          1 10))) - 1)))))))));
()));
([GP_Sloc:station.adb:184:7] ([sloc:station.adb:184] abstract ensures
                             { True } begin  (let _ = ( 800000000) in ())  end));
([GP_Sloc:station.adb:185:7] ([sloc:station.adb:185] abstract ensures
                             { True } begin  (let _ = ( 800000000) in ())  end));
([GP_Sloc:station.adb:186:7] ([sloc:station.adb:186] ()));
([GP_Sloc:station.adb:186:7] ([sloc:station.adb:186] ( any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                             post {} return unit);
(Ada___ada__text_io__put_line__2___axiom.put_line (let ([mlw:proxy_symbol]
   [introduced] temp___610) =
   (Temp___String_Literal_601.temp___String_Literal_601 ()) in
   (let ([mlw:proxy_symbol] [introduced] temp___609) =
   (let ([mlw:proxy_symbol] [introduced] temp___608) =
     (Standard_String__Img.to_string
        (Station__module.attr__ATTRIBUTE_IMAGE
           (Station__module__rep.to_rep
              ( (let ([mlw:proxy_symbol] [introduced] temp___602) =
              ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
              in
              (Array__Int__Station__crew_record.get ([mlw:proxy_symbol]
                 [introduced] temp___602) assert
                 { ([sloc:station.adb:186] ([GP_Sloc:station.adb:186:77]
                                           [GP_Shape:call_put_line__concat__concat__image_ref__selectcomp__ixdcomp]
                                           [vc:annotation]
                                           [comment:      Put_Line(S.Crew(Bottom_CM).Name'Image & " Is moving to the " & S.Crew(Bottom_CM).Location'Image & " Module...");                                                                             ^ station.adb:186:77:VC_INDEX_CHECK]
                                           [GP_Reason:VC_INDEX_CHECK]
                                           [GP_Id:29] ((Station__Tcrew_arrayD1.first
                                                          <= !Station__attempt_spacewalk__bottom_cm.bottom_cm)
                                                         /\
                                                         (!Station__attempt_spacewalk__bottom_cm.bottom_cm
                                                            <= Station__Tcrew_arrayD1.last)))) };
                 !Station__attempt_spacewalk__bottom_cm.bottom_cm))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__location))
        2040) in (let ([mlw:proxy_symbol] [introduced] temp___607) =
     (let ([mlw:proxy_symbol] [introduced] temp___606) =
       (Temp___String_Literal_603.temp___String_Literal_603 ()) in
       (let ([mlw:proxy_symbol] [introduced] temp___605) =
       (Standard_String__Img.to_string
          (Station__crewmember.attr__ATTRIBUTE_IMAGE
             (Station__crewmember__rep.to_rep
                ( (let ([mlw:proxy_symbol] [introduced] temp___604) =
                ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                in
                (Array__Int__Station__crew_record.get ([mlw:proxy_symbol]
                   [introduced] temp___604) assert
                   { ([sloc:station.adb:186] ([vc:annotation]
                                             [GP_Sloc:station.adb:186:23]
                                             [GP_Id:30]
                                             [GP_Reason:VC_INDEX_CHECK]
                                             [GP_Shape:call_put_line__concat__concat__concat__image_ref__selectcomp__ixdcomp]
                                             [comment:      Put_Line(S.Crew(Bottom_CM).Name'Image & " Is moving to the " & S.Crew(Bottom_CM).Location'Image & " Module...");                       ^ station.adb:186:23:VC_INDEX_CHECK] (
                                             (Station__Tcrew_arrayD1.first
                                                <= !Station__attempt_spacewalk__bottom_cm.bottom_cm)
                                               /\
                                               (!Station__attempt_spacewalk__bottom_cm.bottom_cm
                                                  <= Station__Tcrew_arrayD1.last)))) };
                   !Station__attempt_spacewalk__bottom_cm.bottom_cm))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__name))
          2040) in
       (if
       ((Standard__string.length ([mlw:proxy_symbol] [introduced] temp___605))
          = 0)
       then
       (Standard__string.of_array ([mlw:proxy_symbol]
          [introduced] temp___606) 1 18)
        else
       (Standard__string.of_array
          (Array__Int__Standard__character__Concat.concat
             (Standard__string.to_array ([mlw:proxy_symbol]
                [introduced] temp___605))
             (Standard__string.first ([mlw:proxy_symbol]
                [introduced] temp___605))
             (Standard__string.last ([mlw:proxy_symbol]
                [introduced] temp___605)) ([mlw:proxy_symbol]
             [introduced] temp___606) 1 18)
          (Standard__string.first ([mlw:proxy_symbol]
             [introduced] temp___605))
          ([sloc:station.adb:186] ([comment:      Put_Line(S.Crew(Bottom_CM).Name'Image & " Is moving to the " & S.Crew(Bottom_CM).Location'Image & " Module...");                                             ^ station.adb:186:45:VC_RANGE_CHECK]
                                  [vc:annotation] [GP_Id:31]
                                  [GP_Reason:VC_RANGE_CHECK]
                                  [GP_Shape:call_put_line__concat__concat__concat]
                                  [GP_Sloc:station.adb:186:45] (Standard__positive.range_check_
                                                                  (((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___605))
                                                                    + (
                                                                    (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___605))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___605)))
                                                                    + (
                                                                    _gnatprove_standard.Integer.length
                                                                    1 18)))
                                                                    - 1))))))))
     in
     (if
     ((Standard__string.length ([mlw:proxy_symbol] [introduced] temp___607))
        = 0)
     then
     (Standard__string.of_array
        (Standard__string.to_array ([mlw:proxy_symbol]
           [introduced] temp___608))
        (Standard__string.first ([mlw:proxy_symbol] [introduced] temp___608))
        (Standard__string.last ([mlw:proxy_symbol] [introduced] temp___608)))
      else
     (Standard__string.of_array
        (Array__Int__Standard__character__Concat.concat
           (Standard__string.to_array ([mlw:proxy_symbol]
              [introduced] temp___607))
           (Standard__string.first ([mlw:proxy_symbol]
              [introduced] temp___607))
           (Standard__string.last ([mlw:proxy_symbol]
              [introduced] temp___607))
           (Standard__string.to_array ([mlw:proxy_symbol]
              [introduced] temp___608))
           (Standard__string.first ([mlw:proxy_symbol]
              [introduced] temp___608))
           (Standard__string.last ([mlw:proxy_symbol]
              [introduced] temp___608)))
        (Standard__string.first ([mlw:proxy_symbol] [introduced] temp___607))
        ([sloc:station.adb:186] ([GP_Shape:call_put_line__concat__concat]
                                [GP_Sloc:station.adb:186:68] [vc:annotation]
                                [comment:      Put_Line(S.Crew(Bottom_CM).Name'Image & " Is moving to the " & S.Crew(Bottom_CM).Location'Image & " Module...");                                                                    ^ station.adb:186:68:VC_RANGE_CHECK]
                                [GP_Id:32]
                                [GP_Reason:VC_RANGE_CHECK] (Standard__positive.range_check_
                                                              (((Standard__string.first
                                                                   ([mlw:proxy_symbol]
                                                                   [introduced] temp___607))
                                                                  + (
                                                                  (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___607))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___607)))
                                                                    + (
                                                                    _gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___608))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___608)))))
                                                                 - 1))))))))
   in
   (if
   ((Standard__string.length ([mlw:proxy_symbol] [introduced] temp___609))
      = 0)
   then
   (Standard__string.of_array ([mlw:proxy_symbol] [introduced] temp___610) 1
      10)
    else
   (Standard__string.of_array
      (Array__Int__Standard__character__Concat.concat
         (Standard__string.to_array ([mlw:proxy_symbol]
            [introduced] temp___609))
         (Standard__string.first ([mlw:proxy_symbol] [introduced] temp___609))
         (Standard__string.last ([mlw:proxy_symbol] [introduced] temp___609))
         ([mlw:proxy_symbol] [introduced] temp___610) 1 10)
      (Standard__string.first ([mlw:proxy_symbol] [introduced] temp___609))
      ([sloc:station.adb:186] ([GP_Sloc:station.adb:186:103] [vc:annotation]
                              [GP_Id:33] [GP_Reason:VC_RANGE_CHECK]
                              [comment:      Put_Line(S.Crew(Bottom_CM).Name'Image & " Is moving to the " & S.Crew(Bottom_CM).Location'Image & " Module...");                                                                                                       ^ station.adb:186:103:VC_RANGE_CHECK]
                              [GP_Shape:call_put_line__concat] (Standard__positive.range_check_
                                                                  (((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___609))
                                                                    + (
                                                                    (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___609))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___609)))
                                                                    + (
                                                                    _gnatprove_standard.Integer.length
                                                                    1 10)))
                                                                    - 1)))))))));
()));
([GP_Sloc:station.adb:187:7] ([sloc:station.adb:187] abstract ensures
                             { True } begin  (let _ = ( 800000000) in ())  end));
([GP_Sloc:station.adb:188:7] ([sloc:station.adb:188] abstract ensures
                             { True } begin  (let _ = ( 800000000) in ())  end));
([GP_Sloc:station.adb:189:7] ([sloc:station.adb:189] ()));
([GP_Sloc:station.adb:189:7] ([sloc:station.adb:189] ( any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                             post {} return unit);
(Ada___ada__text_io__put_line__2___axiom.put_line (let ([mlw:proxy_symbol]
   [introduced] temp___612) =
   ( (Temp___String_Literal_611.temp___String_Literal_611 ())) in
   (Standard__string.of_array ([mlw:proxy_symbol] [introduced] temp___612) 1
      33)));
()));
([GP_Sloc:station.adb:191:7] ([sloc:station.adb:191] ()));
([GP_Sloc:station.adb:191:7] ([sloc:station.adb:191] (let ([mlw:proxy_symbol]
                             [introduced] temp___compl_613) =
                             ( --pp_record_aggregate NOT IMPLEMENTED) in
                             ( any --pp_effects NOT IMPLEMENTED pre {} post
                             {} return unit);
([sloc:station.adb:191] ([GP_Reason:VC_PRECONDITION]
                        [GP_Shape:call_open_door] [vc:annotation]
                        [GP_Sloc:station.adb:191:7] [GP_Id:34]
                        [comment:      Open_Door(S, 1);       ^ station.adb:191:7:VC_PRECONDITION] (
                        Station__open_door___axiom.open_door
                          Station__attempt_spacewalk__s.s__split_fields 
                          ( 1))));
())));
([GP_Sloc:station.adb:192:7] ([sloc:station.adb:192] abstract ensures
                             { True } begin  (let _ = ( 800000000) in ())  end));
([GP_Sloc:station.adb:193:7] ([sloc:station.adb:193] ()));
([GP_Sloc:station.adb:193:7] ([sloc:station.adb:193] ( any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                             post {} return unit);
(Ada___ada__text_io__put_line__2___axiom.put_line (let ([mlw:proxy_symbol]
   [introduced] temp___617) =
   (Temp___String_Literal_614.temp___String_Literal_614 ()) in
   (let ([mlw:proxy_symbol] [introduced] temp___616) =
   (Standard_String__Img.to_string
      (Station__crewmember.attr__ATTRIBUTE_IMAGE
         (Station__crewmember__rep.to_rep
            ( (let ([mlw:proxy_symbol] [introduced] temp___615) =
            ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
            in
            (Array__Int__Station__crew_record.get ([mlw:proxy_symbol]
               [introduced] temp___615) assert
               { ([sloc:station.adb:193] ([GP_Sloc:station.adb:193:23]
                                         [vc:annotation]
                                         [comment:      Put_Line(S.Crew(CM).Name'Image & " Is inside the airlock...");                       ^ station.adb:193:23:VC_INDEX_CHECK]
                                         [GP_Id:35]
                                         [GP_Reason:VC_INDEX_CHECK]
                                         [GP_Shape:call_put_line__concat__image_ref__selectcomp__ixdcomp] (
                                         (Station__Tcrew_arrayD1.first
                                            <= Station__attempt_spacewalk__cm.cm)
                                           /\
                                           (Station__attempt_spacewalk__cm.cm
                                              <= Station__Tcrew_arrayD1.last)))) };
               Station__attempt_spacewalk__cm.cm))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__name))
      2040) in
   (if
   ((Standard__string.length ([mlw:proxy_symbol] [introduced] temp___616))
      = 0)
   then
   (Standard__string.of_array ([mlw:proxy_symbol] [introduced] temp___617) 1
      25)
    else
   (Standard__string.of_array
      (Array__Int__Standard__character__Concat.concat
         (Standard__string.to_array ([mlw:proxy_symbol]
            [introduced] temp___616))
         (Standard__string.first ([mlw:proxy_symbol] [introduced] temp___616))
         (Standard__string.last ([mlw:proxy_symbol] [introduced] temp___616))
         ([mlw:proxy_symbol] [introduced] temp___617) 1 25)
      (Standard__string.first ([mlw:proxy_symbol] [introduced] temp___616))
      ([sloc:station.adb:193] ([GP_Sloc:station.adb:193:38] [vc:annotation]
                              [comment:      Put_Line(S.Crew(CM).Name'Image & " Is inside the airlock...");                                      ^ station.adb:193:38:VC_RANGE_CHECK]
                              [GP_Id:36] [GP_Reason:VC_RANGE_CHECK]
                              [GP_Shape:call_put_line__concat] (Standard__positive.range_check_
                                                                  (((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___616))
                                                                    + (
                                                                    (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___616))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___616)))
                                                                    + (
                                                                    _gnatprove_standard.Integer.length
                                                                    1 25)))
                                                                    - 1)))))))));
()));
([GP_Sloc:station.adb:194:7] ([sloc:station.adb:194] ()));
([GP_Sloc:station.adb:194:7] ([sloc:station.adb:194] ( any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                             post {} return unit);
(Ada___ada__text_io__put_line__2___axiom.put_line (let ([mlw:proxy_symbol]
   [introduced] temp___619) =
   ( (Temp___String_Literal_618.temp___String_Literal_618 ())) in
   (Standard__string.of_array ([mlw:proxy_symbol] [introduced] temp___619) 1
      0)));
()));
([GP_Sloc:station.adb:195:7] ([sloc:station.adb:195] abstract ensures
                             { True } begin  (let _ = ( 800000000) in ())  end));
([GP_Sloc:station.adb:196:7] ([sloc:station.adb:196] ()));
([GP_Sloc:station.adb:196:7] ([sloc:station.adb:196] (let ([mlw:proxy_symbol]
                             [introduced] temp___compl_620) =
                             ( --pp_record_aggregate NOT IMPLEMENTED) in
                             ( any --pp_effects NOT IMPLEMENTED pre {} post
                             {} return unit);
([sloc:station.adb:196] ([comment:      Open_Door(S, 2);       ^ station.adb:196:7:VC_PRECONDITION]
                        [GP_Reason:VC_PRECONDITION] [GP_Shape:call_open_door]
                        [vc:annotation] [GP_Id:37]
                        [GP_Sloc:station.adb:196:7] (Station__open_door___axiom.open_door
                                                       Station__attempt_spacewalk__s.s__split_fields
                                                       ( 2))));
())));
([GP_Sloc:station.adb:197:7] ([sloc:station.adb:197] abstract ensures
                             { True } begin  (let _ = ( 800000000) in ())  end));
([GP_Sloc:station.adb:198:7] ([sloc:station.adb:198] ()));
([GP_Sloc:station.adb:198:7] ([sloc:station.adb:198] ( any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                             post {} return unit);
(Ada___ada__text_io__put_line__2___axiom.put_line (let ([mlw:proxy_symbol]
   [introduced] temp___624) =
   (Temp___String_Literal_621.temp___String_Literal_621 ()) in
   (let ([mlw:proxy_symbol] [introduced] temp___623) =
   (Standard_String__Img.to_string
      (Station__crewmember.attr__ATTRIBUTE_IMAGE
         (Station__crewmember__rep.to_rep
            ( (let ([mlw:proxy_symbol] [introduced] temp___622) =
            ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
            in
            (Array__Int__Station__crew_record.get ([mlw:proxy_symbol]
               [introduced] temp___622) assert
               { ([sloc:station.adb:198] ([GP_Sloc:station.adb:198:23]
                                         [comment:      Put_Line(S.Crew(CM).Name'Image & " Has left the airlock...");                       ^ station.adb:198:23:VC_INDEX_CHECK]
                                         [vc:annotation] [GP_Id:38]
                                         [GP_Reason:VC_INDEX_CHECK]
                                         [GP_Shape:call_put_line__concat__image_ref__selectcomp__ixdcomp] (
                                         (Station__Tcrew_arrayD1.first
                                            <= Station__attempt_spacewalk__cm.cm)
                                           /\
                                           (Station__attempt_spacewalk__cm.cm
                                              <= Station__Tcrew_arrayD1.last)))) };
               Station__attempt_spacewalk__cm.cm))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__name))
      2040) in
   (if
   ((Standard__string.length ([mlw:proxy_symbol] [introduced] temp___623))
      = 0)
   then
   (Standard__string.of_array ([mlw:proxy_symbol] [introduced] temp___624) 1
      24)
    else
   (Standard__string.of_array
      (Array__Int__Standard__character__Concat.concat
         (Standard__string.to_array ([mlw:proxy_symbol]
            [introduced] temp___623))
         (Standard__string.first ([mlw:proxy_symbol] [introduced] temp___623))
         (Standard__string.last ([mlw:proxy_symbol] [introduced] temp___623))
         ([mlw:proxy_symbol] [introduced] temp___624) 1 24)
      (Standard__string.first ([mlw:proxy_symbol] [introduced] temp___623))
      ([sloc:station.adb:198] ([GP_Sloc:station.adb:198:38]
                              [comment:      Put_Line(S.Crew(CM).Name'Image & " Has left the airlock...");                                      ^ station.adb:198:38:VC_RANGE_CHECK]
                              [vc:annotation] [GP_Reason:VC_RANGE_CHECK]
                              [GP_Id:39]
                              [GP_Shape:call_put_line__concat] (Standard__positive.range_check_
                                                                  (((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___623))
                                                                    + (
                                                                    (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___623))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___623)))
                                                                    + (
                                                                    _gnatprove_standard.Integer.length
                                                                    1 24)))
                                                                    - 1)))))))));
()));
([GP_Sloc:station.adb:199:7] ([sloc:station.adb:199] ()));
([GP_Sloc:station.adb:199:7] ([sloc:station.adb:199] ( any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                             post {} return unit);
(Ada___ada__text_io__put_line__2___axiom.put_line (let ([mlw:proxy_symbol]
   [introduced] temp___626) =
   ( (Temp___String_Literal_625.temp___String_Literal_625 ())) in
   (Standard__string.of_array ([mlw:proxy_symbol] [introduced] temp___626) 1
      0)));
()));
([GP_Sloc:station.adb:200:7] ([sloc:station.adb:200] abstract ensures
                             { True } begin  (let _ = ( 800000000) in ())  end));
([GP_Sloc:station.adb:201:7] ([sloc:station.adb:201] ()));
([GP_Sloc:station.adb:201:7] ([sloc:station.adb:201] (let ([mlw:proxy_symbol]
                             [introduced] temp___compl_627) =
                             ( --pp_record_aggregate NOT IMPLEMENTED) in
                             ( any --pp_effects NOT IMPLEMENTED pre {} post
                             {} return unit);
([sloc:station.adb:201] ([GP_Reason:VC_PRECONDITION] [GP_Id:40]
                        [comment:      Seal_Airlock(S);       ^ station.adb:201:7:VC_PRECONDITION]
                        [GP_Shape:call_seal_airlock] [vc:annotation]
                        [GP_Sloc:station.adb:201:7] (Station__seal_airlock___axiom.seal_airlock
                                                       Station__attempt_spacewalk__s.s__split_fields)));
())));
([GP_Sloc:station.adb:202:7] ([sloc:station.adb:202] ()));
([GP_Sloc:station.adb:202:7] ([sloc:station.adb:202] ( any
                                                        --pp_effects NOT IMPLEMENTED
                                                        pre {}
                             post {} return unit);
(Ada___ada__text_io__put_line__2___axiom.put_line (let ([mlw:proxy_symbol]
   [introduced] temp___631) =
   (Temp___String_Literal_628.temp___String_Literal_628 ()) in
   (let ([mlw:proxy_symbol] [introduced] temp___630) =
   (Standard_String__Img.to_string
      (Station__crewmember.attr__ATTRIBUTE_IMAGE
         (Station__crewmember__rep.to_rep
            ( (let ([mlw:proxy_symbol] [introduced] temp___629) =
            ( --pp_record_aggregate NOT IMPLEMENTED).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
            in
            (Array__Int__Station__crew_record.get ([mlw:proxy_symbol]
               [introduced] temp___629) assert
               { ([sloc:station.adb:202] ([comment:      Put_Line(S.Crew(CM).Name'Image & " IS ON A SPACEWALK");                       ^ station.adb:202:23:VC_INDEX_CHECK]
                                         [GP_Id:41] [vc:annotation]
                                         [GP_Sloc:station.adb:202:23]
                                         [GP_Reason:VC_INDEX_CHECK]
                                         [GP_Shape:call_put_line__concat__image_ref__selectcomp__ixdcomp] (
                                         (Station__Tcrew_arrayD1.first
                                            <= Station__attempt_spacewalk__cm.cm)
                                           /\
                                           (Station__attempt_spacewalk__cm.cm
                                              <= Station__Tcrew_arrayD1.last)))) };
               Station__attempt_spacewalk__cm.cm))).Station__crew_record.__split_fields.Station__crew_record.rec__station__crew_record__name))
      2040) in
   (if
   ((Standard__string.length ([mlw:proxy_symbol] [introduced] temp___630))
      = 0)
   then
   (Standard__string.of_array ([mlw:proxy_symbol] [introduced] temp___631) 1
      18)
    else
   (Standard__string.of_array
      (Array__Int__Standard__character__Concat.concat
         (Standard__string.to_array ([mlw:proxy_symbol]
            [introduced] temp___630))
         (Standard__string.first ([mlw:proxy_symbol] [introduced] temp___630))
         (Standard__string.last ([mlw:proxy_symbol] [introduced] temp___630))
         ([mlw:proxy_symbol] [introduced] temp___631) 1 18)
      (Standard__string.first ([mlw:proxy_symbol] [introduced] temp___630))
      ([sloc:station.adb:202] ([GP_Id:42]
                              [comment:      Put_Line(S.Crew(CM).Name'Image & " IS ON A SPACEWALK");                                      ^ station.adb:202:38:VC_RANGE_CHECK]
                              [vc:annotation] [GP_Sloc:station.adb:202:38]
                              [GP_Reason:VC_RANGE_CHECK]
                              [GP_Shape:call_put_line__concat] (Standard__positive.range_check_
                                                                  (((Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___630))
                                                                    + (
                                                                    (_gnatprove_standard.Integer.length
                                                                    (Standard__string.first
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___630))
                                                                    (Standard__string.last
                                                                    ([mlw:proxy_symbol]
                                                                    [introduced] temp___630)))
                                                                    + (
                                                                    _gnatprove_standard.Integer.length
                                                                    1 18)))
                                                                    - 1)))))))));
()));
([GP_Sloc:station.adb:204:27] ([sloc:station.adb:204] (let ([mlw:proxy_symbol]
                              [introduced] temp___637) =
                              (let ([mlw:proxy_symbol]
                                [introduced] temp___636) =
                                ( --pp_record_aggregate NOT IMPLEMENTED) in
                                abstract ensures
                                { True } begin  (let _ =
                                               ([mlw:proxy_symbol]
                                                 [introduced] temp___636).Station__station_record.__split_fields.Station__station_record.rec__station__station_record__crew
                                               in ())  end;
                                --pp_record_update NOT IMPLEMENTED)
                              in (
                              Station__attempt_spacewalk__s.s__split_fields
                              :=
                              ([mlw:proxy_symbol]
                                [introduced] temp___637).Station__station_record.__split_fields))));
raise Return__exc with | Return__exc  -> ());
abstract ensures
{ True } begin  (let _ =
               (_gnatprove_standard.Boolean.andb
                  (Station__sealedinvariant___axiom.sealedinvariant ())
                  (Station__altitudeinvariant___axiom.altitudeinvariant ()))
               in ())  end

end
